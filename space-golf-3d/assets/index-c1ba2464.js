(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const r of document.querySelectorAll('link[rel="modulepreload"]'))i(r);new MutationObserver(r=>{for(const a of r)if(a.type==="childList")for(const o of a.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&i(o)}).observe(document,{childList:!0,subtree:!0});function n(r){const a={};return r.integrity&&(a.integrity=r.integrity),r.referrerPolicy&&(a.referrerPolicy=r.referrerPolicy),r.crossOrigin==="use-credentials"?a.credentials="include":r.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function i(r){if(r.ep)return;r.ep=!0;const a=n(r);fetch(r.href,a)}})();/**
 * @license
 * Copyright 2010-2023 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const wp="156",h1=0,bg=1,f1=2,o0=1,d1=2,Dr=3,da=0,ti=1,cr=2,ua=0,ao=1,Tg=2,Ag=3,Rg=4,p1=5,io=100,m1=101,v1=102,Lg=103,Cg=104,g1=200,_1=201,x1=202,y1=203,l0=204,c0=205,M1=206,E1=207,w1=208,S1=209,b1=210,T1=0,A1=1,R1=2,Gd=3,L1=4,C1=5,P1=6,U1=7,Sp=0,D1=1,I1=2,ha=0,F1=1,N1=2,O1=3,B1=4,z1=5,u0=300,lo=301,co=302,Hd=303,Vd=304,Uh=306,kd=1e3,tr=1001,Wd=1002,ei=1003,Pg=1004,nd=1005,zi=1006,G1=1007,Bl=1008,fa=1009,H1=1010,V1=1011,bp=1012,h0=1013,oa=1014,la=1015,zl=1016,f0=1017,d0=1018,Va=1020,k1=1021,nr=1023,W1=1024,X1=1025,ka=1026,uo=1027,Y1=1028,p0=1029,q1=1030,m0=1031,v0=1033,id=33776,rd=33777,ad=33778,sd=33779,Ug=35840,Dg=35841,Ig=35842,Fg=35843,$1=36196,Ng=37492,Og=37496,Bg=37808,zg=37809,Gg=37810,Hg=37811,Vg=37812,kg=37813,Wg=37814,Xg=37815,Yg=37816,qg=37817,$g=37818,jg=37819,Zg=37820,Kg=37821,od=36492,Jg=36494,Qg=36495,j1=36283,e_=36284,t_=36285,n_=36286,g0=3e3,Wa=3001,Z1=3200,K1=3201,_0=0,J1=1,Xa="",sn="srgb",hr="srgb-linear",Dh="display-p3",ld=7680,Q1=519,eA=512,tA=513,nA=514,iA=515,rA=516,aA=517,sA=518,oA=519,i_=35044,r_="300 es",Xd=1035,Ir=2e3,eh=2001;let Qo=class{addEventListener(t,n){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[t]===void 0&&(i[t]=[]),i[t].indexOf(n)===-1&&i[t].push(n)}hasEventListener(t,n){if(this._listeners===void 0)return!1;const i=this._listeners;return i[t]!==void 0&&i[t].indexOf(n)!==-1}removeEventListener(t,n){if(this._listeners===void 0)return;const r=this._listeners[t];if(r!==void 0){const a=r.indexOf(n);a!==-1&&r.splice(a,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const i=this._listeners[t.type];if(i!==void 0){t.target=this;const r=i.slice(0);for(let a=0,o=r.length;a<o;a++)r[a].call(this,t);t.target=null}}};const Hn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"],cd=Math.PI/180,Yd=180/Math.PI;function Uc(){const e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(Hn[e&255]+Hn[e>>8&255]+Hn[e>>16&255]+Hn[e>>24&255]+"-"+Hn[t&255]+Hn[t>>8&255]+"-"+Hn[t>>16&15|64]+Hn[t>>24&255]+"-"+Hn[n&63|128]+Hn[n>>8&255]+"-"+Hn[n>>16&255]+Hn[n>>24&255]+Hn[i&255]+Hn[i>>8&255]+Hn[i>>16&255]+Hn[i>>24&255]).toLowerCase()}function ui(e,t,n){return Math.max(t,Math.min(n,e))}function lA(e,t){return(e%t+t)%t}function ud(e,t,n){return(1-n)*e+n*t}function a_(e){return(e&e-1)===0&&e!==0}function qd(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}function Tl(e,t){switch(t.constructor){case Float32Array:return e;case Uint32Array:return e/4294967295;case Uint16Array:return e/65535;case Uint8Array:return e/255;case Int32Array:return Math.max(e/2147483647,-1);case Int16Array:return Math.max(e/32767,-1);case Int8Array:return Math.max(e/127,-1);default:throw new Error("Invalid component type.")}}function li(e,t){switch(t.constructor){case Float32Array:return e;case Uint32Array:return Math.round(e*4294967295);case Uint16Array:return Math.round(e*65535);case Uint8Array:return Math.round(e*255);case Int32Array:return Math.round(e*2147483647);case Int16Array:return Math.round(e*32767);case Int8Array:return Math.round(e*127);default:throw new Error("Invalid component type.")}}let Wt=class x0{constructor(t=0,n=0){x0.prototype.isVector2=!0,this.x=t,this.y=n}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,n){return this.x=t,this.y=n,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,n){switch(t){case 0:this.x=n;break;case 1:this.y=n;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,n){return this.x=t.x+n.x,this.y=t.y+n.y,this}addScaledVector(t,n){return this.x+=t.x*n,this.y+=t.y*n,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,n){return this.x=t.x-n.x,this.y=t.y-n.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const n=this.x,i=this.y,r=t.elements;return this.x=r[0]*n+r[3]*i+r[6],this.y=r[1]*n+r[4]*i+r[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,n){return this.x=Math.max(t.x,Math.min(n.x,this.x)),this.y=Math.max(t.y,Math.min(n.y,this.y)),this}clampScalar(t,n){return this.x=Math.max(t,Math.min(n,this.x)),this.y=Math.max(t,Math.min(n,this.y)),this}clampLength(t,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(n,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const n=Math.sqrt(this.lengthSq()*t.lengthSq());if(n===0)return Math.PI/2;const i=this.dot(t)/n;return Math.acos(ui(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const n=this.x-t.x,i=this.y-t.y;return n*n+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,n){return this.x+=(t.x-this.x)*n,this.y+=(t.y-this.y)*n,this}lerpVectors(t,n,i){return this.x=t.x+(n.x-t.x)*i,this.y=t.y+(n.y-t.y)*i,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,n=0){return this.x=t[n],this.y=t[n+1],this}toArray(t=[],n=0){return t[n]=this.x,t[n+1]=this.y,t}fromBufferAttribute(t,n){return this.x=t.getX(n),this.y=t.getY(n),this}rotateAround(t,n){const i=Math.cos(n),r=Math.sin(n),a=this.x-t.x,o=this.y-t.y;return this.x=a*i-o*r+t.x,this.y=a*r+o*i+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}},Ot=class y0{constructor(t,n,i,r,a,o,l,h,u){y0.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],t!==void 0&&this.set(t,n,i,r,a,o,l,h,u)}set(t,n,i,r,a,o,l,h,u){const f=this.elements;return f[0]=t,f[1]=r,f[2]=l,f[3]=n,f[4]=a,f[5]=h,f[6]=i,f[7]=o,f[8]=u,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const n=this.elements,i=t.elements;return n[0]=i[0],n[1]=i[1],n[2]=i[2],n[3]=i[3],n[4]=i[4],n[5]=i[5],n[6]=i[6],n[7]=i[7],n[8]=i[8],this}extractBasis(t,n,i){return t.setFromMatrix3Column(this,0),n.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const n=t.elements;return this.set(n[0],n[4],n[8],n[1],n[5],n[9],n[2],n[6],n[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,n){const i=t.elements,r=n.elements,a=this.elements,o=i[0],l=i[3],h=i[6],u=i[1],f=i[4],d=i[7],p=i[2],g=i[5],x=i[8],y=r[0],_=r[3],v=r[6],w=r[1],M=r[4],T=r[7],A=r[2],P=r[5],b=r[8];return a[0]=o*y+l*w+h*A,a[3]=o*_+l*M+h*P,a[6]=o*v+l*T+h*b,a[1]=u*y+f*w+d*A,a[4]=u*_+f*M+d*P,a[7]=u*v+f*T+d*b,a[2]=p*y+g*w+x*A,a[5]=p*_+g*M+x*P,a[8]=p*v+g*T+x*b,this}multiplyScalar(t){const n=this.elements;return n[0]*=t,n[3]*=t,n[6]*=t,n[1]*=t,n[4]*=t,n[7]*=t,n[2]*=t,n[5]*=t,n[8]*=t,this}determinant(){const t=this.elements,n=t[0],i=t[1],r=t[2],a=t[3],o=t[4],l=t[5],h=t[6],u=t[7],f=t[8];return n*o*f-n*l*u-i*a*f+i*l*h+r*a*u-r*o*h}invert(){const t=this.elements,n=t[0],i=t[1],r=t[2],a=t[3],o=t[4],l=t[5],h=t[6],u=t[7],f=t[8],d=f*o-l*u,p=l*h-f*a,g=u*a-o*h,x=n*d+i*p+r*g;if(x===0)return this.set(0,0,0,0,0,0,0,0,0);const y=1/x;return t[0]=d*y,t[1]=(r*u-f*i)*y,t[2]=(l*i-r*o)*y,t[3]=p*y,t[4]=(f*n-r*h)*y,t[5]=(r*a-l*n)*y,t[6]=g*y,t[7]=(i*h-u*n)*y,t[8]=(o*n-i*a)*y,this}transpose(){let t;const n=this.elements;return t=n[1],n[1]=n[3],n[3]=t,t=n[2],n[2]=n[6],n[6]=t,t=n[5],n[5]=n[7],n[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const n=this.elements;return t[0]=n[0],t[1]=n[3],t[2]=n[6],t[3]=n[1],t[4]=n[4],t[5]=n[7],t[6]=n[2],t[7]=n[5],t[8]=n[8],this}setUvTransform(t,n,i,r,a,o,l){const h=Math.cos(a),u=Math.sin(a);return this.set(i*h,i*u,-i*(h*o+u*l)+o+t,-r*u,r*h,-r*(-u*o+h*l)+l+n,0,0,1),this}scale(t,n){return this.premultiply(hd.makeScale(t,n)),this}rotate(t){return this.premultiply(hd.makeRotation(-t)),this}translate(t,n){return this.premultiply(hd.makeTranslation(t,n)),this}makeTranslation(t,n){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,n,0,0,1),this}makeRotation(t){const n=Math.cos(t),i=Math.sin(t);return this.set(n,-i,0,i,n,0,0,0,1),this}makeScale(t,n){return this.set(t,0,0,0,n,0,0,0,1),this}equals(t){const n=this.elements,i=t.elements;for(let r=0;r<9;r++)if(n[r]!==i[r])return!1;return!0}fromArray(t,n=0){for(let i=0;i<9;i++)this.elements[i]=t[i+n];return this}toArray(t=[],n=0){const i=this.elements;return t[n]=i[0],t[n+1]=i[1],t[n+2]=i[2],t[n+3]=i[3],t[n+4]=i[4],t[n+5]=i[5],t[n+6]=i[6],t[n+7]=i[7],t[n+8]=i[8],t}clone(){return new this.constructor().fromArray(this.elements)}};const hd=new Ot;function M0(e){for(let t=e.length-1;t>=0;--t)if(e[t]>=65535)return!0;return!1}function Gl(e){return document.createElementNS("http://www.w3.org/1999/xhtml",e)}function cA(){const e=Gl("canvas");return e.style.display="block",e}const s_={};function Fl(e){e in s_||(s_[e]=!0,console.warn(e))}function so(e){return e<.04045?e*.0773993808:Math.pow(e*.9478672986+.0521327014,2.4)}function fd(e){return e<.0031308?e*12.92:1.055*Math.pow(e,.41666)-.055}const uA=new Ot().fromArray([.8224621,.0331941,.0170827,.177538,.9668058,.0723974,-1e-7,1e-7,.9105199]),hA=new Ot().fromArray([1.2249401,-.0420569,-.0196376,-.2249404,1.0420571,-.0786361,1e-7,0,1.0982735]);function fA(e){return e.convertSRGBToLinear().applyMatrix3(hA)}function dA(e){return e.applyMatrix3(uA).convertLinearToSRGB()}const pA={[hr]:e=>e,[sn]:e=>e.convertSRGBToLinear(),[Dh]:fA},mA={[hr]:e=>e,[sn]:e=>e.convertLinearToSRGB(),[Dh]:dA},Zi={enabled:!0,get legacyMode(){return console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),!this.enabled},set legacyMode(e){console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),this.enabled=!e},get workingColorSpace(){return hr},set workingColorSpace(e){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(e,t,n){if(this.enabled===!1||t===n||!t||!n)return e;const i=pA[t],r=mA[n];if(i===void 0||r===void 0)throw new Error(`Unsupported color space conversion, "${t}" to "${n}".`);return r(i(e))},fromWorkingColorSpace:function(e,t){return this.convert(e,this.workingColorSpace,t)},toWorkingColorSpace:function(e,t){return this.convert(e,t,this.workingColorSpace)}};let Hs,E0=class{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let n;if(t instanceof HTMLCanvasElement)n=t;else{Hs===void 0&&(Hs=Gl("canvas")),Hs.width=t.width,Hs.height=t.height;const i=Hs.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height),n=Hs}return n.width>2048||n.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),n.toDataURL("image/jpeg",.6)):n.toDataURL("image/png")}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const n=Gl("canvas");n.width=t.width,n.height=t.height;const i=n.getContext("2d");i.drawImage(t,0,0,t.width,t.height);const r=i.getImageData(0,0,t.width,t.height),a=r.data;for(let o=0;o<a.length;o++)a[o]=so(a[o]/255)*255;return i.putImageData(r,0,0),n}else if(t.data){const n=t.data.slice(0);for(let i=0;i<n.length;i++)n instanceof Uint8Array||n instanceof Uint8ClampedArray?n[i]=Math.floor(so(n[i]/255)*255):n[i]=so(n[i]);return{data:n,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}},vA=0;class w0{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:vA++}),this.uuid=Uc(),this.data=t,this.version=0}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const n=t===void 0||typeof t=="string";if(!n&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const i={uuid:this.uuid,url:""},r=this.data;if(r!==null){let a;if(Array.isArray(r)){a=[];for(let o=0,l=r.length;o<l;o++)r[o].isDataTexture?a.push(dd(r[o].image)):a.push(dd(r[o]))}else a=dd(r);i.url=a}return n||(t.images[this.uuid]=i),i}}function dd(e){return typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap?E0.getDataURL(e):e.data?{data:Array.from(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let gA=0,vr=class ju extends Qo{constructor(t=ju.DEFAULT_IMAGE,n=ju.DEFAULT_MAPPING,i=tr,r=tr,a=zi,o=Bl,l=nr,h=fa,u=ju.DEFAULT_ANISOTROPY,f=Xa){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:gA++}),this.uuid=Uc(),this.name="",this.source=new w0(t),this.mipmaps=[],this.mapping=n,this.channel=0,this.wrapS=i,this.wrapT=r,this.magFilter=a,this.minFilter=o,this.anisotropy=u,this.format=l,this.internalFormat=null,this.type=h,this.offset=new Wt(0,0),this.repeat=new Wt(1,1),this.center=new Wt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Ot,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,typeof f=="string"?this.colorSpace=f:(Fl("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=f===Wa?sn:Xa),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const n=t===void 0||typeof t=="string";if(!n&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const i={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),n||(t.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==u0)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case kd:t.x=t.x-Math.floor(t.x);break;case tr:t.x=t.x<0?0:1;break;case Wd:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case kd:t.y=t.y-Math.floor(t.y);break;case tr:t.y=t.y<0?0:1;break;case Wd:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return Fl("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===sn?Wa:g0}set encoding(t){Fl("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=t===Wa?sn:Xa}};vr.DEFAULT_IMAGE=null;vr.DEFAULT_MAPPING=u0;vr.DEFAULT_ANISOTROPY=1;let hn=class S0{constructor(t=0,n=0,i=0,r=1){S0.prototype.isVector4=!0,this.x=t,this.y=n,this.z=i,this.w=r}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,n,i,r){return this.x=t,this.y=n,this.z=i,this.w=r,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,n){switch(t){case 0:this.x=n;break;case 1:this.y=n;break;case 2:this.z=n;break;case 3:this.w=n;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,n){return this.x=t.x+n.x,this.y=t.y+n.y,this.z=t.z+n.z,this.w=t.w+n.w,this}addScaledVector(t,n){return this.x+=t.x*n,this.y+=t.y*n,this.z+=t.z*n,this.w+=t.w*n,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,n){return this.x=t.x-n.x,this.y=t.y-n.y,this.z=t.z-n.z,this.w=t.w-n.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const n=this.x,i=this.y,r=this.z,a=this.w,o=t.elements;return this.x=o[0]*n+o[4]*i+o[8]*r+o[12]*a,this.y=o[1]*n+o[5]*i+o[9]*r+o[13]*a,this.z=o[2]*n+o[6]*i+o[10]*r+o[14]*a,this.w=o[3]*n+o[7]*i+o[11]*r+o[15]*a,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const n=Math.sqrt(1-t.w*t.w);return n<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/n,this.y=t.y/n,this.z=t.z/n),this}setAxisAngleFromRotationMatrix(t){let n,i,r,a;const h=t.elements,u=h[0],f=h[4],d=h[8],p=h[1],g=h[5],x=h[9],y=h[2],_=h[6],v=h[10];if(Math.abs(f-p)<.01&&Math.abs(d-y)<.01&&Math.abs(x-_)<.01){if(Math.abs(f+p)<.1&&Math.abs(d+y)<.1&&Math.abs(x+_)<.1&&Math.abs(u+g+v-3)<.1)return this.set(1,0,0,0),this;n=Math.PI;const M=(u+1)/2,T=(g+1)/2,A=(v+1)/2,P=(f+p)/4,b=(d+y)/4,U=(x+_)/4;return M>T&&M>A?M<.01?(i=0,r=.707106781,a=.707106781):(i=Math.sqrt(M),r=P/i,a=b/i):T>A?T<.01?(i=.707106781,r=0,a=.707106781):(r=Math.sqrt(T),i=P/r,a=U/r):A<.01?(i=.707106781,r=.707106781,a=0):(a=Math.sqrt(A),i=b/a,r=U/a),this.set(i,r,a,n),this}let w=Math.sqrt((_-x)*(_-x)+(d-y)*(d-y)+(p-f)*(p-f));return Math.abs(w)<.001&&(w=1),this.x=(_-x)/w,this.y=(d-y)/w,this.z=(p-f)/w,this.w=Math.acos((u+g+v-1)/2),this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,n){return this.x=Math.max(t.x,Math.min(n.x,this.x)),this.y=Math.max(t.y,Math.min(n.y,this.y)),this.z=Math.max(t.z,Math.min(n.z,this.z)),this.w=Math.max(t.w,Math.min(n.w,this.w)),this}clampScalar(t,n){return this.x=Math.max(t,Math.min(n,this.x)),this.y=Math.max(t,Math.min(n,this.y)),this.z=Math.max(t,Math.min(n,this.z)),this.w=Math.max(t,Math.min(n,this.w)),this}clampLength(t,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(n,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,n){return this.x+=(t.x-this.x)*n,this.y+=(t.y-this.y)*n,this.z+=(t.z-this.z)*n,this.w+=(t.w-this.w)*n,this}lerpVectors(t,n,i){return this.x=t.x+(n.x-t.x)*i,this.y=t.y+(n.y-t.y)*i,this.z=t.z+(n.z-t.z)*i,this.w=t.w+(n.w-t.w)*i,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,n=0){return this.x=t[n],this.y=t[n+1],this.z=t[n+2],this.w=t[n+3],this}toArray(t=[],n=0){return t[n]=this.x,t[n+1]=this.y,t[n+2]=this.z,t[n+3]=this.w,t}fromBufferAttribute(t,n){return this.x=t.getX(n),this.y=t.getY(n),this.z=t.getZ(n),this.w=t.getW(n),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}};class _A extends Qo{constructor(t=1,n=1,i={}){super(),this.isRenderTarget=!0,this.width=t,this.height=n,this.depth=1,this.scissor=new hn(0,0,t,n),this.scissorTest=!1,this.viewport=new hn(0,0,t,n);const r={width:t,height:n,depth:1};i.encoding!==void 0&&(Fl("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),i.colorSpace=i.encoding===Wa?sn:Xa),this.texture=new vr(r,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=i.generateMipmaps!==void 0?i.generateMipmaps:!1,this.texture.internalFormat=i.internalFormat!==void 0?i.internalFormat:null,this.texture.minFilter=i.minFilter!==void 0?i.minFilter:zi,this.depthBuffer=i.depthBuffer!==void 0?i.depthBuffer:!0,this.stencilBuffer=i.stencilBuffer!==void 0?i.stencilBuffer:!1,this.depthTexture=i.depthTexture!==void 0?i.depthTexture:null,this.samples=i.samples!==void 0?i.samples:0}setSize(t,n,i=1){(this.width!==t||this.height!==n||this.depth!==i)&&(this.width=t,this.height=n,this.depth=i,this.texture.image.width=t,this.texture.image.height=n,this.texture.image.depth=i,this.dispose()),this.viewport.set(0,0,t,n),this.scissor.set(0,0,t,n)}clone(){return new this.constructor().copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.scissor.copy(t.scissor),this.scissorTest=t.scissorTest,this.viewport.copy(t.viewport),this.texture=t.texture.clone(),this.texture.isRenderTargetTexture=!0;const n=Object.assign({},t.texture.image);return this.texture.source=new w0(n),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,t.depthTexture!==null&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}let Za=class extends _A{constructor(t=1,n=1,i={}){super(t,n,i),this.isWebGLRenderTarget=!0}};class b0 extends vr{constructor(t=null,n=1,i=1,r=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:n,height:i,depth:r},this.magFilter=ei,this.minFilter=ei,this.wrapR=tr,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class xA extends vr{constructor(t=null,n=1,i=1,r=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:n,height:i,depth:r},this.magFilter=ei,this.minFilter=ei,this.wrapR=tr,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}let Dc=class{constructor(t=0,n=0,i=0,r=1){this.isQuaternion=!0,this._x=t,this._y=n,this._z=i,this._w=r}static slerpFlat(t,n,i,r,a,o,l){let h=i[r+0],u=i[r+1],f=i[r+2],d=i[r+3];const p=a[o+0],g=a[o+1],x=a[o+2],y=a[o+3];if(l===0){t[n+0]=h,t[n+1]=u,t[n+2]=f,t[n+3]=d;return}if(l===1){t[n+0]=p,t[n+1]=g,t[n+2]=x,t[n+3]=y;return}if(d!==y||h!==p||u!==g||f!==x){let _=1-l;const v=h*p+u*g+f*x+d*y,w=v>=0?1:-1,M=1-v*v;if(M>Number.EPSILON){const A=Math.sqrt(M),P=Math.atan2(A,v*w);_=Math.sin(_*P)/A,l=Math.sin(l*P)/A}const T=l*w;if(h=h*_+p*T,u=u*_+g*T,f=f*_+x*T,d=d*_+y*T,_===1-l){const A=1/Math.sqrt(h*h+u*u+f*f+d*d);h*=A,u*=A,f*=A,d*=A}}t[n]=h,t[n+1]=u,t[n+2]=f,t[n+3]=d}static multiplyQuaternionsFlat(t,n,i,r,a,o){const l=i[r],h=i[r+1],u=i[r+2],f=i[r+3],d=a[o],p=a[o+1],g=a[o+2],x=a[o+3];return t[n]=l*x+f*d+h*g-u*p,t[n+1]=h*x+f*p+u*d-l*g,t[n+2]=u*x+f*g+l*p-h*d,t[n+3]=f*x-l*d-h*p-u*g,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,n,i,r){return this._x=t,this._y=n,this._z=i,this._w=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,n){const i=t._x,r=t._y,a=t._z,o=t._order,l=Math.cos,h=Math.sin,u=l(i/2),f=l(r/2),d=l(a/2),p=h(i/2),g=h(r/2),x=h(a/2);switch(o){case"XYZ":this._x=p*f*d+u*g*x,this._y=u*g*d-p*f*x,this._z=u*f*x+p*g*d,this._w=u*f*d-p*g*x;break;case"YXZ":this._x=p*f*d+u*g*x,this._y=u*g*d-p*f*x,this._z=u*f*x-p*g*d,this._w=u*f*d+p*g*x;break;case"ZXY":this._x=p*f*d-u*g*x,this._y=u*g*d+p*f*x,this._z=u*f*x+p*g*d,this._w=u*f*d-p*g*x;break;case"ZYX":this._x=p*f*d-u*g*x,this._y=u*g*d+p*f*x,this._z=u*f*x-p*g*d,this._w=u*f*d+p*g*x;break;case"YZX":this._x=p*f*d+u*g*x,this._y=u*g*d+p*f*x,this._z=u*f*x-p*g*d,this._w=u*f*d-p*g*x;break;case"XZY":this._x=p*f*d-u*g*x,this._y=u*g*d-p*f*x,this._z=u*f*x+p*g*d,this._w=u*f*d+p*g*x;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return n!==!1&&this._onChangeCallback(),this}setFromAxisAngle(t,n){const i=n/2,r=Math.sin(i);return this._x=t.x*r,this._y=t.y*r,this._z=t.z*r,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(t){const n=t.elements,i=n[0],r=n[4],a=n[8],o=n[1],l=n[5],h=n[9],u=n[2],f=n[6],d=n[10],p=i+l+d;if(p>0){const g=.5/Math.sqrt(p+1);this._w=.25/g,this._x=(f-h)*g,this._y=(a-u)*g,this._z=(o-r)*g}else if(i>l&&i>d){const g=2*Math.sqrt(1+i-l-d);this._w=(f-h)/g,this._x=.25*g,this._y=(r+o)/g,this._z=(a+u)/g}else if(l>d){const g=2*Math.sqrt(1+l-i-d);this._w=(a-u)/g,this._x=(r+o)/g,this._y=.25*g,this._z=(h+f)/g}else{const g=2*Math.sqrt(1+d-i-l);this._w=(o-r)/g,this._x=(a+u)/g,this._y=(h+f)/g,this._z=.25*g}return this._onChangeCallback(),this}setFromUnitVectors(t,n){let i=t.dot(n)+1;return i<Number.EPSILON?(i=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=i):(this._x=0,this._y=-t.z,this._z=t.y,this._w=i)):(this._x=t.y*n.z-t.z*n.y,this._y=t.z*n.x-t.x*n.z,this._z=t.x*n.y-t.y*n.x,this._w=i),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(ui(this.dot(t),-1,1)))}rotateTowards(t,n){const i=this.angleTo(t);if(i===0)return this;const r=Math.min(1,n/i);return this.slerp(t,r),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,n){const i=t._x,r=t._y,a=t._z,o=t._w,l=n._x,h=n._y,u=n._z,f=n._w;return this._x=i*f+o*l+r*u-a*h,this._y=r*f+o*h+a*l-i*u,this._z=a*f+o*u+i*h-r*l,this._w=o*f-i*l-r*h-a*u,this._onChangeCallback(),this}slerp(t,n){if(n===0)return this;if(n===1)return this.copy(t);const i=this._x,r=this._y,a=this._z,o=this._w;let l=o*t._w+i*t._x+r*t._y+a*t._z;if(l<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,l=-l):this.copy(t),l>=1)return this._w=o,this._x=i,this._y=r,this._z=a,this;const h=1-l*l;if(h<=Number.EPSILON){const g=1-n;return this._w=g*o+n*this._w,this._x=g*i+n*this._x,this._y=g*r+n*this._y,this._z=g*a+n*this._z,this.normalize(),this._onChangeCallback(),this}const u=Math.sqrt(h),f=Math.atan2(u,l),d=Math.sin((1-n)*f)/u,p=Math.sin(n*f)/u;return this._w=o*d+this._w*p,this._x=i*d+this._x*p,this._y=r*d+this._y*p,this._z=a*d+this._z*p,this._onChangeCallback(),this}slerpQuaternions(t,n,i){return this.copy(t).slerp(n,i)}random(){const t=Math.random(),n=Math.sqrt(1-t),i=Math.sqrt(t),r=2*Math.PI*Math.random(),a=2*Math.PI*Math.random();return this.set(n*Math.cos(r),i*Math.sin(a),i*Math.cos(a),n*Math.sin(r))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,n=0){return this._x=t[n],this._y=t[n+1],this._z=t[n+2],this._w=t[n+3],this._onChangeCallback(),this}toArray(t=[],n=0){return t[n]=this._x,t[n+1]=this._y,t[n+2]=this._z,t[n+3]=this._w,t}fromBufferAttribute(t,n){return this._x=t.getX(n),this._y=t.getY(n),this._z=t.getZ(n),this._w=t.getW(n),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}},ce=class T0{constructor(t=0,n=0,i=0){T0.prototype.isVector3=!0,this.x=t,this.y=n,this.z=i}set(t,n,i){return i===void 0&&(i=this.z),this.x=t,this.y=n,this.z=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,n){switch(t){case 0:this.x=n;break;case 1:this.y=n;break;case 2:this.z=n;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,n){return this.x=t.x+n.x,this.y=t.y+n.y,this.z=t.z+n.z,this}addScaledVector(t,n){return this.x+=t.x*n,this.y+=t.y*n,this.z+=t.z*n,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,n){return this.x=t.x-n.x,this.y=t.y-n.y,this.z=t.z-n.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,n){return this.x=t.x*n.x,this.y=t.y*n.y,this.z=t.z*n.z,this}applyEuler(t){return this.applyQuaternion(o_.setFromEuler(t))}applyAxisAngle(t,n){return this.applyQuaternion(o_.setFromAxisAngle(t,n))}applyMatrix3(t){const n=this.x,i=this.y,r=this.z,a=t.elements;return this.x=a[0]*n+a[3]*i+a[6]*r,this.y=a[1]*n+a[4]*i+a[7]*r,this.z=a[2]*n+a[5]*i+a[8]*r,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const n=this.x,i=this.y,r=this.z,a=t.elements,o=1/(a[3]*n+a[7]*i+a[11]*r+a[15]);return this.x=(a[0]*n+a[4]*i+a[8]*r+a[12])*o,this.y=(a[1]*n+a[5]*i+a[9]*r+a[13])*o,this.z=(a[2]*n+a[6]*i+a[10]*r+a[14])*o,this}applyQuaternion(t){const n=this.x,i=this.y,r=this.z,a=t.x,o=t.y,l=t.z,h=t.w,u=h*n+o*r-l*i,f=h*i+l*n-a*r,d=h*r+a*i-o*n,p=-a*n-o*i-l*r;return this.x=u*h+p*-a+f*-l-d*-o,this.y=f*h+p*-o+d*-a-u*-l,this.z=d*h+p*-l+u*-o-f*-a,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const n=this.x,i=this.y,r=this.z,a=t.elements;return this.x=a[0]*n+a[4]*i+a[8]*r,this.y=a[1]*n+a[5]*i+a[9]*r,this.z=a[2]*n+a[6]*i+a[10]*r,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,n){return this.x=Math.max(t.x,Math.min(n.x,this.x)),this.y=Math.max(t.y,Math.min(n.y,this.y)),this.z=Math.max(t.z,Math.min(n.z,this.z)),this}clampScalar(t,n){return this.x=Math.max(t,Math.min(n,this.x)),this.y=Math.max(t,Math.min(n,this.y)),this.z=Math.max(t,Math.min(n,this.z)),this}clampLength(t,n){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(n,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,n){return this.x+=(t.x-this.x)*n,this.y+=(t.y-this.y)*n,this.z+=(t.z-this.z)*n,this}lerpVectors(t,n,i){return this.x=t.x+(n.x-t.x)*i,this.y=t.y+(n.y-t.y)*i,this.z=t.z+(n.z-t.z)*i,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,n){const i=t.x,r=t.y,a=t.z,o=n.x,l=n.y,h=n.z;return this.x=r*h-a*l,this.y=a*o-i*h,this.z=i*l-r*o,this}projectOnVector(t){const n=t.lengthSq();if(n===0)return this.set(0,0,0);const i=t.dot(this)/n;return this.copy(t).multiplyScalar(i)}projectOnPlane(t){return pd.copy(this).projectOnVector(t),this.sub(pd)}reflect(t){return this.sub(pd.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const n=Math.sqrt(this.lengthSq()*t.lengthSq());if(n===0)return Math.PI/2;const i=this.dot(t)/n;return Math.acos(ui(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const n=this.x-t.x,i=this.y-t.y,r=this.z-t.z;return n*n+i*i+r*r}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,n,i){const r=Math.sin(n)*t;return this.x=r*Math.sin(i),this.y=Math.cos(n)*t,this.z=r*Math.cos(i),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,n,i){return this.x=t*Math.sin(n),this.y=i,this.z=t*Math.cos(n),this}setFromMatrixPosition(t){const n=t.elements;return this.x=n[12],this.y=n[13],this.z=n[14],this}setFromMatrixScale(t){const n=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),r=this.setFromMatrixColumn(t,2).length();return this.x=n,this.y=i,this.z=r,this}setFromMatrixColumn(t,n){return this.fromArray(t.elements,n*4)}setFromMatrix3Column(t,n){return this.fromArray(t.elements,n*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,n=0){return this.x=t[n],this.y=t[n+1],this.z=t[n+2],this}toArray(t=[],n=0){return t[n]=this.x,t[n+1]=this.y,t[n+2]=this.z,t}fromBufferAttribute(t,n){return this.x=t.getX(n),this.y=t.getY(n),this.z=t.getZ(n),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=(Math.random()-.5)*2,n=Math.random()*Math.PI*2,i=Math.sqrt(1-t**2);return this.x=i*Math.cos(n),this.y=i*Math.sin(n),this.z=t,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}};const pd=new ce,o_=new Dc;let Ic=class{constructor(t=new ce(1/0,1/0,1/0),n=new ce(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=n}set(t,n){return this.min.copy(t),this.max.copy(n),this}setFromArray(t){this.makeEmpty();for(let n=0,i=t.length;n<i;n+=3)this.expandByPoint(Rr.fromArray(t,n));return this}setFromBufferAttribute(t){this.makeEmpty();for(let n=0,i=t.count;n<i;n++)this.expandByPoint(Rr.fromBufferAttribute(t,n));return this}setFromPoints(t){this.makeEmpty();for(let n=0,i=t.length;n<i;n++)this.expandByPoint(t[n]);return this}setFromCenterAndSize(t,n){const i=Rr.copy(n).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}setFromObject(t,n=!1){return this.makeEmpty(),this.expandByObject(t,n)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,n=!1){if(t.updateWorldMatrix(!1,!1),t.boundingBox!==void 0)t.boundingBox===null&&t.computeBoundingBox(),Vs.copy(t.boundingBox),Vs.applyMatrix4(t.matrixWorld),this.union(Vs);else{const r=t.geometry;if(r!==void 0)if(n&&r.attributes!==void 0&&r.attributes.position!==void 0){const a=r.attributes.position;for(let o=0,l=a.count;o<l;o++)Rr.fromBufferAttribute(a,o).applyMatrix4(t.matrixWorld),this.expandByPoint(Rr)}else r.boundingBox===null&&r.computeBoundingBox(),Vs.copy(r.boundingBox),Vs.applyMatrix4(t.matrixWorld),this.union(Vs)}const i=t.children;for(let r=0,a=i.length;r<a;r++)this.expandByObject(i[r],n);return this}containsPoint(t){return!(t.x<this.min.x||t.x>this.max.x||t.y<this.min.y||t.y>this.max.y||t.z<this.min.z||t.z>this.max.z)}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,n){return n.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return!(t.max.x<this.min.x||t.min.x>this.max.x||t.max.y<this.min.y||t.min.y>this.max.y||t.max.z<this.min.z||t.min.z>this.max.z)}intersectsSphere(t){return this.clampPoint(t.center,Rr),Rr.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let n,i;return t.normal.x>0?(n=t.normal.x*this.min.x,i=t.normal.x*this.max.x):(n=t.normal.x*this.max.x,i=t.normal.x*this.min.x),t.normal.y>0?(n+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(n+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),t.normal.z>0?(n+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(n+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),n<=-t.constant&&i>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(Al),bu.subVectors(this.max,Al),ks.subVectors(t.a,Al),Ws.subVectors(t.b,Al),Xs.subVectors(t.c,Al),ta.subVectors(Ws,ks),na.subVectors(Xs,Ws),Da.subVectors(ks,Xs);let n=[0,-ta.z,ta.y,0,-na.z,na.y,0,-Da.z,Da.y,ta.z,0,-ta.x,na.z,0,-na.x,Da.z,0,-Da.x,-ta.y,ta.x,0,-na.y,na.x,0,-Da.y,Da.x,0];return!md(n,ks,Ws,Xs,bu)||(n=[1,0,0,0,1,0,0,0,1],!md(n,ks,Ws,Xs,bu))?!1:(Tu.crossVectors(ta,na),n=[Tu.x,Tu.y,Tu.z],md(n,ks,Ws,Xs,bu))}clampPoint(t,n){return n.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,Rr).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=this.getSize(Rr).length()*.5),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(Ar[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Ar[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Ar[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Ar[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Ar[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Ar[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Ar[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Ar[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Ar),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}};const Ar=[new ce,new ce,new ce,new ce,new ce,new ce,new ce,new ce],Rr=new ce,Vs=new Ic,ks=new ce,Ws=new ce,Xs=new ce,ta=new ce,na=new ce,Da=new ce,Al=new ce,bu=new ce,Tu=new ce,Ia=new ce;function md(e,t,n,i,r){for(let a=0,o=e.length-3;a<=o;a+=3){Ia.fromArray(e,a);const l=r.x*Math.abs(Ia.x)+r.y*Math.abs(Ia.y)+r.z*Math.abs(Ia.z),h=t.dot(Ia),u=n.dot(Ia),f=i.dot(Ia);if(Math.max(-Math.max(h,u,f),Math.min(h,u,f))>l)return!1}return!0}const yA=new Ic,Rl=new ce,vd=new ce;let Ih=class{constructor(t=new ce,n=-1){this.center=t,this.radius=n}set(t,n){return this.center.copy(t),this.radius=n,this}setFromPoints(t,n){const i=this.center;n!==void 0?i.copy(n):yA.setFromPoints(t).getCenter(i);let r=0;for(let a=0,o=t.length;a<o;a++)r=Math.max(r,i.distanceToSquared(t[a]));return this.radius=Math.sqrt(r),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const n=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=n*n}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,n){const i=this.center.distanceToSquared(t);return n.copy(t),i>this.radius*this.radius&&(n.sub(this.center).normalize(),n.multiplyScalar(this.radius).add(this.center)),n}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;Rl.subVectors(t,this.center);const n=Rl.lengthSq();if(n>this.radius*this.radius){const i=Math.sqrt(n),r=(i-this.radius)*.5;this.center.addScaledVector(Rl,r/i),this.radius+=r}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(vd.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(Rl.copy(t.center).add(vd)),this.expandByPoint(Rl.copy(t.center).sub(vd))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}};const Lr=new ce,gd=new ce,Au=new ce,ia=new ce,_d=new ce,Ru=new ce,xd=new ce;let A0=class{constructor(t=new ce,n=new ce(0,0,-1)){this.origin=t,this.direction=n}set(t,n){return this.origin.copy(t),this.direction.copy(n),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,n){return n.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,Lr)),this}closestPointToPoint(t,n){n.subVectors(t,this.origin);const i=n.dot(this.direction);return i<0?n.copy(this.origin):n.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const n=Lr.subVectors(t,this.origin).dot(this.direction);return n<0?this.origin.distanceToSquared(t):(Lr.copy(this.origin).addScaledVector(this.direction,n),Lr.distanceToSquared(t))}distanceSqToSegment(t,n,i,r){gd.copy(t).add(n).multiplyScalar(.5),Au.copy(n).sub(t).normalize(),ia.copy(this.origin).sub(gd);const a=t.distanceTo(n)*.5,o=-this.direction.dot(Au),l=ia.dot(this.direction),h=-ia.dot(Au),u=ia.lengthSq(),f=Math.abs(1-o*o);let d,p,g,x;if(f>0)if(d=o*h-l,p=o*l-h,x=a*f,d>=0)if(p>=-x)if(p<=x){const y=1/f;d*=y,p*=y,g=d*(d+o*p+2*l)+p*(o*d+p+2*h)+u}else p=a,d=Math.max(0,-(o*p+l)),g=-d*d+p*(p+2*h)+u;else p=-a,d=Math.max(0,-(o*p+l)),g=-d*d+p*(p+2*h)+u;else p<=-x?(d=Math.max(0,-(-o*a+l)),p=d>0?-a:Math.min(Math.max(-a,-h),a),g=-d*d+p*(p+2*h)+u):p<=x?(d=0,p=Math.min(Math.max(-a,-h),a),g=p*(p+2*h)+u):(d=Math.max(0,-(o*a+l)),p=d>0?a:Math.min(Math.max(-a,-h),a),g=-d*d+p*(p+2*h)+u);else p=o>0?-a:a,d=Math.max(0,-(o*p+l)),g=-d*d+p*(p+2*h)+u;return i&&i.copy(this.origin).addScaledVector(this.direction,d),r&&r.copy(gd).addScaledVector(Au,p),g}intersectSphere(t,n){Lr.subVectors(t.center,this.origin);const i=Lr.dot(this.direction),r=Lr.dot(Lr)-i*i,a=t.radius*t.radius;if(r>a)return null;const o=Math.sqrt(a-r),l=i-o,h=i+o;return h<0?null:l<0?this.at(h,n):this.at(l,n)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const n=t.normal.dot(this.direction);if(n===0)return t.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(t.normal)+t.constant)/n;return i>=0?i:null}intersectPlane(t,n){const i=this.distanceToPlane(t);return i===null?null:this.at(i,n)}intersectsPlane(t){const n=t.distanceToPoint(this.origin);return n===0||t.normal.dot(this.direction)*n<0}intersectBox(t,n){let i,r,a,o,l,h;const u=1/this.direction.x,f=1/this.direction.y,d=1/this.direction.z,p=this.origin;return u>=0?(i=(t.min.x-p.x)*u,r=(t.max.x-p.x)*u):(i=(t.max.x-p.x)*u,r=(t.min.x-p.x)*u),f>=0?(a=(t.min.y-p.y)*f,o=(t.max.y-p.y)*f):(a=(t.max.y-p.y)*f,o=(t.min.y-p.y)*f),i>o||a>r||((a>i||isNaN(i))&&(i=a),(o<r||isNaN(r))&&(r=o),d>=0?(l=(t.min.z-p.z)*d,h=(t.max.z-p.z)*d):(l=(t.max.z-p.z)*d,h=(t.min.z-p.z)*d),i>h||l>r)||((l>i||i!==i)&&(i=l),(h<r||r!==r)&&(r=h),r<0)?null:this.at(i>=0?i:r,n)}intersectsBox(t){return this.intersectBox(t,Lr)!==null}intersectTriangle(t,n,i,r,a){_d.subVectors(n,t),Ru.subVectors(i,t),xd.crossVectors(_d,Ru);let o=this.direction.dot(xd),l;if(o>0){if(r)return null;l=1}else if(o<0)l=-1,o=-o;else return null;ia.subVectors(this.origin,t);const h=l*this.direction.dot(Ru.crossVectors(ia,Ru));if(h<0)return null;const u=l*this.direction.dot(_d.cross(ia));if(u<0||h+u>o)return null;const f=-l*ia.dot(xd);return f<0?null:this.at(f/o,a)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}},Cn=class $d{constructor(t,n,i,r,a,o,l,h,u,f,d,p,g,x,y,_){$d.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t!==void 0&&this.set(t,n,i,r,a,o,l,h,u,f,d,p,g,x,y,_)}set(t,n,i,r,a,o,l,h,u,f,d,p,g,x,y,_){const v=this.elements;return v[0]=t,v[4]=n,v[8]=i,v[12]=r,v[1]=a,v[5]=o,v[9]=l,v[13]=h,v[2]=u,v[6]=f,v[10]=d,v[14]=p,v[3]=g,v[7]=x,v[11]=y,v[15]=_,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new $d().fromArray(this.elements)}copy(t){const n=this.elements,i=t.elements;return n[0]=i[0],n[1]=i[1],n[2]=i[2],n[3]=i[3],n[4]=i[4],n[5]=i[5],n[6]=i[6],n[7]=i[7],n[8]=i[8],n[9]=i[9],n[10]=i[10],n[11]=i[11],n[12]=i[12],n[13]=i[13],n[14]=i[14],n[15]=i[15],this}copyPosition(t){const n=this.elements,i=t.elements;return n[12]=i[12],n[13]=i[13],n[14]=i[14],this}setFromMatrix3(t){const n=t.elements;return this.set(n[0],n[3],n[6],0,n[1],n[4],n[7],0,n[2],n[5],n[8],0,0,0,0,1),this}extractBasis(t,n,i){return t.setFromMatrixColumn(this,0),n.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(t,n,i){return this.set(t.x,n.x,i.x,0,t.y,n.y,i.y,0,t.z,n.z,i.z,0,0,0,0,1),this}extractRotation(t){const n=this.elements,i=t.elements,r=1/Ys.setFromMatrixColumn(t,0).length(),a=1/Ys.setFromMatrixColumn(t,1).length(),o=1/Ys.setFromMatrixColumn(t,2).length();return n[0]=i[0]*r,n[1]=i[1]*r,n[2]=i[2]*r,n[3]=0,n[4]=i[4]*a,n[5]=i[5]*a,n[6]=i[6]*a,n[7]=0,n[8]=i[8]*o,n[9]=i[9]*o,n[10]=i[10]*o,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}makeRotationFromEuler(t){const n=this.elements,i=t.x,r=t.y,a=t.z,o=Math.cos(i),l=Math.sin(i),h=Math.cos(r),u=Math.sin(r),f=Math.cos(a),d=Math.sin(a);if(t.order==="XYZ"){const p=o*f,g=o*d,x=l*f,y=l*d;n[0]=h*f,n[4]=-h*d,n[8]=u,n[1]=g+x*u,n[5]=p-y*u,n[9]=-l*h,n[2]=y-p*u,n[6]=x+g*u,n[10]=o*h}else if(t.order==="YXZ"){const p=h*f,g=h*d,x=u*f,y=u*d;n[0]=p+y*l,n[4]=x*l-g,n[8]=o*u,n[1]=o*d,n[5]=o*f,n[9]=-l,n[2]=g*l-x,n[6]=y+p*l,n[10]=o*h}else if(t.order==="ZXY"){const p=h*f,g=h*d,x=u*f,y=u*d;n[0]=p-y*l,n[4]=-o*d,n[8]=x+g*l,n[1]=g+x*l,n[5]=o*f,n[9]=y-p*l,n[2]=-o*u,n[6]=l,n[10]=o*h}else if(t.order==="ZYX"){const p=o*f,g=o*d,x=l*f,y=l*d;n[0]=h*f,n[4]=x*u-g,n[8]=p*u+y,n[1]=h*d,n[5]=y*u+p,n[9]=g*u-x,n[2]=-u,n[6]=l*h,n[10]=o*h}else if(t.order==="YZX"){const p=o*h,g=o*u,x=l*h,y=l*u;n[0]=h*f,n[4]=y-p*d,n[8]=x*d+g,n[1]=d,n[5]=o*f,n[9]=-l*f,n[2]=-u*f,n[6]=g*d+x,n[10]=p-y*d}else if(t.order==="XZY"){const p=o*h,g=o*u,x=l*h,y=l*u;n[0]=h*f,n[4]=-d,n[8]=u*f,n[1]=p*d+y,n[5]=o*f,n[9]=g*d-x,n[2]=x*d-g,n[6]=l*f,n[10]=y*d+p}return n[3]=0,n[7]=0,n[11]=0,n[12]=0,n[13]=0,n[14]=0,n[15]=1,this}makeRotationFromQuaternion(t){return this.compose(MA,t,EA)}lookAt(t,n,i){const r=this.elements;return Mi.subVectors(t,n),Mi.lengthSq()===0&&(Mi.z=1),Mi.normalize(),ra.crossVectors(i,Mi),ra.lengthSq()===0&&(Math.abs(i.z)===1?Mi.x+=1e-4:Mi.z+=1e-4,Mi.normalize(),ra.crossVectors(i,Mi)),ra.normalize(),Lu.crossVectors(Mi,ra),r[0]=ra.x,r[4]=Lu.x,r[8]=Mi.x,r[1]=ra.y,r[5]=Lu.y,r[9]=Mi.y,r[2]=ra.z,r[6]=Lu.z,r[10]=Mi.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,n){const i=t.elements,r=n.elements,a=this.elements,o=i[0],l=i[4],h=i[8],u=i[12],f=i[1],d=i[5],p=i[9],g=i[13],x=i[2],y=i[6],_=i[10],v=i[14],w=i[3],M=i[7],T=i[11],A=i[15],P=r[0],b=r[4],U=r[8],S=r[12],R=r[1],V=r[5],W=r[9],L=r[13],I=r[2],z=r[6],X=r[10],Y=r[14],$=r[3],ne=r[7],ae=r[11],j=r[15];return a[0]=o*P+l*R+h*I+u*$,a[4]=o*b+l*V+h*z+u*ne,a[8]=o*U+l*W+h*X+u*ae,a[12]=o*S+l*L+h*Y+u*j,a[1]=f*P+d*R+p*I+g*$,a[5]=f*b+d*V+p*z+g*ne,a[9]=f*U+d*W+p*X+g*ae,a[13]=f*S+d*L+p*Y+g*j,a[2]=x*P+y*R+_*I+v*$,a[6]=x*b+y*V+_*z+v*ne,a[10]=x*U+y*W+_*X+v*ae,a[14]=x*S+y*L+_*Y+v*j,a[3]=w*P+M*R+T*I+A*$,a[7]=w*b+M*V+T*z+A*ne,a[11]=w*U+M*W+T*X+A*ae,a[15]=w*S+M*L+T*Y+A*j,this}multiplyScalar(t){const n=this.elements;return n[0]*=t,n[4]*=t,n[8]*=t,n[12]*=t,n[1]*=t,n[5]*=t,n[9]*=t,n[13]*=t,n[2]*=t,n[6]*=t,n[10]*=t,n[14]*=t,n[3]*=t,n[7]*=t,n[11]*=t,n[15]*=t,this}determinant(){const t=this.elements,n=t[0],i=t[4],r=t[8],a=t[12],o=t[1],l=t[5],h=t[9],u=t[13],f=t[2],d=t[6],p=t[10],g=t[14],x=t[3],y=t[7],_=t[11],v=t[15];return x*(+a*h*d-r*u*d-a*l*p+i*u*p+r*l*g-i*h*g)+y*(+n*h*g-n*u*p+a*o*p-r*o*g+r*u*f-a*h*f)+_*(+n*u*d-n*l*g-a*o*d+i*o*g+a*l*f-i*u*f)+v*(-r*l*f-n*h*d+n*l*p+r*o*d-i*o*p+i*h*f)}transpose(){const t=this.elements;let n;return n=t[1],t[1]=t[4],t[4]=n,n=t[2],t[2]=t[8],t[8]=n,n=t[6],t[6]=t[9],t[9]=n,n=t[3],t[3]=t[12],t[12]=n,n=t[7],t[7]=t[13],t[13]=n,n=t[11],t[11]=t[14],t[14]=n,this}setPosition(t,n,i){const r=this.elements;return t.isVector3?(r[12]=t.x,r[13]=t.y,r[14]=t.z):(r[12]=t,r[13]=n,r[14]=i),this}invert(){const t=this.elements,n=t[0],i=t[1],r=t[2],a=t[3],o=t[4],l=t[5],h=t[6],u=t[7],f=t[8],d=t[9],p=t[10],g=t[11],x=t[12],y=t[13],_=t[14],v=t[15],w=d*_*u-y*p*u+y*h*g-l*_*g-d*h*v+l*p*v,M=x*p*u-f*_*u-x*h*g+o*_*g+f*h*v-o*p*v,T=f*y*u-x*d*u+x*l*g-o*y*g-f*l*v+o*d*v,A=x*d*h-f*y*h-x*l*p+o*y*p+f*l*_-o*d*_,P=n*w+i*M+r*T+a*A;if(P===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const b=1/P;return t[0]=w*b,t[1]=(y*p*a-d*_*a-y*r*g+i*_*g+d*r*v-i*p*v)*b,t[2]=(l*_*a-y*h*a+y*r*u-i*_*u-l*r*v+i*h*v)*b,t[3]=(d*h*a-l*p*a-d*r*u+i*p*u+l*r*g-i*h*g)*b,t[4]=M*b,t[5]=(f*_*a-x*p*a+x*r*g-n*_*g-f*r*v+n*p*v)*b,t[6]=(x*h*a-o*_*a-x*r*u+n*_*u+o*r*v-n*h*v)*b,t[7]=(o*p*a-f*h*a+f*r*u-n*p*u-o*r*g+n*h*g)*b,t[8]=T*b,t[9]=(x*d*a-f*y*a-x*i*g+n*y*g+f*i*v-n*d*v)*b,t[10]=(o*y*a-x*l*a+x*i*u-n*y*u-o*i*v+n*l*v)*b,t[11]=(f*l*a-o*d*a-f*i*u+n*d*u+o*i*g-n*l*g)*b,t[12]=A*b,t[13]=(f*y*r-x*d*r+x*i*p-n*y*p-f*i*_+n*d*_)*b,t[14]=(x*l*r-o*y*r-x*i*h+n*y*h+o*i*_-n*l*_)*b,t[15]=(o*d*r-f*l*r+f*i*h-n*d*h-o*i*p+n*l*p)*b,this}scale(t){const n=this.elements,i=t.x,r=t.y,a=t.z;return n[0]*=i,n[4]*=r,n[8]*=a,n[1]*=i,n[5]*=r,n[9]*=a,n[2]*=i,n[6]*=r,n[10]*=a,n[3]*=i,n[7]*=r,n[11]*=a,this}getMaxScaleOnAxis(){const t=this.elements,n=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],r=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(n,i,r))}makeTranslation(t,n,i){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,n,0,0,1,i,0,0,0,1),this}makeRotationX(t){const n=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,n,-i,0,0,i,n,0,0,0,0,1),this}makeRotationY(t){const n=Math.cos(t),i=Math.sin(t);return this.set(n,0,i,0,0,1,0,0,-i,0,n,0,0,0,0,1),this}makeRotationZ(t){const n=Math.cos(t),i=Math.sin(t);return this.set(n,-i,0,0,i,n,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,n){const i=Math.cos(n),r=Math.sin(n),a=1-i,o=t.x,l=t.y,h=t.z,u=a*o,f=a*l;return this.set(u*o+i,u*l-r*h,u*h+r*l,0,u*l+r*h,f*l+i,f*h-r*o,0,u*h-r*l,f*h+r*o,a*h*h+i,0,0,0,0,1),this}makeScale(t,n,i){return this.set(t,0,0,0,0,n,0,0,0,0,i,0,0,0,0,1),this}makeShear(t,n,i,r,a,o){return this.set(1,i,a,0,t,1,o,0,n,r,1,0,0,0,0,1),this}compose(t,n,i){const r=this.elements,a=n._x,o=n._y,l=n._z,h=n._w,u=a+a,f=o+o,d=l+l,p=a*u,g=a*f,x=a*d,y=o*f,_=o*d,v=l*d,w=h*u,M=h*f,T=h*d,A=i.x,P=i.y,b=i.z;return r[0]=(1-(y+v))*A,r[1]=(g+T)*A,r[2]=(x-M)*A,r[3]=0,r[4]=(g-T)*P,r[5]=(1-(p+v))*P,r[6]=(_+w)*P,r[7]=0,r[8]=(x+M)*b,r[9]=(_-w)*b,r[10]=(1-(p+y))*b,r[11]=0,r[12]=t.x,r[13]=t.y,r[14]=t.z,r[15]=1,this}decompose(t,n,i){const r=this.elements;let a=Ys.set(r[0],r[1],r[2]).length();const o=Ys.set(r[4],r[5],r[6]).length(),l=Ys.set(r[8],r[9],r[10]).length();this.determinant()<0&&(a=-a),t.x=r[12],t.y=r[13],t.z=r[14],Ki.copy(this);const u=1/a,f=1/o,d=1/l;return Ki.elements[0]*=u,Ki.elements[1]*=u,Ki.elements[2]*=u,Ki.elements[4]*=f,Ki.elements[5]*=f,Ki.elements[6]*=f,Ki.elements[8]*=d,Ki.elements[9]*=d,Ki.elements[10]*=d,n.setFromRotationMatrix(Ki),i.x=a,i.y=o,i.z=l,this}makePerspective(t,n,i,r,a,o,l=Ir){const h=this.elements,u=2*a/(n-t),f=2*a/(i-r),d=(n+t)/(n-t),p=(i+r)/(i-r);let g,x;if(l===Ir)g=-(o+a)/(o-a),x=-2*o*a/(o-a);else if(l===eh)g=-o/(o-a),x=-o*a/(o-a);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+l);return h[0]=u,h[4]=0,h[8]=d,h[12]=0,h[1]=0,h[5]=f,h[9]=p,h[13]=0,h[2]=0,h[6]=0,h[10]=g,h[14]=x,h[3]=0,h[7]=0,h[11]=-1,h[15]=0,this}makeOrthographic(t,n,i,r,a,o,l=Ir){const h=this.elements,u=1/(n-t),f=1/(i-r),d=1/(o-a),p=(n+t)*u,g=(i+r)*f;let x,y;if(l===Ir)x=(o+a)*d,y=-2*d;else if(l===eh)x=a*d,y=-1*d;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+l);return h[0]=2*u,h[4]=0,h[8]=0,h[12]=-p,h[1]=0,h[5]=2*f,h[9]=0,h[13]=-g,h[2]=0,h[6]=0,h[10]=y,h[14]=-x,h[3]=0,h[7]=0,h[11]=0,h[15]=1,this}equals(t){const n=this.elements,i=t.elements;for(let r=0;r<16;r++)if(n[r]!==i[r])return!1;return!0}fromArray(t,n=0){for(let i=0;i<16;i++)this.elements[i]=t[i+n];return this}toArray(t=[],n=0){const i=this.elements;return t[n]=i[0],t[n+1]=i[1],t[n+2]=i[2],t[n+3]=i[3],t[n+4]=i[4],t[n+5]=i[5],t[n+6]=i[6],t[n+7]=i[7],t[n+8]=i[8],t[n+9]=i[9],t[n+10]=i[10],t[n+11]=i[11],t[n+12]=i[12],t[n+13]=i[13],t[n+14]=i[14],t[n+15]=i[15],t}};const Ys=new ce,Ki=new Cn,MA=new ce(0,0,0),EA=new ce(1,1,1),ra=new ce,Lu=new ce,Mi=new ce,l_=new Cn,c_=new Dc;let R0=class L0{constructor(t=0,n=0,i=0,r=L0.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=n,this._z=i,this._order=r}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,n,i,r=this._order){return this._x=t,this._y=n,this._z=i,this._order=r,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,n=this._order,i=!0){const r=t.elements,a=r[0],o=r[4],l=r[8],h=r[1],u=r[5],f=r[9],d=r[2],p=r[6],g=r[10];switch(n){case"XYZ":this._y=Math.asin(ui(l,-1,1)),Math.abs(l)<.9999999?(this._x=Math.atan2(-f,g),this._z=Math.atan2(-o,a)):(this._x=Math.atan2(p,u),this._z=0);break;case"YXZ":this._x=Math.asin(-ui(f,-1,1)),Math.abs(f)<.9999999?(this._y=Math.atan2(l,g),this._z=Math.atan2(h,u)):(this._y=Math.atan2(-d,a),this._z=0);break;case"ZXY":this._x=Math.asin(ui(p,-1,1)),Math.abs(p)<.9999999?(this._y=Math.atan2(-d,g),this._z=Math.atan2(-o,u)):(this._y=0,this._z=Math.atan2(h,a));break;case"ZYX":this._y=Math.asin(-ui(d,-1,1)),Math.abs(d)<.9999999?(this._x=Math.atan2(p,g),this._z=Math.atan2(h,a)):(this._x=0,this._z=Math.atan2(-o,u));break;case"YZX":this._z=Math.asin(ui(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(-f,u),this._y=Math.atan2(-d,a)):(this._x=0,this._y=Math.atan2(l,g));break;case"XZY":this._z=Math.asin(-ui(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(p,u),this._y=Math.atan2(l,a)):(this._x=Math.atan2(-f,g),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+n)}return this._order=n,i===!0&&this._onChangeCallback(),this}setFromQuaternion(t,n,i){return l_.makeRotationFromQuaternion(t),this.setFromRotationMatrix(l_,n,i)}setFromVector3(t,n=this._order){return this.set(t.x,t.y,t.z,n)}reorder(t){return c_.setFromEuler(this),this.setFromQuaternion(c_,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],n=0){return t[n]=this._x,t[n+1]=this._y,t[n+2]=this._z,t[n+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}};R0.DEFAULT_ORDER="XYZ";let C0=class{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}},wA=0;const u_=new ce,qs=new Dc,Cr=new Cn,Cu=new ce,Ll=new ce,SA=new ce,bA=new Dc,h_=new ce(1,0,0),f_=new ce(0,1,0),d_=new ce(0,0,1),TA={type:"added"},AA={type:"removed"};let Wi=class Zu extends Qo{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:wA++}),this.uuid=Uc(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Zu.DEFAULT_UP.clone();const t=new ce,n=new R0,i=new Dc,r=new ce(1,1,1);function a(){i.setFromEuler(n,!1)}function o(){n.setFromQuaternion(i,void 0,!1)}n._onChange(a),i._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:n},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:r},modelViewMatrix:{value:new Cn},normalMatrix:{value:new Ot}}),this.matrix=new Cn,this.matrixWorld=new Cn,this.matrixAutoUpdate=Zu.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=Zu.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new C0,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,n){this.quaternion.setFromAxisAngle(t,n)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,n){return qs.setFromAxisAngle(t,n),this.quaternion.multiply(qs),this}rotateOnWorldAxis(t,n){return qs.setFromAxisAngle(t,n),this.quaternion.premultiply(qs),this}rotateX(t){return this.rotateOnAxis(h_,t)}rotateY(t){return this.rotateOnAxis(f_,t)}rotateZ(t){return this.rotateOnAxis(d_,t)}translateOnAxis(t,n){return u_.copy(t).applyQuaternion(this.quaternion),this.position.add(u_.multiplyScalar(n)),this}translateX(t){return this.translateOnAxis(h_,t)}translateY(t){return this.translateOnAxis(f_,t)}translateZ(t){return this.translateOnAxis(d_,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(Cr.copy(this.matrixWorld).invert())}lookAt(t,n,i){t.isVector3?Cu.copy(t):Cu.set(t,n,i);const r=this.parent;this.updateWorldMatrix(!0,!1),Ll.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Cr.lookAt(Ll,Cu,this.up):Cr.lookAt(Cu,Ll,this.up),this.quaternion.setFromRotationMatrix(Cr),r&&(Cr.extractRotation(r.matrixWorld),qs.setFromRotationMatrix(Cr),this.quaternion.premultiply(qs.invert()))}add(t){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.add(arguments[n]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.parent!==null&&t.parent.remove(t),t.parent=this,this.children.push(t),t.dispatchEvent(TA)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const n=this.children.indexOf(t);return n!==-1&&(t.parent=null,this.children.splice(n,1),t.dispatchEvent(AA)),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),Cr.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),Cr.multiply(t.parent.matrixWorld)),t.applyMatrix4(Cr),this.add(t),t.updateWorldMatrix(!1,!0),this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,n){if(this[t]===n)return this;for(let i=0,r=this.children.length;i<r;i++){const o=this.children[i].getObjectByProperty(t,n);if(o!==void 0)return o}}getObjectsByProperty(t,n){let i=[];this[t]===n&&i.push(this);for(let r=0,a=this.children.length;r<a;r++){const o=this.children[r].getObjectsByProperty(t,n);o.length>0&&(i=i.concat(o))}return i}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ll,t,SA),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ll,bA,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const n=this.matrixWorld.elements;return t.set(n[8],n[9],n[10]).normalize()}raycast(){}traverse(t){t(this);const n=this.children;for(let i=0,r=n.length;i<r;i++)n[i].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const n=this.children;for(let i=0,r=n.length;i<r;i++)n[i].traverseVisible(t)}traverseAncestors(t){const n=this.parent;n!==null&&(t(n),n.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,t=!0);const n=this.children;for(let i=0,r=n.length;i<r;i++){const a=n[i];(a.matrixWorldAutoUpdate===!0||t===!0)&&a.updateMatrixWorld(t)}}updateWorldMatrix(t,n){const i=this.parent;if(t===!0&&i!==null&&i.matrixWorldAutoUpdate===!0&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),n===!0){const r=this.children;for(let a=0,o=r.length;a<o;a++){const l=r[a];l.matrixWorldAutoUpdate===!0&&l.updateWorldMatrix(!1,!0)}}}toJSON(t){const n=t===void 0||typeof t=="string",i={};n&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const r={};r.uuid=this.uuid,r.type=this.type,this.name!==""&&(r.name=this.name),this.castShadow===!0&&(r.castShadow=!0),this.receiveShadow===!0&&(r.receiveShadow=!0),this.visible===!1&&(r.visible=!1),this.frustumCulled===!1&&(r.frustumCulled=!1),this.renderOrder!==0&&(r.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(r.userData=this.userData),r.layers=this.layers.mask,r.matrix=this.matrix.toArray(),r.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(r.matrixAutoUpdate=!1),this.isInstancedMesh&&(r.type="InstancedMesh",r.count=this.count,r.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(r.instanceColor=this.instanceColor.toJSON()));function a(l,h){return l[h.uuid]===void 0&&(l[h.uuid]=h.toJSON(t)),h.uuid}if(this.isScene)this.background&&(this.background.isColor?r.background=this.background.toJSON():this.background.isTexture&&(r.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(r.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){r.geometry=a(t.geometries,this.geometry);const l=this.geometry.parameters;if(l!==void 0&&l.shapes!==void 0){const h=l.shapes;if(Array.isArray(h))for(let u=0,f=h.length;u<f;u++){const d=h[u];a(t.shapes,d)}else a(t.shapes,h)}}if(this.isSkinnedMesh&&(r.bindMode=this.bindMode,r.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(a(t.skeletons,this.skeleton),r.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const l=[];for(let h=0,u=this.material.length;h<u;h++)l.push(a(t.materials,this.material[h]));r.material=l}else r.material=a(t.materials,this.material);if(this.children.length>0){r.children=[];for(let l=0;l<this.children.length;l++)r.children.push(this.children[l].toJSON(t).object)}if(this.animations.length>0){r.animations=[];for(let l=0;l<this.animations.length;l++){const h=this.animations[l];r.animations.push(a(t.animations,h))}}if(n){const l=o(t.geometries),h=o(t.materials),u=o(t.textures),f=o(t.images),d=o(t.shapes),p=o(t.skeletons),g=o(t.animations),x=o(t.nodes);l.length>0&&(i.geometries=l),h.length>0&&(i.materials=h),u.length>0&&(i.textures=u),f.length>0&&(i.images=f),d.length>0&&(i.shapes=d),p.length>0&&(i.skeletons=p),g.length>0&&(i.animations=g),x.length>0&&(i.nodes=x)}return i.object=r,i;function o(l){const h=[];for(const u in l){const f=l[u];delete f.metadata,h.push(f)}return h}}clone(t){return new this.constructor().copy(this,t)}copy(t,n=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),n===!0)for(let i=0;i<t.children.length;i++){const r=t.children[i];this.add(r.clone())}return this}};Wi.DEFAULT_UP=new ce(0,1,0);Wi.DEFAULT_MATRIX_AUTO_UPDATE=!0;Wi.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const Ji=new ce,Pr=new ce,yd=new ce,Ur=new ce,$s=new ce,js=new ce,p_=new ce,Md=new ce,Ed=new ce,wd=new ce;let Pu=!1,Uu=class Oa{constructor(t=new ce,n=new ce,i=new ce){this.a=t,this.b=n,this.c=i}static getNormal(t,n,i,r){r.subVectors(i,n),Ji.subVectors(t,n),r.cross(Ji);const a=r.lengthSq();return a>0?r.multiplyScalar(1/Math.sqrt(a)):r.set(0,0,0)}static getBarycoord(t,n,i,r,a){Ji.subVectors(r,n),Pr.subVectors(i,n),yd.subVectors(t,n);const o=Ji.dot(Ji),l=Ji.dot(Pr),h=Ji.dot(yd),u=Pr.dot(Pr),f=Pr.dot(yd),d=o*u-l*l;if(d===0)return a.set(-2,-1,-1);const p=1/d,g=(u*h-l*f)*p,x=(o*f-l*h)*p;return a.set(1-g-x,x,g)}static containsPoint(t,n,i,r){return this.getBarycoord(t,n,i,r,Ur),Ur.x>=0&&Ur.y>=0&&Ur.x+Ur.y<=1}static getUV(t,n,i,r,a,o,l,h){return Pu===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),Pu=!0),this.getInterpolation(t,n,i,r,a,o,l,h)}static getInterpolation(t,n,i,r,a,o,l,h){return this.getBarycoord(t,n,i,r,Ur),h.setScalar(0),h.addScaledVector(a,Ur.x),h.addScaledVector(o,Ur.y),h.addScaledVector(l,Ur.z),h}static isFrontFacing(t,n,i,r){return Ji.subVectors(i,n),Pr.subVectors(t,n),Ji.cross(Pr).dot(r)<0}set(t,n,i){return this.a.copy(t),this.b.copy(n),this.c.copy(i),this}setFromPointsAndIndices(t,n,i,r){return this.a.copy(t[n]),this.b.copy(t[i]),this.c.copy(t[r]),this}setFromAttributeAndIndices(t,n,i,r){return this.a.fromBufferAttribute(t,n),this.b.fromBufferAttribute(t,i),this.c.fromBufferAttribute(t,r),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return Ji.subVectors(this.c,this.b),Pr.subVectors(this.a,this.b),Ji.cross(Pr).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return Oa.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,n){return Oa.getBarycoord(t,this.a,this.b,this.c,n)}getUV(t,n,i,r,a){return Pu===!1&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),Pu=!0),Oa.getInterpolation(t,this.a,this.b,this.c,n,i,r,a)}getInterpolation(t,n,i,r,a){return Oa.getInterpolation(t,this.a,this.b,this.c,n,i,r,a)}containsPoint(t){return Oa.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return Oa.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,n){const i=this.a,r=this.b,a=this.c;let o,l;$s.subVectors(r,i),js.subVectors(a,i),Md.subVectors(t,i);const h=$s.dot(Md),u=js.dot(Md);if(h<=0&&u<=0)return n.copy(i);Ed.subVectors(t,r);const f=$s.dot(Ed),d=js.dot(Ed);if(f>=0&&d<=f)return n.copy(r);const p=h*d-f*u;if(p<=0&&h>=0&&f<=0)return o=h/(h-f),n.copy(i).addScaledVector($s,o);wd.subVectors(t,a);const g=$s.dot(wd),x=js.dot(wd);if(x>=0&&g<=x)return n.copy(a);const y=g*u-h*x;if(y<=0&&u>=0&&x<=0)return l=u/(u-x),n.copy(i).addScaledVector(js,l);const _=f*x-g*d;if(_<=0&&d-f>=0&&g-x>=0)return p_.subVectors(a,r),l=(d-f)/(d-f+(g-x)),n.copy(r).addScaledVector(p_,l);const v=1/(_+y+p);return o=y*v,l=p*v,n.copy(i).addScaledVector($s,o).addScaledVector(js,l)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}},RA=0,el=class extends Qo{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:RA++}),this.uuid=Uc(),this.name="",this.type="Material",this.blending=ao,this.side=da,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=l0,this.blendDst=c0,this.blendEquation=io,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Gd,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Q1,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=ld,this.stencilZFail=ld,this.stencilZPass=ld,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const n in t){const i=t[n];if(i===void 0){console.warn(`THREE.Material: parameter '${n}' has value of undefined.`);continue}const r=this[n];if(r===void 0){console.warn(`THREE.Material: '${n}' is not a property of THREE.${this.type}.`);continue}r&&r.isColor?r.set(i):r&&r.isVector3&&i&&i.isVector3?r.copy(i):this[n]=i}}toJSON(t){const n=t===void 0||typeof t=="string";n&&(t={textures:{},images:{}});const i={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.anisotropy!==void 0&&(i.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(t).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(t).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(t).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(t).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(t).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==ao&&(i.blending=this.blending),this.side!==da&&(i.side=this.side),this.vertexColors&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=this.transparent),i.depthFunc=this.depthFunc,i.depthTest=this.depthTest,i.depthWrite=this.depthWrite,i.colorWrite=this.colorWrite,i.stencilWrite=this.stencilWrite,i.stencilWriteMask=this.stencilWriteMask,i.stencilFunc=this.stencilFunc,i.stencilRef=this.stencilRef,i.stencilFuncMask=this.stencilFuncMask,i.stencilFail=this.stencilFail,i.stencilZFail=this.stencilZFail,i.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaHash===!0&&(i.alphaHash=this.alphaHash),this.alphaToCoverage===!0&&(i.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=this.premultipliedAlpha),this.forceSinglePass===!0&&(i.forceSinglePass=this.forceSinglePass),this.wireframe===!0&&(i.wireframe=this.wireframe),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=this.flatShading),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function r(a){const o=[];for(const l in a){const h=a[l];delete h.metadata,o.push(h)}return o}if(n){const a=r(t.textures),o=r(t.images);a.length>0&&(i.textures=a),o.length>0&&(i.images=o)}return i}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const n=t.clippingPlanes;let i=null;if(n!==null){const r=n.length;i=new Array(r);for(let a=0;a!==r;++a)i[a]=n[a].clone()}return this.clippingPlanes=i,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}};const P0={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Qi={h:0,s:0,l:0},Du={h:0,s:0,l:0};function Sd(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+(t-e)*6*n:n<1/2?t:n<2/3?e+(t-e)*6*(2/3-n):e}let Ht=class{constructor(t,n,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,n,i)}set(t,n,i){if(n===void 0&&i===void 0){const r=t;r&&r.isColor?this.copy(r):typeof r=="number"?this.setHex(r):typeof r=="string"&&this.setStyle(r)}else this.setRGB(t,n,i);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,n=sn){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,Zi.toWorkingColorSpace(this,n),this}setRGB(t,n,i,r=Zi.workingColorSpace){return this.r=t,this.g=n,this.b=i,Zi.toWorkingColorSpace(this,r),this}setHSL(t,n,i,r=Zi.workingColorSpace){if(t=lA(t,1),n=ui(n,0,1),i=ui(i,0,1),n===0)this.r=this.g=this.b=i;else{const a=i<=.5?i*(1+n):i+n-i*n,o=2*i-a;this.r=Sd(o,a,t+1/3),this.g=Sd(o,a,t),this.b=Sd(o,a,t-1/3)}return Zi.toWorkingColorSpace(this,r),this}setStyle(t,n=sn){function i(a){a!==void 0&&parseFloat(a)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let r;if(r=/^(\w+)\(([^\)]*)\)/.exec(t)){let a;const o=r[1],l=r[2];switch(o){case"rgb":case"rgba":if(a=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l))return i(a[4]),this.setRGB(Math.min(255,parseInt(a[1],10))/255,Math.min(255,parseInt(a[2],10))/255,Math.min(255,parseInt(a[3],10))/255,n);if(a=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l))return i(a[4]),this.setRGB(Math.min(100,parseInt(a[1],10))/100,Math.min(100,parseInt(a[2],10))/100,Math.min(100,parseInt(a[3],10))/100,n);break;case"hsl":case"hsla":if(a=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(l))return i(a[4]),this.setHSL(parseFloat(a[1])/360,parseFloat(a[2])/100,parseFloat(a[3])/100,n);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(r=/^\#([A-Fa-f\d]+)$/.exec(t)){const a=r[1],o=a.length;if(o===3)return this.setRGB(parseInt(a.charAt(0),16)/15,parseInt(a.charAt(1),16)/15,parseInt(a.charAt(2),16)/15,n);if(o===6)return this.setHex(parseInt(a,16),n);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,n);return this}setColorName(t,n=sn){const i=P0[t.toLowerCase()];return i!==void 0?this.setHex(i,n):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=so(t.r),this.g=so(t.g),this.b=so(t.b),this}copyLinearToSRGB(t){return this.r=fd(t.r),this.g=fd(t.g),this.b=fd(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=sn){return Zi.fromWorkingColorSpace(Vn.copy(this),t),Math.round(ui(Vn.r*255,0,255))*65536+Math.round(ui(Vn.g*255,0,255))*256+Math.round(ui(Vn.b*255,0,255))}getHexString(t=sn){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,n=Zi.workingColorSpace){Zi.fromWorkingColorSpace(Vn.copy(this),n);const i=Vn.r,r=Vn.g,a=Vn.b,o=Math.max(i,r,a),l=Math.min(i,r,a);let h,u;const f=(l+o)/2;if(l===o)h=0,u=0;else{const d=o-l;switch(u=f<=.5?d/(o+l):d/(2-o-l),o){case i:h=(r-a)/d+(r<a?6:0);break;case r:h=(a-i)/d+2;break;case a:h=(i-r)/d+4;break}h/=6}return t.h=h,t.s=u,t.l=f,t}getRGB(t,n=Zi.workingColorSpace){return Zi.fromWorkingColorSpace(Vn.copy(this),n),t.r=Vn.r,t.g=Vn.g,t.b=Vn.b,t}getStyle(t=sn){Zi.fromWorkingColorSpace(Vn.copy(this),t);const n=Vn.r,i=Vn.g,r=Vn.b;return t!==sn?`color(${t} ${n.toFixed(3)} ${i.toFixed(3)} ${r.toFixed(3)})`:`rgb(${Math.round(n*255)},${Math.round(i*255)},${Math.round(r*255)})`}offsetHSL(t,n,i){return this.getHSL(Qi),Qi.h+=t,Qi.s+=n,Qi.l+=i,this.setHSL(Qi.h,Qi.s,Qi.l),this}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,n){return this.r=t.r+n.r,this.g=t.g+n.g,this.b=t.b+n.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,n){return this.r+=(t.r-this.r)*n,this.g+=(t.g-this.g)*n,this.b+=(t.b-this.b)*n,this}lerpColors(t,n,i){return this.r=t.r+(n.r-t.r)*i,this.g=t.g+(n.g-t.g)*i,this.b=t.b+(n.b-t.b)*i,this}lerpHSL(t,n){this.getHSL(Qi),t.getHSL(Du);const i=ud(Qi.h,Du.h,n),r=ud(Qi.s,Du.s,n),a=ud(Qi.l,Du.l,n);return this.setHSL(i,r,a),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const n=this.r,i=this.g,r=this.b,a=t.elements;return this.r=a[0]*n+a[3]*i+a[6]*r,this.g=a[1]*n+a[4]*i+a[7]*r,this.b=a[2]*n+a[5]*i+a[8]*r,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,n=0){return this.r=t[n],this.g=t[n+1],this.b=t[n+2],this}toArray(t=[],n=0){return t[n]=this.r,t[n+1]=this.g,t[n+2]=this.b,t}fromBufferAttribute(t,n){return this.r=t.getX(n),this.g=t.getY(n),this.b=t.getZ(n),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}};const Vn=new Ht;Ht.NAMES=P0;let tl=class extends el{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Ht(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Sp,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}};const Mn=new ce,Iu=new Wt;let ur=class{constructor(t,n,i=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=n,this.count=t!==void 0?t.length/n:0,this.normalized=i,this.usage=i_,this.updateRange={offset:0,count:-1},this.gpuType=la,this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,n,i){t*=this.itemSize,i*=n.itemSize;for(let r=0,a=this.itemSize;r<a;r++)this.array[t+r]=n.array[i+r];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let n=0,i=this.count;n<i;n++)Iu.fromBufferAttribute(this,n),Iu.applyMatrix3(t),this.setXY(n,Iu.x,Iu.y);else if(this.itemSize===3)for(let n=0,i=this.count;n<i;n++)Mn.fromBufferAttribute(this,n),Mn.applyMatrix3(t),this.setXYZ(n,Mn.x,Mn.y,Mn.z);return this}applyMatrix4(t){for(let n=0,i=this.count;n<i;n++)Mn.fromBufferAttribute(this,n),Mn.applyMatrix4(t),this.setXYZ(n,Mn.x,Mn.y,Mn.z);return this}applyNormalMatrix(t){for(let n=0,i=this.count;n<i;n++)Mn.fromBufferAttribute(this,n),Mn.applyNormalMatrix(t),this.setXYZ(n,Mn.x,Mn.y,Mn.z);return this}transformDirection(t){for(let n=0,i=this.count;n<i;n++)Mn.fromBufferAttribute(this,n),Mn.transformDirection(t),this.setXYZ(n,Mn.x,Mn.y,Mn.z);return this}set(t,n=0){return this.array.set(t,n),this}getComponent(t,n){let i=this.array[t*this.itemSize+n];return this.normalized&&(i=Tl(i,this.array)),i}setComponent(t,n,i){return this.normalized&&(i=li(i,this.array)),this.array[t*this.itemSize+n]=i,this}getX(t){let n=this.array[t*this.itemSize];return this.normalized&&(n=Tl(n,this.array)),n}setX(t,n){return this.normalized&&(n=li(n,this.array)),this.array[t*this.itemSize]=n,this}getY(t){let n=this.array[t*this.itemSize+1];return this.normalized&&(n=Tl(n,this.array)),n}setY(t,n){return this.normalized&&(n=li(n,this.array)),this.array[t*this.itemSize+1]=n,this}getZ(t){let n=this.array[t*this.itemSize+2];return this.normalized&&(n=Tl(n,this.array)),n}setZ(t,n){return this.normalized&&(n=li(n,this.array)),this.array[t*this.itemSize+2]=n,this}getW(t){let n=this.array[t*this.itemSize+3];return this.normalized&&(n=Tl(n,this.array)),n}setW(t,n){return this.normalized&&(n=li(n,this.array)),this.array[t*this.itemSize+3]=n,this}setXY(t,n,i){return t*=this.itemSize,this.normalized&&(n=li(n,this.array),i=li(i,this.array)),this.array[t+0]=n,this.array[t+1]=i,this}setXYZ(t,n,i,r){return t*=this.itemSize,this.normalized&&(n=li(n,this.array),i=li(i,this.array),r=li(r,this.array)),this.array[t+0]=n,this.array[t+1]=i,this.array[t+2]=r,this}setXYZW(t,n,i,r,a){return t*=this.itemSize,this.normalized&&(n=li(n,this.array),i=li(i,this.array),r=li(r,this.array),a=li(a,this.array)),this.array[t+0]=n,this.array[t+1]=i,this.array[t+2]=r,this.array[t+3]=a,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==i_&&(t.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(t.updateRange=this.updateRange),t}},U0=class extends ur{constructor(t,n,i){super(new Uint16Array(t),n,i)}},D0=class extends ur{constructor(t,n,i){super(new Uint32Array(t),n,i)}},ni=class extends ur{constructor(t,n,i){super(new Float32Array(t),n,i)}},LA=0;const Bi=new Cn,bd=new Wi,Zs=new ce,Ei=new Ic,Cl=new Ic,Ln=new ce;let gr=class I0 extends Qo{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:LA++}),this.uuid=Uc(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(M0(t)?D0:U0)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,n){return this.attributes[t]=n,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,n,i=0){this.groups.push({start:t,count:n,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(t,n){this.drawRange.start=t,this.drawRange.count=n}applyMatrix4(t){const n=this.attributes.position;n!==void 0&&(n.applyMatrix4(t),n.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const a=new Ot().getNormalMatrix(t);i.applyNormalMatrix(a),i.needsUpdate=!0}const r=this.attributes.tangent;return r!==void 0&&(r.transformDirection(t),r.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return Bi.makeRotationFromQuaternion(t),this.applyMatrix4(Bi),this}rotateX(t){return Bi.makeRotationX(t),this.applyMatrix4(Bi),this}rotateY(t){return Bi.makeRotationY(t),this.applyMatrix4(Bi),this}rotateZ(t){return Bi.makeRotationZ(t),this.applyMatrix4(Bi),this}translate(t,n,i){return Bi.makeTranslation(t,n,i),this.applyMatrix4(Bi),this}scale(t,n,i){return Bi.makeScale(t,n,i),this.applyMatrix4(Bi),this}lookAt(t){return bd.lookAt(t),bd.updateMatrix(),this.applyMatrix4(bd.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Zs).negate(),this.translate(Zs.x,Zs.y,Zs.z),this}setFromPoints(t){const n=[];for(let i=0,r=t.length;i<r;i++){const a=t[i];n.push(a.x,a.y,a.z||0)}return this.setAttribute("position",new ni(n,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Ic);const t=this.attributes.position,n=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new ce(-1/0,-1/0,-1/0),new ce(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),n)for(let i=0,r=n.length;i<r;i++){const a=n[i];Ei.setFromBufferAttribute(a),this.morphTargetsRelative?(Ln.addVectors(this.boundingBox.min,Ei.min),this.boundingBox.expandByPoint(Ln),Ln.addVectors(this.boundingBox.max,Ei.max),this.boundingBox.expandByPoint(Ln)):(this.boundingBox.expandByPoint(Ei.min),this.boundingBox.expandByPoint(Ei.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new Ih);const t=this.attributes.position,n=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new ce,1/0);return}if(t){const i=this.boundingSphere.center;if(Ei.setFromBufferAttribute(t),n)for(let a=0,o=n.length;a<o;a++){const l=n[a];Cl.setFromBufferAttribute(l),this.morphTargetsRelative?(Ln.addVectors(Ei.min,Cl.min),Ei.expandByPoint(Ln),Ln.addVectors(Ei.max,Cl.max),Ei.expandByPoint(Ln)):(Ei.expandByPoint(Cl.min),Ei.expandByPoint(Cl.max))}Ei.getCenter(i);let r=0;for(let a=0,o=t.count;a<o;a++)Ln.fromBufferAttribute(t,a),r=Math.max(r,i.distanceToSquared(Ln));if(n)for(let a=0,o=n.length;a<o;a++){const l=n[a],h=this.morphTargetsRelative;for(let u=0,f=l.count;u<f;u++)Ln.fromBufferAttribute(l,u),h&&(Zs.fromBufferAttribute(t,u),Ln.add(Zs)),r=Math.max(r,i.distanceToSquared(Ln))}this.boundingSphere.radius=Math.sqrt(r),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,n=this.attributes;if(t===null||n.position===void 0||n.normal===void 0||n.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=t.array,r=n.position.array,a=n.normal.array,o=n.uv.array,l=r.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new ur(new Float32Array(4*l),4));const h=this.getAttribute("tangent").array,u=[],f=[];for(let R=0;R<l;R++)u[R]=new ce,f[R]=new ce;const d=new ce,p=new ce,g=new ce,x=new Wt,y=new Wt,_=new Wt,v=new ce,w=new ce;function M(R,V,W){d.fromArray(r,R*3),p.fromArray(r,V*3),g.fromArray(r,W*3),x.fromArray(o,R*2),y.fromArray(o,V*2),_.fromArray(o,W*2),p.sub(d),g.sub(d),y.sub(x),_.sub(x);const L=1/(y.x*_.y-_.x*y.y);isFinite(L)&&(v.copy(p).multiplyScalar(_.y).addScaledVector(g,-y.y).multiplyScalar(L),w.copy(g).multiplyScalar(y.x).addScaledVector(p,-_.x).multiplyScalar(L),u[R].add(v),u[V].add(v),u[W].add(v),f[R].add(w),f[V].add(w),f[W].add(w))}let T=this.groups;T.length===0&&(T=[{start:0,count:i.length}]);for(let R=0,V=T.length;R<V;++R){const W=T[R],L=W.start,I=W.count;for(let z=L,X=L+I;z<X;z+=3)M(i[z+0],i[z+1],i[z+2])}const A=new ce,P=new ce,b=new ce,U=new ce;function S(R){b.fromArray(a,R*3),U.copy(b);const V=u[R];A.copy(V),A.sub(b.multiplyScalar(b.dot(V))).normalize(),P.crossVectors(U,V);const L=P.dot(f[R])<0?-1:1;h[R*4]=A.x,h[R*4+1]=A.y,h[R*4+2]=A.z,h[R*4+3]=L}for(let R=0,V=T.length;R<V;++R){const W=T[R],L=W.start,I=W.count;for(let z=L,X=L+I;z<X;z+=3)S(i[z+0]),S(i[z+1]),S(i[z+2])}}computeVertexNormals(){const t=this.index,n=this.getAttribute("position");if(n!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new ur(new Float32Array(n.count*3),3),this.setAttribute("normal",i);else for(let p=0,g=i.count;p<g;p++)i.setXYZ(p,0,0,0);const r=new ce,a=new ce,o=new ce,l=new ce,h=new ce,u=new ce,f=new ce,d=new ce;if(t)for(let p=0,g=t.count;p<g;p+=3){const x=t.getX(p+0),y=t.getX(p+1),_=t.getX(p+2);r.fromBufferAttribute(n,x),a.fromBufferAttribute(n,y),o.fromBufferAttribute(n,_),f.subVectors(o,a),d.subVectors(r,a),f.cross(d),l.fromBufferAttribute(i,x),h.fromBufferAttribute(i,y),u.fromBufferAttribute(i,_),l.add(f),h.add(f),u.add(f),i.setXYZ(x,l.x,l.y,l.z),i.setXYZ(y,h.x,h.y,h.z),i.setXYZ(_,u.x,u.y,u.z)}else for(let p=0,g=n.count;p<g;p+=3)r.fromBufferAttribute(n,p+0),a.fromBufferAttribute(n,p+1),o.fromBufferAttribute(n,p+2),f.subVectors(o,a),d.subVectors(r,a),f.cross(d),i.setXYZ(p+0,f.x,f.y,f.z),i.setXYZ(p+1,f.x,f.y,f.z),i.setXYZ(p+2,f.x,f.y,f.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let n=0,i=t.count;n<i;n++)Ln.fromBufferAttribute(t,n),Ln.normalize(),t.setXYZ(n,Ln.x,Ln.y,Ln.z)}toNonIndexed(){function t(l,h){const u=l.array,f=l.itemSize,d=l.normalized,p=new u.constructor(h.length*f);let g=0,x=0;for(let y=0,_=h.length;y<_;y++){l.isInterleavedBufferAttribute?g=h[y]*l.data.stride+l.offset:g=h[y]*f;for(let v=0;v<f;v++)p[x++]=u[g++]}return new ur(p,f,d)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const n=new I0,i=this.index.array,r=this.attributes;for(const l in r){const h=r[l],u=t(h,i);n.setAttribute(l,u)}const a=this.morphAttributes;for(const l in a){const h=[],u=a[l];for(let f=0,d=u.length;f<d;f++){const p=u[f],g=t(p,i);h.push(g)}n.morphAttributes[l]=h}n.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let l=0,h=o.length;l<h;l++){const u=o[l];n.addGroup(u.start,u.count,u.materialIndex)}return n}toJSON(){const t={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const h=this.parameters;for(const u in h)h[u]!==void 0&&(t[u]=h[u]);return t}t.data={attributes:{}};const n=this.index;n!==null&&(t.data.index={type:n.array.constructor.name,array:Array.prototype.slice.call(n.array)});const i=this.attributes;for(const h in i){const u=i[h];t.data.attributes[h]=u.toJSON(t.data)}const r={};let a=!1;for(const h in this.morphAttributes){const u=this.morphAttributes[h],f=[];for(let d=0,p=u.length;d<p;d++){const g=u[d];f.push(g.toJSON(t.data))}f.length>0&&(r[h]=f,a=!0)}a&&(t.data.morphAttributes=r,t.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(t.data.groups=JSON.parse(JSON.stringify(o)));const l=this.boundingSphere;return l!==null&&(t.data.boundingSphere={center:l.center.toArray(),radius:l.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const n={};this.name=t.name;const i=t.index;i!==null&&this.setIndex(i.clone(n));const r=t.attributes;for(const u in r){const f=r[u];this.setAttribute(u,f.clone(n))}const a=t.morphAttributes;for(const u in a){const f=[],d=a[u];for(let p=0,g=d.length;p<g;p++)f.push(d[p].clone(n));this.morphAttributes[u]=f}this.morphTargetsRelative=t.morphTargetsRelative;const o=t.groups;for(let u=0,f=o.length;u<f;u++){const d=o[u];this.addGroup(d.start,d.count,d.materialIndex)}const l=t.boundingBox;l!==null&&(this.boundingBox=l.clone());const h=t.boundingSphere;return h!==null&&(this.boundingSphere=h.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}};const m_=new Cn,Fa=new A0,Fu=new Ih,v_=new ce,Ks=new ce,Js=new ce,Qs=new ce,Td=new ce,Nu=new ce,Ou=new Wt,Bu=new Wt,zu=new Wt,g_=new ce,__=new ce,x_=new ce,Gu=new ce,Hu=new ce;let bi=class extends Wi{constructor(t=new gr,n=new tl){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=n,this.updateMorphTargets()}copy(t,n){return super.copy(t,n),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const n=this.geometry.morphAttributes,i=Object.keys(n);if(i.length>0){const r=n[i[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let a=0,o=r.length;a<o;a++){const l=r[a].name||String(a);this.morphTargetInfluences.push(0),this.morphTargetDictionary[l]=a}}}}getVertexPosition(t,n){const i=this.geometry,r=i.attributes.position,a=i.morphAttributes.position,o=i.morphTargetsRelative;n.fromBufferAttribute(r,t);const l=this.morphTargetInfluences;if(a&&l){Nu.set(0,0,0);for(let h=0,u=a.length;h<u;h++){const f=l[h],d=a[h];f!==0&&(Td.fromBufferAttribute(d,t),o?Nu.addScaledVector(Td,f):Nu.addScaledVector(Td.sub(n),f))}n.add(Nu)}return n}raycast(t,n){const i=this.geometry,r=this.material,a=this.matrixWorld;r!==void 0&&(i.boundingSphere===null&&i.computeBoundingSphere(),Fu.copy(i.boundingSphere),Fu.applyMatrix4(a),Fa.copy(t.ray).recast(t.near),!(Fu.containsPoint(Fa.origin)===!1&&(Fa.intersectSphere(Fu,v_)===null||Fa.origin.distanceToSquared(v_)>(t.far-t.near)**2))&&(m_.copy(a).invert(),Fa.copy(t.ray).applyMatrix4(m_),!(i.boundingBox!==null&&Fa.intersectsBox(i.boundingBox)===!1)&&this._computeIntersections(t,n,Fa)))}_computeIntersections(t,n,i){let r;const a=this.geometry,o=this.material,l=a.index,h=a.attributes.position,u=a.attributes.uv,f=a.attributes.uv1,d=a.attributes.normal,p=a.groups,g=a.drawRange;if(l!==null)if(Array.isArray(o))for(let x=0,y=p.length;x<y;x++){const _=p[x],v=o[_.materialIndex],w=Math.max(_.start,g.start),M=Math.min(l.count,Math.min(_.start+_.count,g.start+g.count));for(let T=w,A=M;T<A;T+=3){const P=l.getX(T),b=l.getX(T+1),U=l.getX(T+2);r=Vu(this,v,t,i,u,f,d,P,b,U),r&&(r.faceIndex=Math.floor(T/3),r.face.materialIndex=_.materialIndex,n.push(r))}}else{const x=Math.max(0,g.start),y=Math.min(l.count,g.start+g.count);for(let _=x,v=y;_<v;_+=3){const w=l.getX(_),M=l.getX(_+1),T=l.getX(_+2);r=Vu(this,o,t,i,u,f,d,w,M,T),r&&(r.faceIndex=Math.floor(_/3),n.push(r))}}else if(h!==void 0)if(Array.isArray(o))for(let x=0,y=p.length;x<y;x++){const _=p[x],v=o[_.materialIndex],w=Math.max(_.start,g.start),M=Math.min(h.count,Math.min(_.start+_.count,g.start+g.count));for(let T=w,A=M;T<A;T+=3){const P=T,b=T+1,U=T+2;r=Vu(this,v,t,i,u,f,d,P,b,U),r&&(r.faceIndex=Math.floor(T/3),r.face.materialIndex=_.materialIndex,n.push(r))}}else{const x=Math.max(0,g.start),y=Math.min(h.count,g.start+g.count);for(let _=x,v=y;_<v;_+=3){const w=_,M=_+1,T=_+2;r=Vu(this,o,t,i,u,f,d,w,M,T),r&&(r.faceIndex=Math.floor(_/3),n.push(r))}}}};function CA(e,t,n,i,r,a,o,l){let h;if(t.side===ti?h=i.intersectTriangle(o,a,r,!0,l):h=i.intersectTriangle(r,a,o,t.side===da,l),h===null)return null;Hu.copy(l),Hu.applyMatrix4(e.matrixWorld);const u=n.ray.origin.distanceTo(Hu);return u<n.near||u>n.far?null:{distance:u,point:Hu.clone(),object:e}}function Vu(e,t,n,i,r,a,o,l,h,u){e.getVertexPosition(l,Ks),e.getVertexPosition(h,Js),e.getVertexPosition(u,Qs);const f=CA(e,t,n,i,Ks,Js,Qs,Gu);if(f){r&&(Ou.fromBufferAttribute(r,l),Bu.fromBufferAttribute(r,h),zu.fromBufferAttribute(r,u),f.uv=Uu.getInterpolation(Gu,Ks,Js,Qs,Ou,Bu,zu,new Wt)),a&&(Ou.fromBufferAttribute(a,l),Bu.fromBufferAttribute(a,h),zu.fromBufferAttribute(a,u),f.uv1=Uu.getInterpolation(Gu,Ks,Js,Qs,Ou,Bu,zu,new Wt),f.uv2=f.uv1),o&&(g_.fromBufferAttribute(o,l),__.fromBufferAttribute(o,h),x_.fromBufferAttribute(o,u),f.normal=Uu.getInterpolation(Gu,Ks,Js,Qs,g_,__,x_,new ce),f.normal.dot(i.direction)>0&&f.normal.multiplyScalar(-1));const d={a:l,b:h,c:u,normal:new ce,materialIndex:0};Uu.getNormal(Ks,Js,Qs,d.normal),f.face=d}return f}let Fh=class F0 extends gr{constructor(t=1,n=1,i=1,r=1,a=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:n,depth:i,widthSegments:r,heightSegments:a,depthSegments:o};const l=this;r=Math.floor(r),a=Math.floor(a),o=Math.floor(o);const h=[],u=[],f=[],d=[];let p=0,g=0;x("z","y","x",-1,-1,i,n,t,o,a,0),x("z","y","x",1,-1,i,n,-t,o,a,1),x("x","z","y",1,1,t,i,n,r,o,2),x("x","z","y",1,-1,t,i,-n,r,o,3),x("x","y","z",1,-1,t,n,i,r,a,4),x("x","y","z",-1,-1,t,n,-i,r,a,5),this.setIndex(h),this.setAttribute("position",new ni(u,3)),this.setAttribute("normal",new ni(f,3)),this.setAttribute("uv",new ni(d,2));function x(y,_,v,w,M,T,A,P,b,U,S){const R=T/b,V=A/U,W=T/2,L=A/2,I=P/2,z=b+1,X=U+1;let Y=0,$=0;const ne=new ce;for(let ae=0;ae<X;ae++){const j=ae*V-L;for(let K=0;K<z;K++){const Q=K*R-W;ne[y]=Q*w,ne[_]=j*M,ne[v]=I,u.push(ne.x,ne.y,ne.z),ne[y]=0,ne[_]=0,ne[v]=P>0?1:-1,f.push(ne.x,ne.y,ne.z),d.push(K/b),d.push(1-ae/U),Y+=1}}for(let ae=0;ae<U;ae++)for(let j=0;j<b;j++){const K=p+j+z*ae,Q=p+j+z*(ae+1),he=p+(j+1)+z*(ae+1),me=p+(j+1)+z*ae;h.push(K,Q,me),h.push(Q,he,me),$+=6}l.addGroup(g,$,S),g+=$,p+=Y}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new F0(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}};function ho(e){const t={};for(const n in e){t[n]={};for(const i in e[n]){const r=e[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?r.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[n][i]=null):t[n][i]=r.clone():Array.isArray(r)?t[n][i]=r.slice():t[n][i]=r}}return t}function Qn(e){const t={};for(let n=0;n<e.length;n++){const i=ho(e[n]);for(const r in i)t[r]=i[r]}return t}function PA(e){const t=[];for(let n=0;n<e.length;n++)t.push(e[n].clone());return t}function N0(e){return e.getRenderTarget()===null?e.outputColorSpace:hr}const UA={clone:ho,merge:Qn};var DA=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,IA=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;let Ka=class extends el{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=DA,this.fragmentShader=IA,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=ho(t.uniforms),this.uniformsGroups=PA(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const n=super.toJSON(t);n.glslVersion=this.glslVersion,n.uniforms={};for(const r in this.uniforms){const o=this.uniforms[r].value;o&&o.isTexture?n.uniforms[r]={type:"t",value:o.toJSON(t).uuid}:o&&o.isColor?n.uniforms[r]={type:"c",value:o.getHex()}:o&&o.isVector2?n.uniforms[r]={type:"v2",value:o.toArray()}:o&&o.isVector3?n.uniforms[r]={type:"v3",value:o.toArray()}:o&&o.isVector4?n.uniforms[r]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?n.uniforms[r]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?n.uniforms[r]={type:"m4",value:o.toArray()}:n.uniforms[r]={value:o}}Object.keys(this.defines).length>0&&(n.defines=this.defines),n.vertexShader=this.vertexShader,n.fragmentShader=this.fragmentShader,n.lights=this.lights,n.clipping=this.clipping;const i={};for(const r in this.extensions)this.extensions[r]===!0&&(i[r]=!0);return Object.keys(i).length>0&&(n.extensions=i),n}},O0=class extends Wi{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Cn,this.projectionMatrix=new Cn,this.projectionMatrixInverse=new Cn,this.coordinateSystem=Ir}copy(t,n){return super.copy(t,n),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this.coordinateSystem=t.coordinateSystem,this}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const n=this.matrixWorld.elements;return t.set(-n[8],-n[9],-n[10]).normalize()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,n){super.updateWorldMatrix(t,n),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}},kn=class extends O0{constructor(t=50,n=1,i=.1,r=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=i,this.far=r,this.focus=10,this.aspect=n,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,n){return super.copy(t,n),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const n=.5*this.getFilmHeight()/t;this.fov=Yd*2*Math.atan(n),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(cd*.5*this.fov);return .5*this.getFilmHeight()/t}getEffectiveFOV(){return Yd*2*Math.atan(Math.tan(cd*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(t,n,i,r,a,o){this.aspect=t/n,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=n,this.view.offsetX=i,this.view.offsetY=r,this.view.width=a,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let n=t*Math.tan(cd*.5*this.fov)/this.zoom,i=2*n,r=this.aspect*i,a=-.5*r;const o=this.view;if(this.view!==null&&this.view.enabled){const h=o.fullWidth,u=o.fullHeight;a+=o.offsetX*r/h,n-=o.offsetY*i/u,r*=o.width/h,i*=o.height/u}const l=this.filmOffset;l!==0&&(a+=t*l/this.getFilmWidth()),this.projectionMatrix.makePerspective(a,a+r,n,n-i,t,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const n=super.toJSON(t);return n.object.fov=this.fov,n.object.zoom=this.zoom,n.object.near=this.near,n.object.far=this.far,n.object.focus=this.focus,n.object.aspect=this.aspect,this.view!==null&&(n.object.view=Object.assign({},this.view)),n.object.filmGauge=this.filmGauge,n.object.filmOffset=this.filmOffset,n}};const eo=-90,to=1;let FA=class extends Wi{constructor(t,n,i){super(),this.type="CubeCamera",this.renderTarget=i,this.coordinateSystem=null;const r=new kn(eo,to,t,n);r.layers=this.layers,this.add(r);const a=new kn(eo,to,t,n);a.layers=this.layers,this.add(a);const o=new kn(eo,to,t,n);o.layers=this.layers,this.add(o);const l=new kn(eo,to,t,n);l.layers=this.layers,this.add(l);const h=new kn(eo,to,t,n);h.layers=this.layers,this.add(h);const u=new kn(eo,to,t,n);u.layers=this.layers,this.add(u)}updateCoordinateSystem(){const t=this.coordinateSystem,n=this.children.concat(),[i,r,a,o,l,h]=n;for(const u of n)this.remove(u);if(t===Ir)i.up.set(0,1,0),i.lookAt(1,0,0),r.up.set(0,1,0),r.lookAt(-1,0,0),a.up.set(0,0,-1),a.lookAt(0,1,0),o.up.set(0,0,1),o.lookAt(0,-1,0),l.up.set(0,1,0),l.lookAt(0,0,1),h.up.set(0,1,0),h.lookAt(0,0,-1);else if(t===eh)i.up.set(0,-1,0),i.lookAt(-1,0,0),r.up.set(0,-1,0),r.lookAt(1,0,0),a.up.set(0,0,1),a.lookAt(0,1,0),o.up.set(0,0,-1),o.lookAt(0,-1,0),l.up.set(0,-1,0),l.lookAt(0,0,1),h.up.set(0,-1,0),h.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+t);for(const u of n)this.add(u),u.updateMatrixWorld()}update(t,n){this.parent===null&&this.updateMatrixWorld();const i=this.renderTarget;this.coordinateSystem!==t.coordinateSystem&&(this.coordinateSystem=t.coordinateSystem,this.updateCoordinateSystem());const[r,a,o,l,h,u]=this.children,f=t.getRenderTarget(),d=t.xr.enabled;t.xr.enabled=!1;const p=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,t.setRenderTarget(i,0),t.render(n,r),t.setRenderTarget(i,1),t.render(n,a),t.setRenderTarget(i,2),t.render(n,o),t.setRenderTarget(i,3),t.render(n,l),t.setRenderTarget(i,4),t.render(n,h),i.texture.generateMipmaps=p,t.setRenderTarget(i,5),t.render(n,u),t.setRenderTarget(f),t.xr.enabled=d,i.texture.needsPMREMUpdate=!0}},B0=class extends vr{constructor(t,n,i,r,a,o,l,h,u,f){t=t!==void 0?t:[],n=n!==void 0?n:lo,super(t,n,i,r,a,o,l,h,u,f),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}};class NA extends Za{constructor(t=1,n={}){super(t,t,n),this.isWebGLCubeRenderTarget=!0;const i={width:t,height:t,depth:1},r=[i,i,i,i,i,i];n.encoding!==void 0&&(Fl("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),n.colorSpace=n.encoding===Wa?sn:Xa),this.texture=new B0(r,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:zi}fromEquirectangularTexture(t,n){this.texture.type=n.type,this.texture.colorSpace=n.colorSpace,this.texture.generateMipmaps=n.generateMipmaps,this.texture.minFilter=n.minFilter,this.texture.magFilter=n.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},r=new Fh(5,5,5),a=new Ka({name:"CubemapFromEquirect",uniforms:ho(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:ti,blending:ua});a.uniforms.tEquirect.value=n;const o=new bi(r,a),l=n.minFilter;return n.minFilter===Bl&&(n.minFilter=zi),new FA(1,10,this).update(t,o),n.minFilter=l,o.geometry.dispose(),o.material.dispose(),this}clear(t,n,i,r){const a=t.getRenderTarget();for(let o=0;o<6;o++)t.setRenderTarget(this,o),t.clear(n,i,r);t.setRenderTarget(a)}}const Ad=new ce,OA=new ce,BA=new Ot;let Ba=class{constructor(t=new ce(1,0,0),n=0){this.isPlane=!0,this.normal=t,this.constant=n}set(t,n){return this.normal.copy(t),this.constant=n,this}setComponents(t,n,i,r){return this.normal.set(t,n,i),this.constant=r,this}setFromNormalAndCoplanarPoint(t,n){return this.normal.copy(t),this.constant=-n.dot(this.normal),this}setFromCoplanarPoints(t,n,i){const r=Ad.subVectors(i,n).cross(OA.subVectors(t,n)).normalize();return this.setFromNormalAndCoplanarPoint(r,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,n){return n.copy(t).addScaledVector(this.normal,-this.distanceToPoint(t))}intersectLine(t,n){const i=t.delta(Ad),r=this.normal.dot(i);if(r===0)return this.distanceToPoint(t.start)===0?n.copy(t.start):null;const a=-(t.start.dot(this.normal)+this.constant)/r;return a<0||a>1?null:n.copy(t.start).addScaledVector(i,a)}intersectsLine(t){const n=this.distanceToPoint(t.start),i=this.distanceToPoint(t.end);return n<0&&i>0||i<0&&n>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,n){const i=n||BA.getNormalMatrix(t),r=this.coplanarPoint(Ad).applyMatrix4(t),a=this.normal.applyMatrix3(i).normalize();return this.constant=-r.dot(a),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return new this.constructor().copy(this)}};const Na=new Ih,ku=new ce;let Tp=class{constructor(t=new Ba,n=new Ba,i=new Ba,r=new Ba,a=new Ba,o=new Ba){this.planes=[t,n,i,r,a,o]}set(t,n,i,r,a,o){const l=this.planes;return l[0].copy(t),l[1].copy(n),l[2].copy(i),l[3].copy(r),l[4].copy(a),l[5].copy(o),this}copy(t){const n=this.planes;for(let i=0;i<6;i++)n[i].copy(t.planes[i]);return this}setFromProjectionMatrix(t,n=Ir){const i=this.planes,r=t.elements,a=r[0],o=r[1],l=r[2],h=r[3],u=r[4],f=r[5],d=r[6],p=r[7],g=r[8],x=r[9],y=r[10],_=r[11],v=r[12],w=r[13],M=r[14],T=r[15];if(i[0].setComponents(h-a,p-u,_-g,T-v).normalize(),i[1].setComponents(h+a,p+u,_+g,T+v).normalize(),i[2].setComponents(h+o,p+f,_+x,T+w).normalize(),i[3].setComponents(h-o,p-f,_-x,T-w).normalize(),i[4].setComponents(h-l,p-d,_-y,T-M).normalize(),n===Ir)i[5].setComponents(h+l,p+d,_+y,T+M).normalize();else if(n===eh)i[5].setComponents(l,d,y,M).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+n);return this}intersectsObject(t){if(t.boundingSphere!==void 0)t.boundingSphere===null&&t.computeBoundingSphere(),Na.copy(t.boundingSphere).applyMatrix4(t.matrixWorld);else{const n=t.geometry;n.boundingSphere===null&&n.computeBoundingSphere(),Na.copy(n.boundingSphere).applyMatrix4(t.matrixWorld)}return this.intersectsSphere(Na)}intersectsSprite(t){return Na.center.set(0,0,0),Na.radius=.7071067811865476,Na.applyMatrix4(t.matrixWorld),this.intersectsSphere(Na)}intersectsSphere(t){const n=this.planes,i=t.center,r=-t.radius;for(let a=0;a<6;a++)if(n[a].distanceToPoint(i)<r)return!1;return!0}intersectsBox(t){const n=this.planes;for(let i=0;i<6;i++){const r=n[i];if(ku.x=r.normal.x>0?t.max.x:t.min.x,ku.y=r.normal.y>0?t.max.y:t.min.y,ku.z=r.normal.z>0?t.max.z:t.min.z,r.distanceToPoint(ku)<0)return!1}return!0}containsPoint(t){const n=this.planes;for(let i=0;i<6;i++)if(n[i].distanceToPoint(t)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}};function z0(){let e=null,t=!1,n=null,i=null;function r(a,o){n(a,o),i=e.requestAnimationFrame(r)}return{start:function(){t!==!0&&n!==null&&(i=e.requestAnimationFrame(r),t=!0)},stop:function(){e.cancelAnimationFrame(i),t=!1},setAnimationLoop:function(a){n=a},setContext:function(a){e=a}}}function zA(e,t){const n=t.isWebGL2,i=new WeakMap;function r(u,f){const d=u.array,p=u.usage,g=e.createBuffer();e.bindBuffer(f,g),e.bufferData(f,d,p),u.onUploadCallback();let x;if(d instanceof Float32Array)x=e.FLOAT;else if(d instanceof Uint16Array)if(u.isFloat16BufferAttribute)if(n)x=e.HALF_FLOAT;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else x=e.UNSIGNED_SHORT;else if(d instanceof Int16Array)x=e.SHORT;else if(d instanceof Uint32Array)x=e.UNSIGNED_INT;else if(d instanceof Int32Array)x=e.INT;else if(d instanceof Int8Array)x=e.BYTE;else if(d instanceof Uint8Array)x=e.UNSIGNED_BYTE;else if(d instanceof Uint8ClampedArray)x=e.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+d);return{buffer:g,type:x,bytesPerElement:d.BYTES_PER_ELEMENT,version:u.version}}function a(u,f,d){const p=f.array,g=f.updateRange;e.bindBuffer(d,u),g.count===-1?e.bufferSubData(d,0,p):(n?e.bufferSubData(d,g.offset*p.BYTES_PER_ELEMENT,p,g.offset,g.count):e.bufferSubData(d,g.offset*p.BYTES_PER_ELEMENT,p.subarray(g.offset,g.offset+g.count)),g.count=-1),f.onUploadCallback()}function o(u){return u.isInterleavedBufferAttribute&&(u=u.data),i.get(u)}function l(u){u.isInterleavedBufferAttribute&&(u=u.data);const f=i.get(u);f&&(e.deleteBuffer(f.buffer),i.delete(u))}function h(u,f){if(u.isGLBufferAttribute){const p=i.get(u);(!p||p.version<u.version)&&i.set(u,{buffer:u.buffer,type:u.type,bytesPerElement:u.elementSize,version:u.version});return}u.isInterleavedBufferAttribute&&(u=u.data);const d=i.get(u);d===void 0?i.set(u,r(u,f)):d.version<u.version&&(a(d.buffer,u,f),d.version=u.version)}return{get:o,remove:l,update:h}}let GA=class G0 extends gr{constructor(t=1,n=1,i=1,r=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:n,widthSegments:i,heightSegments:r};const a=t/2,o=n/2,l=Math.floor(i),h=Math.floor(r),u=l+1,f=h+1,d=t/l,p=n/h,g=[],x=[],y=[],_=[];for(let v=0;v<f;v++){const w=v*p-o;for(let M=0;M<u;M++){const T=M*d-a;x.push(T,-w,0),y.push(0,0,1),_.push(M/l),_.push(1-v/h)}}for(let v=0;v<h;v++)for(let w=0;w<l;w++){const M=w+u*v,T=w+u*(v+1),A=w+1+u*(v+1),P=w+1+u*v;g.push(M,T,P),g.push(T,A,P)}this.setIndex(g),this.setAttribute("position",new ni(x,3)),this.setAttribute("normal",new ni(y,3)),this.setAttribute("uv",new ni(_,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new G0(t.width,t.height,t.widthSegments,t.heightSegments)}};var HA=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,VA=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,kA=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,WA=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,XA=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,YA=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,qA=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,$A=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,jA=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,ZA=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,KA=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,JA=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,QA=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,eR=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,tR=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,nR=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,iR=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,rR=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,aR=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,sR=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,oR=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,lR=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,cR=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,uR=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,hR=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,fR=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,dR=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,pR=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,mR="gl_FragColor = linearToOutputTexel( gl_FragColor );",vR=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,gR=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,_R=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,xR=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,yR=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,MR=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,ER=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,wR=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,SR=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,bR=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,TR=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,AR=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,RR=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,LR=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,CR=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,PR=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( LEGACY_LIGHTS )
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#else
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,UR=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,DR=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,IR=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,FR=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,NR=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,OR=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	anisotropyV /= material.anisotropy;
	material.anisotropy = saturate( material.anisotropy );
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x - tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x + tbn[ 0 ] * anisotropyV.y;
#endif`,BR=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,zR=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,GR=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometry.viewDir, geometry.normal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,HR=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,VR=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,kR=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,WR=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,XR=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,YR=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,qR=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,$R=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,jR=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,ZR=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,KR=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,JR=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,QR=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,eL=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,tL=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,nL=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 geometryNormal = normal;`,iL=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,rL=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,aL=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,sL=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,oL=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,lL=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,cL=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,uL=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,hL=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,fL=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,dL=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec2 packDepthToRG( in highp float v ) {
	return packDepthToRGBA( v ).yx;
}
float unpackRGToDepth( const in highp vec2 v ) {
	return unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,pL=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,mL=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,vL=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,gL=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,_L=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,xL=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,yL=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,ML=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,EL=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,wL=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,SL=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,bL=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,TL=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,AL=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,RL=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,LL=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,CL=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,PL=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,UL=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,DL=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,IL=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,FL=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,NL=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,OL=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const BL=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,zL=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,GL=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,HL=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,VL=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,kL=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,WL=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,XL=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,YL=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,qL=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,$L=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,jL=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,ZL=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,KL=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,JL=`#include <common>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,QL=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,eC=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,tC=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,nC=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,iC=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,rC=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,aC=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,sC=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,oC=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,lC=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,cC=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,uC=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,hC=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,fC=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,dC=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,pC=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,mC=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,vC=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,gC=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Lt={alphahash_fragment:HA,alphahash_pars_fragment:VA,alphamap_fragment:kA,alphamap_pars_fragment:WA,alphatest_fragment:XA,alphatest_pars_fragment:YA,aomap_fragment:qA,aomap_pars_fragment:$A,begin_vertex:jA,beginnormal_vertex:ZA,bsdfs:KA,iridescence_fragment:JA,bumpmap_pars_fragment:QA,clipping_planes_fragment:eR,clipping_planes_pars_fragment:tR,clipping_planes_pars_vertex:nR,clipping_planes_vertex:iR,color_fragment:rR,color_pars_fragment:aR,color_pars_vertex:sR,color_vertex:oR,common:lR,cube_uv_reflection_fragment:cR,defaultnormal_vertex:uR,displacementmap_pars_vertex:hR,displacementmap_vertex:fR,emissivemap_fragment:dR,emissivemap_pars_fragment:pR,colorspace_fragment:mR,colorspace_pars_fragment:vR,envmap_fragment:gR,envmap_common_pars_fragment:_R,envmap_pars_fragment:xR,envmap_pars_vertex:yR,envmap_physical_pars_fragment:UR,envmap_vertex:MR,fog_vertex:ER,fog_pars_vertex:wR,fog_fragment:SR,fog_pars_fragment:bR,gradientmap_pars_fragment:TR,lightmap_fragment:AR,lightmap_pars_fragment:RR,lights_lambert_fragment:LR,lights_lambert_pars_fragment:CR,lights_pars_begin:PR,lights_toon_fragment:DR,lights_toon_pars_fragment:IR,lights_phong_fragment:FR,lights_phong_pars_fragment:NR,lights_physical_fragment:OR,lights_physical_pars_fragment:BR,lights_fragment_begin:zR,lights_fragment_maps:GR,lights_fragment_end:HR,logdepthbuf_fragment:VR,logdepthbuf_pars_fragment:kR,logdepthbuf_pars_vertex:WR,logdepthbuf_vertex:XR,map_fragment:YR,map_pars_fragment:qR,map_particle_fragment:$R,map_particle_pars_fragment:jR,metalnessmap_fragment:ZR,metalnessmap_pars_fragment:KR,morphcolor_vertex:JR,morphnormal_vertex:QR,morphtarget_pars_vertex:eL,morphtarget_vertex:tL,normal_fragment_begin:nL,normal_fragment_maps:iL,normal_pars_fragment:rL,normal_pars_vertex:aL,normal_vertex:sL,normalmap_pars_fragment:oL,clearcoat_normal_fragment_begin:lL,clearcoat_normal_fragment_maps:cL,clearcoat_pars_fragment:uL,iridescence_pars_fragment:hL,opaque_fragment:fL,packing:dL,premultiplied_alpha_fragment:pL,project_vertex:mL,dithering_fragment:vL,dithering_pars_fragment:gL,roughnessmap_fragment:_L,roughnessmap_pars_fragment:xL,shadowmap_pars_fragment:yL,shadowmap_pars_vertex:ML,shadowmap_vertex:EL,shadowmask_pars_fragment:wL,skinbase_vertex:SL,skinning_pars_vertex:bL,skinning_vertex:TL,skinnormal_vertex:AL,specularmap_fragment:RL,specularmap_pars_fragment:LL,tonemapping_fragment:CL,tonemapping_pars_fragment:PL,transmission_fragment:UL,transmission_pars_fragment:DL,uv_pars_fragment:IL,uv_pars_vertex:FL,uv_vertex:NL,worldpos_vertex:OL,background_vert:BL,background_frag:zL,backgroundCube_vert:GL,backgroundCube_frag:HL,cube_vert:VL,cube_frag:kL,depth_vert:WL,depth_frag:XL,distanceRGBA_vert:YL,distanceRGBA_frag:qL,equirect_vert:$L,equirect_frag:jL,linedashed_vert:ZL,linedashed_frag:KL,meshbasic_vert:JL,meshbasic_frag:QL,meshlambert_vert:eC,meshlambert_frag:tC,meshmatcap_vert:nC,meshmatcap_frag:iC,meshnormal_vert:rC,meshnormal_frag:aC,meshphong_vert:sC,meshphong_frag:oC,meshphysical_vert:lC,meshphysical_frag:cC,meshtoon_vert:uC,meshtoon_frag:hC,points_vert:fC,points_frag:dC,shadow_vert:pC,shadow_frag:mC,sprite_vert:vC,sprite_frag:gC},Ze={common:{diffuse:{value:new Ht(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Ot},alphaMap:{value:null},alphaMapTransform:{value:new Ot},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Ot}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Ot}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Ot}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Ot},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Ot},normalScale:{value:new Wt(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Ot},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Ot}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Ot}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Ot}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Ht(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Ht(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Ot},alphaTest:{value:0},uvTransform:{value:new Ot}},sprite:{diffuse:{value:new Ht(16777215)},opacity:{value:1},center:{value:new Wt(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Ot},alphaMap:{value:null},alphaMapTransform:{value:new Ot},alphaTest:{value:0}}},lr={basic:{uniforms:Qn([Ze.common,Ze.specularmap,Ze.envmap,Ze.aomap,Ze.lightmap,Ze.fog]),vertexShader:Lt.meshbasic_vert,fragmentShader:Lt.meshbasic_frag},lambert:{uniforms:Qn([Ze.common,Ze.specularmap,Ze.envmap,Ze.aomap,Ze.lightmap,Ze.emissivemap,Ze.bumpmap,Ze.normalmap,Ze.displacementmap,Ze.fog,Ze.lights,{emissive:{value:new Ht(0)}}]),vertexShader:Lt.meshlambert_vert,fragmentShader:Lt.meshlambert_frag},phong:{uniforms:Qn([Ze.common,Ze.specularmap,Ze.envmap,Ze.aomap,Ze.lightmap,Ze.emissivemap,Ze.bumpmap,Ze.normalmap,Ze.displacementmap,Ze.fog,Ze.lights,{emissive:{value:new Ht(0)},specular:{value:new Ht(1118481)},shininess:{value:30}}]),vertexShader:Lt.meshphong_vert,fragmentShader:Lt.meshphong_frag},standard:{uniforms:Qn([Ze.common,Ze.envmap,Ze.aomap,Ze.lightmap,Ze.emissivemap,Ze.bumpmap,Ze.normalmap,Ze.displacementmap,Ze.roughnessmap,Ze.metalnessmap,Ze.fog,Ze.lights,{emissive:{value:new Ht(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Lt.meshphysical_vert,fragmentShader:Lt.meshphysical_frag},toon:{uniforms:Qn([Ze.common,Ze.aomap,Ze.lightmap,Ze.emissivemap,Ze.bumpmap,Ze.normalmap,Ze.displacementmap,Ze.gradientmap,Ze.fog,Ze.lights,{emissive:{value:new Ht(0)}}]),vertexShader:Lt.meshtoon_vert,fragmentShader:Lt.meshtoon_frag},matcap:{uniforms:Qn([Ze.common,Ze.bumpmap,Ze.normalmap,Ze.displacementmap,Ze.fog,{matcap:{value:null}}]),vertexShader:Lt.meshmatcap_vert,fragmentShader:Lt.meshmatcap_frag},points:{uniforms:Qn([Ze.points,Ze.fog]),vertexShader:Lt.points_vert,fragmentShader:Lt.points_frag},dashed:{uniforms:Qn([Ze.common,Ze.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Lt.linedashed_vert,fragmentShader:Lt.linedashed_frag},depth:{uniforms:Qn([Ze.common,Ze.displacementmap]),vertexShader:Lt.depth_vert,fragmentShader:Lt.depth_frag},normal:{uniforms:Qn([Ze.common,Ze.bumpmap,Ze.normalmap,Ze.displacementmap,{opacity:{value:1}}]),vertexShader:Lt.meshnormal_vert,fragmentShader:Lt.meshnormal_frag},sprite:{uniforms:Qn([Ze.sprite,Ze.fog]),vertexShader:Lt.sprite_vert,fragmentShader:Lt.sprite_frag},background:{uniforms:{uvTransform:{value:new Ot},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Lt.background_vert,fragmentShader:Lt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:Lt.backgroundCube_vert,fragmentShader:Lt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Lt.cube_vert,fragmentShader:Lt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Lt.equirect_vert,fragmentShader:Lt.equirect_frag},distanceRGBA:{uniforms:Qn([Ze.common,Ze.displacementmap,{referencePosition:{value:new ce},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Lt.distanceRGBA_vert,fragmentShader:Lt.distanceRGBA_frag},shadow:{uniforms:Qn([Ze.lights,Ze.fog,{color:{value:new Ht(0)},opacity:{value:1}}]),vertexShader:Lt.shadow_vert,fragmentShader:Lt.shadow_frag}};lr.physical={uniforms:Qn([lr.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Ot},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Ot},clearcoatNormalScale:{value:new Wt(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Ot},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Ot},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Ot},sheen:{value:0},sheenColor:{value:new Ht(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Ot},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Ot},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Ot},transmissionSamplerSize:{value:new Wt},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Ot},attenuationDistance:{value:0},attenuationColor:{value:new Ht(0)},specularColor:{value:new Ht(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Ot},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Ot},anisotropyVector:{value:new Wt},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Ot}}]),vertexShader:Lt.meshphysical_vert,fragmentShader:Lt.meshphysical_frag};const Wu={r:0,b:0,g:0};function _C(e,t,n,i,r,a,o){const l=new Ht(0);let h=a===!0?0:1,u,f,d=null,p=0,g=null;function x(_,v){let w=!1,M=v.isScene===!0?v.background:null;M&&M.isTexture&&(M=(v.backgroundBlurriness>0?n:t).get(M)),M===null?y(l,h):M&&M.isColor&&(y(M,1),w=!0);const T=e.xr.getEnvironmentBlendMode();T==="additive"?i.buffers.color.setClear(0,0,0,1,o):T==="alpha-blend"&&i.buffers.color.setClear(0,0,0,0,o),(e.autoClear||w)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),M&&(M.isCubeTexture||M.mapping===Uh)?(f===void 0&&(f=new bi(new Fh(1,1,1),new Ka({name:"BackgroundCubeMaterial",uniforms:ho(lr.backgroundCube.uniforms),vertexShader:lr.backgroundCube.vertexShader,fragmentShader:lr.backgroundCube.fragmentShader,side:ti,depthTest:!1,depthWrite:!1,fog:!1})),f.geometry.deleteAttribute("normal"),f.geometry.deleteAttribute("uv"),f.onBeforeRender=function(A,P,b){this.matrixWorld.copyPosition(b.matrixWorld)},Object.defineProperty(f.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(f)),f.material.uniforms.envMap.value=M,f.material.uniforms.flipEnvMap.value=M.isCubeTexture&&M.isRenderTargetTexture===!1?-1:1,f.material.uniforms.backgroundBlurriness.value=v.backgroundBlurriness,f.material.uniforms.backgroundIntensity.value=v.backgroundIntensity,f.material.toneMapped=M.colorSpace!==sn,(d!==M||p!==M.version||g!==e.toneMapping)&&(f.material.needsUpdate=!0,d=M,p=M.version,g=e.toneMapping),f.layers.enableAll(),_.unshift(f,f.geometry,f.material,0,0,null)):M&&M.isTexture&&(u===void 0&&(u=new bi(new GA(2,2),new Ka({name:"BackgroundMaterial",uniforms:ho(lr.background.uniforms),vertexShader:lr.background.vertexShader,fragmentShader:lr.background.fragmentShader,side:da,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),Object.defineProperty(u.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(u)),u.material.uniforms.t2D.value=M,u.material.uniforms.backgroundIntensity.value=v.backgroundIntensity,u.material.toneMapped=M.colorSpace!==sn,M.matrixAutoUpdate===!0&&M.updateMatrix(),u.material.uniforms.uvTransform.value.copy(M.matrix),(d!==M||p!==M.version||g!==e.toneMapping)&&(u.material.needsUpdate=!0,d=M,p=M.version,g=e.toneMapping),u.layers.enableAll(),_.unshift(u,u.geometry,u.material,0,0,null))}function y(_,v){_.getRGB(Wu,N0(e)),i.buffers.color.setClear(Wu.r,Wu.g,Wu.b,v,o)}return{getClearColor:function(){return l},setClearColor:function(_,v=1){l.set(_),h=v,y(l,h)},getClearAlpha:function(){return h},setClearAlpha:function(_){h=_,y(l,h)},render:x}}function xC(e,t,n,i){const r=e.getParameter(e.MAX_VERTEX_ATTRIBS),a=i.isWebGL2?null:t.get("OES_vertex_array_object"),o=i.isWebGL2||a!==null,l={},h=_(null);let u=h,f=!1;function d(I,z,X,Y,$){let ne=!1;if(o){const ae=y(Y,X,z);u!==ae&&(u=ae,g(u.object)),ne=v(I,Y,X,$),ne&&w(I,Y,X,$)}else{const ae=z.wireframe===!0;(u.geometry!==Y.id||u.program!==X.id||u.wireframe!==ae)&&(u.geometry=Y.id,u.program=X.id,u.wireframe=ae,ne=!0)}$!==null&&n.update($,e.ELEMENT_ARRAY_BUFFER),(ne||f)&&(f=!1,U(I,z,X,Y),$!==null&&e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n.get($).buffer))}function p(){return i.isWebGL2?e.createVertexArray():a.createVertexArrayOES()}function g(I){return i.isWebGL2?e.bindVertexArray(I):a.bindVertexArrayOES(I)}function x(I){return i.isWebGL2?e.deleteVertexArray(I):a.deleteVertexArrayOES(I)}function y(I,z,X){const Y=X.wireframe===!0;let $=l[I.id];$===void 0&&($={},l[I.id]=$);let ne=$[z.id];ne===void 0&&(ne={},$[z.id]=ne);let ae=ne[Y];return ae===void 0&&(ae=_(p()),ne[Y]=ae),ae}function _(I){const z=[],X=[],Y=[];for(let $=0;$<r;$++)z[$]=0,X[$]=0,Y[$]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:z,enabledAttributes:X,attributeDivisors:Y,object:I,attributes:{},index:null}}function v(I,z,X,Y){const $=u.attributes,ne=z.attributes;let ae=0;const j=X.getAttributes();for(const K in j)if(j[K].location>=0){const he=$[K];let me=ne[K];if(me===void 0&&(K==="instanceMatrix"&&I.instanceMatrix&&(me=I.instanceMatrix),K==="instanceColor"&&I.instanceColor&&(me=I.instanceColor)),he===void 0||he.attribute!==me||me&&he.data!==me.data)return!0;ae++}return u.attributesNum!==ae||u.index!==Y}function w(I,z,X,Y){const $={},ne=z.attributes;let ae=0;const j=X.getAttributes();for(const K in j)if(j[K].location>=0){let he=ne[K];he===void 0&&(K==="instanceMatrix"&&I.instanceMatrix&&(he=I.instanceMatrix),K==="instanceColor"&&I.instanceColor&&(he=I.instanceColor));const me={};me.attribute=he,he&&he.data&&(me.data=he.data),$[K]=me,ae++}u.attributes=$,u.attributesNum=ae,u.index=Y}function M(){const I=u.newAttributes;for(let z=0,X=I.length;z<X;z++)I[z]=0}function T(I){A(I,0)}function A(I,z){const X=u.newAttributes,Y=u.enabledAttributes,$=u.attributeDivisors;X[I]=1,Y[I]===0&&(e.enableVertexAttribArray(I),Y[I]=1),$[I]!==z&&((i.isWebGL2?e:t.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](I,z),$[I]=z)}function P(){const I=u.newAttributes,z=u.enabledAttributes;for(let X=0,Y=z.length;X<Y;X++)z[X]!==I[X]&&(e.disableVertexAttribArray(X),z[X]=0)}function b(I,z,X,Y,$,ne,ae){ae===!0?e.vertexAttribIPointer(I,z,X,$,ne):e.vertexAttribPointer(I,z,X,Y,$,ne)}function U(I,z,X,Y){if(i.isWebGL2===!1&&(I.isInstancedMesh||Y.isInstancedBufferGeometry)&&t.get("ANGLE_instanced_arrays")===null)return;M();const $=Y.attributes,ne=X.getAttributes(),ae=z.defaultAttributeValues;for(const j in ne){const K=ne[j];if(K.location>=0){let Q=$[j];if(Q===void 0&&(j==="instanceMatrix"&&I.instanceMatrix&&(Q=I.instanceMatrix),j==="instanceColor"&&I.instanceColor&&(Q=I.instanceColor)),Q!==void 0){const he=Q.normalized,me=Q.itemSize,ge=n.get(Q);if(ge===void 0)continue;const Pe=ge.buffer,we=ge.type,Se=ge.bytesPerElement,ht=i.isWebGL2===!0&&(we===e.INT||we===e.UNSIGNED_INT||Q.gpuType===h0);if(Q.isInterleavedBufferAttribute){const J=Q.data,se=J.stride,Qe=Q.offset;if(J.isInstancedInterleavedBuffer){for(let ze=0;ze<K.locationSize;ze++)A(K.location+ze,J.meshPerAttribute);I.isInstancedMesh!==!0&&Y._maxInstanceCount===void 0&&(Y._maxInstanceCount=J.meshPerAttribute*J.count)}else for(let ze=0;ze<K.locationSize;ze++)T(K.location+ze);e.bindBuffer(e.ARRAY_BUFFER,Pe);for(let ze=0;ze<K.locationSize;ze++)b(K.location+ze,me/K.locationSize,we,he,se*Se,(Qe+me/K.locationSize*ze)*Se,ht)}else{if(Q.isInstancedBufferAttribute){for(let J=0;J<K.locationSize;J++)A(K.location+J,Q.meshPerAttribute);I.isInstancedMesh!==!0&&Y._maxInstanceCount===void 0&&(Y._maxInstanceCount=Q.meshPerAttribute*Q.count)}else for(let J=0;J<K.locationSize;J++)T(K.location+J);e.bindBuffer(e.ARRAY_BUFFER,Pe);for(let J=0;J<K.locationSize;J++)b(K.location+J,me/K.locationSize,we,he,me*Se,me/K.locationSize*J*Se,ht)}}else if(ae!==void 0){const he=ae[j];if(he!==void 0)switch(he.length){case 2:e.vertexAttrib2fv(K.location,he);break;case 3:e.vertexAttrib3fv(K.location,he);break;case 4:e.vertexAttrib4fv(K.location,he);break;default:e.vertexAttrib1fv(K.location,he)}}}}P()}function S(){W();for(const I in l){const z=l[I];for(const X in z){const Y=z[X];for(const $ in Y)x(Y[$].object),delete Y[$];delete z[X]}delete l[I]}}function R(I){if(l[I.id]===void 0)return;const z=l[I.id];for(const X in z){const Y=z[X];for(const $ in Y)x(Y[$].object),delete Y[$];delete z[X]}delete l[I.id]}function V(I){for(const z in l){const X=l[z];if(X[I.id]===void 0)continue;const Y=X[I.id];for(const $ in Y)x(Y[$].object),delete Y[$];delete X[I.id]}}function W(){L(),f=!0,u!==h&&(u=h,g(u.object))}function L(){h.geometry=null,h.program=null,h.wireframe=!1}return{setup:d,reset:W,resetDefaultState:L,dispose:S,releaseStatesOfGeometry:R,releaseStatesOfProgram:V,initAttributes:M,enableAttribute:T,disableUnusedAttributes:P}}function yC(e,t,n,i){const r=i.isWebGL2;let a;function o(u){a=u}function l(u,f){e.drawArrays(a,u,f),n.update(f,a,1)}function h(u,f,d){if(d===0)return;let p,g;if(r)p=e,g="drawArraysInstanced";else if(p=t.get("ANGLE_instanced_arrays"),g="drawArraysInstancedANGLE",p===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}p[g](a,u,f,d),n.update(f,a,d)}this.setMode=o,this.render=l,this.renderInstances=h}function MC(e,t,n){let i;function r(){if(i!==void 0)return i;if(t.has("EXT_texture_filter_anisotropic")===!0){const b=t.get("EXT_texture_filter_anisotropic");i=e.getParameter(b.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i}function a(b){if(b==="highp"){if(e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision>0)return"highp";b="mediump"}return b==="mediump"&&e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext<"u"&&e.constructor.name==="WebGL2RenderingContext";let l=n.precision!==void 0?n.precision:"highp";const h=a(l);h!==l&&(console.warn("THREE.WebGLRenderer:",l,"not supported, using",h,"instead."),l=h);const u=o||t.has("WEBGL_draw_buffers"),f=n.logarithmicDepthBuffer===!0,d=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),p=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS),g=e.getParameter(e.MAX_TEXTURE_SIZE),x=e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),y=e.getParameter(e.MAX_VERTEX_ATTRIBS),_=e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS),v=e.getParameter(e.MAX_VARYING_VECTORS),w=e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS),M=p>0,T=o||t.has("OES_texture_float"),A=M&&T,P=o?e.getParameter(e.MAX_SAMPLES):0;return{isWebGL2:o,drawBuffers:u,getMaxAnisotropy:r,getMaxPrecision:a,precision:l,logarithmicDepthBuffer:f,maxTextures:d,maxVertexTextures:p,maxTextureSize:g,maxCubemapSize:x,maxAttributes:y,maxVertexUniforms:_,maxVaryings:v,maxFragmentUniforms:w,vertexTextures:M,floatFragmentTextures:T,floatVertexTextures:A,maxSamples:P}}function EC(e){const t=this;let n=null,i=0,r=!1,a=!1;const o=new Ba,l=new Ot,h={value:null,needsUpdate:!1};this.uniform=h,this.numPlanes=0,this.numIntersection=0,this.init=function(d,p){const g=d.length!==0||p||i!==0||r;return r=p,i=d.length,g},this.beginShadows=function(){a=!0,f(null)},this.endShadows=function(){a=!1},this.setGlobalState=function(d,p){n=f(d,p,0)},this.setState=function(d,p,g){const x=d.clippingPlanes,y=d.clipIntersection,_=d.clipShadows,v=e.get(d);if(!r||x===null||x.length===0||a&&!_)a?f(null):u();else{const w=a?0:i,M=w*4;let T=v.clippingState||null;h.value=T,T=f(x,p,M,g);for(let A=0;A!==M;++A)T[A]=n[A];v.clippingState=T,this.numIntersection=y?this.numPlanes:0,this.numPlanes+=w}};function u(){h.value!==n&&(h.value=n,h.needsUpdate=i>0),t.numPlanes=i,t.numIntersection=0}function f(d,p,g,x){const y=d!==null?d.length:0;let _=null;if(y!==0){if(_=h.value,x!==!0||_===null){const v=g+y*4,w=p.matrixWorldInverse;l.getNormalMatrix(w),(_===null||_.length<v)&&(_=new Float32Array(v));for(let M=0,T=g;M!==y;++M,T+=4)o.copy(d[M]).applyMatrix4(w,l),o.normal.toArray(_,T),_[T+3]=o.constant}h.value=_,h.needsUpdate=!0}return t.numPlanes=y,t.numIntersection=0,_}}function wC(e){let t=new WeakMap;function n(o,l){return l===Hd?o.mapping=lo:l===Vd&&(o.mapping=co),o}function i(o){if(o&&o.isTexture&&o.isRenderTargetTexture===!1){const l=o.mapping;if(l===Hd||l===Vd)if(t.has(o)){const h=t.get(o).texture;return n(h,o.mapping)}else{const h=o.image;if(h&&h.height>0){const u=new NA(h.height/2);return u.fromEquirectangularTexture(e,o),t.set(o,u),o.addEventListener("dispose",r),n(u.texture,o.mapping)}else return null}}return o}function r(o){const l=o.target;l.removeEventListener("dispose",r);const h=t.get(l);h!==void 0&&(t.delete(l),h.dispose())}function a(){t=new WeakMap}return{get:i,dispose:a}}let SC=class extends O0{constructor(t=-1,n=1,i=1,r=-1,a=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=n,this.top=i,this.bottom=r,this.near=a,this.far=o,this.updateProjectionMatrix()}copy(t,n){return super.copy(t,n),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this}setViewOffset(t,n,i,r,a,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=n,this.view.offsetX=i,this.view.offsetY=r,this.view.width=a,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),n=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,r=(this.top+this.bottom)/2;let a=i-t,o=i+t,l=r+n,h=r-n;if(this.view!==null&&this.view.enabled){const u=(this.right-this.left)/this.view.fullWidth/this.zoom,f=(this.top-this.bottom)/this.view.fullHeight/this.zoom;a+=u*this.view.offsetX,o=a+u*this.view.width,l-=f*this.view.offsetY,h=l-f*this.view.height}this.projectionMatrix.makeOrthographic(a,o,l,h,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const n=super.toJSON(t);return n.object.zoom=this.zoom,n.object.left=this.left,n.object.right=this.right,n.object.top=this.top,n.object.bottom=this.bottom,n.object.near=this.near,n.object.far=this.far,this.view!==null&&(n.object.view=Object.assign({},this.view)),n}};const ro=4,y_=[.125,.215,.35,.446,.526,.582],Ga=20,Rd=new SC,M_=new Ht;let Ld=null;const za=(1+Math.sqrt(5))/2,no=1/za,E_=[new ce(1,1,1),new ce(-1,1,1),new ce(1,1,-1),new ce(-1,1,-1),new ce(0,za,no),new ce(0,za,-no),new ce(no,0,za),new ce(-no,0,za),new ce(za,no,0),new ce(-za,no,0)];class w_{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,n=0,i=.1,r=100){Ld=this._renderer.getRenderTarget(),this._setSize(256);const a=this._allocateTargets();return a.depthBuffer=!0,this._sceneToCubeUV(t,i,r,a),n>0&&this._blur(a,0,0,n),this._applyPMREM(a),this._cleanup(a),a}fromEquirectangular(t,n=null){return this._fromTexture(t,n)}fromCubemap(t,n=null){return this._fromTexture(t,n)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=T_(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=b_(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(Ld),t.scissorTest=!1,Xu(t,0,0,t.width,t.height)}_fromTexture(t,n){t.mapping===lo||t.mapping===co?this._setSize(t.image.length===0?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),Ld=this._renderer.getRenderTarget();const i=n||this._allocateTargets();return this._textureToCubeUV(t,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),n=4*this._cubeSize,i={magFilter:zi,minFilter:zi,generateMipmaps:!1,type:zl,format:nr,colorSpace:hr,depthBuffer:!1},r=S_(t,n,i);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==t||this._pingPongRenderTarget.height!==n){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=S_(t,n,i);const{_lodMax:a}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=bC(a)),this._blurMaterial=TC(a,t,n)}return r}_compileMaterial(t){const n=new bi(this._lodPlanes[0],t);this._renderer.compile(n,Rd)}_sceneToCubeUV(t,n,i,r){const l=new kn(90,1,n,i),h=[1,-1,1,1,1,1],u=[1,1,1,-1,-1,-1],f=this._renderer,d=f.autoClear,p=f.toneMapping;f.getClearColor(M_),f.toneMapping=ha,f.autoClear=!1;const g=new tl({name:"PMREM.Background",side:ti,depthWrite:!1,depthTest:!1}),x=new bi(new Fh,g);let y=!1;const _=t.background;_?_.isColor&&(g.color.copy(_),t.background=null,y=!0):(g.color.copy(M_),y=!0);for(let v=0;v<6;v++){const w=v%3;w===0?(l.up.set(0,h[v],0),l.lookAt(u[v],0,0)):w===1?(l.up.set(0,0,h[v]),l.lookAt(0,u[v],0)):(l.up.set(0,h[v],0),l.lookAt(0,0,u[v]));const M=this._cubeSize;Xu(r,w*M,v>2?M:0,M,M),f.setRenderTarget(r),y&&f.render(x,l),f.render(t,l)}x.geometry.dispose(),x.material.dispose(),f.toneMapping=p,f.autoClear=d,t.background=_}_textureToCubeUV(t,n){const i=this._renderer,r=t.mapping===lo||t.mapping===co;r?(this._cubemapMaterial===null&&(this._cubemapMaterial=T_()),this._cubemapMaterial.uniforms.flipEnvMap.value=t.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=b_());const a=r?this._cubemapMaterial:this._equirectMaterial,o=new bi(this._lodPlanes[0],a),l=a.uniforms;l.envMap.value=t;const h=this._cubeSize;Xu(n,0,0,3*h,2*h),i.setRenderTarget(n),i.render(o,Rd)}_applyPMREM(t){const n=this._renderer,i=n.autoClear;n.autoClear=!1;for(let r=1;r<this._lodPlanes.length;r++){const a=Math.sqrt(this._sigmas[r]*this._sigmas[r]-this._sigmas[r-1]*this._sigmas[r-1]),o=E_[(r-1)%E_.length];this._blur(t,r-1,r,a,o)}n.autoClear=i}_blur(t,n,i,r,a){const o=this._pingPongRenderTarget;this._halfBlur(t,o,n,i,r,"latitudinal",a),this._halfBlur(o,t,i,i,r,"longitudinal",a)}_halfBlur(t,n,i,r,a,o,l){const h=this._renderer,u=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const f=3,d=new bi(this._lodPlanes[r],u),p=u.uniforms,g=this._sizeLods[i]-1,x=isFinite(a)?Math.PI/(2*g):2*Math.PI/(2*Ga-1),y=a/x,_=isFinite(a)?1+Math.floor(f*y):Ga;_>Ga&&console.warn(`sigmaRadians, ${a}, is too large and will clip, as it requested ${_} samples when the maximum is set to ${Ga}`);const v=[];let w=0;for(let b=0;b<Ga;++b){const U=b/y,S=Math.exp(-U*U/2);v.push(S),b===0?w+=S:b<_&&(w+=2*S)}for(let b=0;b<v.length;b++)v[b]=v[b]/w;p.envMap.value=t.texture,p.samples.value=_,p.weights.value=v,p.latitudinal.value=o==="latitudinal",l&&(p.poleAxis.value=l);const{_lodMax:M}=this;p.dTheta.value=x,p.mipInt.value=M-i;const T=this._sizeLods[r],A=3*T*(r>M-ro?r-M+ro:0),P=4*(this._cubeSize-T);Xu(n,A,P,3*T,2*T),h.setRenderTarget(n),h.render(d,Rd)}}function bC(e){const t=[],n=[],i=[];let r=e;const a=e-ro+1+y_.length;for(let o=0;o<a;o++){const l=Math.pow(2,r);n.push(l);let h=1/l;o>e-ro?h=y_[o-e+ro-1]:o===0&&(h=0),i.push(h);const u=1/(l-2),f=-u,d=1+u,p=[f,f,d,f,d,d,f,f,d,d,f,d],g=6,x=6,y=3,_=2,v=1,w=new Float32Array(y*x*g),M=new Float32Array(_*x*g),T=new Float32Array(v*x*g);for(let P=0;P<g;P++){const b=P%3*2/3-1,U=P>2?0:-1,S=[b,U,0,b+2/3,U,0,b+2/3,U+1,0,b,U,0,b+2/3,U+1,0,b,U+1,0];w.set(S,y*x*P),M.set(p,_*x*P);const R=[P,P,P,P,P,P];T.set(R,v*x*P)}const A=new gr;A.setAttribute("position",new ur(w,y)),A.setAttribute("uv",new ur(M,_)),A.setAttribute("faceIndex",new ur(T,v)),t.push(A),r>ro&&r--}return{lodPlanes:t,sizeLods:n,sigmas:i}}function S_(e,t,n){const i=new Za(e,t,n);return i.texture.mapping=Uh,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function Xu(e,t,n,i,r){e.viewport.set(t,n,i,r),e.scissor.set(t,n,i,r)}function TC(e,t,n){const i=new Float32Array(Ga),r=new ce(0,1,0);return new Ka({name:"SphericalGaussianBlur",defines:{n:Ga,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/n,CUBEUV_MAX_MIP:`${e}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:Ap(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:ua,depthTest:!1,depthWrite:!1})}function b_(){return new Ka({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Ap(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:ua,depthTest:!1,depthWrite:!1})}function T_(){return new Ka({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Ap(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:ua,depthTest:!1,depthWrite:!1})}function Ap(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function AC(e){let t=new WeakMap,n=null;function i(l){if(l&&l.isTexture){const h=l.mapping,u=h===Hd||h===Vd,f=h===lo||h===co;if(u||f)if(l.isRenderTargetTexture&&l.needsPMREMUpdate===!0){l.needsPMREMUpdate=!1;let d=t.get(l);return n===null&&(n=new w_(e)),d=u?n.fromEquirectangular(l,d):n.fromCubemap(l,d),t.set(l,d),d.texture}else{if(t.has(l))return t.get(l).texture;{const d=l.image;if(u&&d&&d.height>0||f&&d&&r(d)){n===null&&(n=new w_(e));const p=u?n.fromEquirectangular(l):n.fromCubemap(l);return t.set(l,p),l.addEventListener("dispose",a),p.texture}else return null}}}return l}function r(l){let h=0;const u=6;for(let f=0;f<u;f++)l[f]!==void 0&&h++;return h===u}function a(l){const h=l.target;h.removeEventListener("dispose",a);const u=t.get(h);u!==void 0&&(t.delete(h),u.dispose())}function o(){t=new WeakMap,n!==null&&(n.dispose(),n=null)}return{get:i,dispose:o}}function RC(e){const t={};function n(i){if(t[i]!==void 0)return t[i];let r;switch(i){case"WEBGL_depth_texture":r=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":r=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":r=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":r=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:r=e.getExtension(i)}return t[i]=r,r}return{has:function(i){return n(i)!==null},init:function(i){i.isWebGL2?n("EXT_color_buffer_float"):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture")},get:function(i){const r=n(i);return r===null&&console.warn("THREE.WebGLRenderer: "+i+" extension not supported."),r}}}function LC(e,t,n,i){const r={},a=new WeakMap;function o(d){const p=d.target;p.index!==null&&t.remove(p.index);for(const x in p.attributes)t.remove(p.attributes[x]);for(const x in p.morphAttributes){const y=p.morphAttributes[x];for(let _=0,v=y.length;_<v;_++)t.remove(y[_])}p.removeEventListener("dispose",o),delete r[p.id];const g=a.get(p);g&&(t.remove(g),a.delete(p)),i.releaseStatesOfGeometry(p),p.isInstancedBufferGeometry===!0&&delete p._maxInstanceCount,n.memory.geometries--}function l(d,p){return r[p.id]===!0||(p.addEventListener("dispose",o),r[p.id]=!0,n.memory.geometries++),p}function h(d){const p=d.attributes;for(const x in p)t.update(p[x],e.ARRAY_BUFFER);const g=d.morphAttributes;for(const x in g){const y=g[x];for(let _=0,v=y.length;_<v;_++)t.update(y[_],e.ARRAY_BUFFER)}}function u(d){const p=[],g=d.index,x=d.attributes.position;let y=0;if(g!==null){const w=g.array;y=g.version;for(let M=0,T=w.length;M<T;M+=3){const A=w[M+0],P=w[M+1],b=w[M+2];p.push(A,P,P,b,b,A)}}else if(x!==void 0){const w=x.array;y=x.version;for(let M=0,T=w.length/3-1;M<T;M+=3){const A=M+0,P=M+1,b=M+2;p.push(A,P,P,b,b,A)}}else return;const _=new(M0(p)?D0:U0)(p,1);_.version=y;const v=a.get(d);v&&t.remove(v),a.set(d,_)}function f(d){const p=a.get(d);if(p){const g=d.index;g!==null&&p.version<g.version&&u(d)}else u(d);return a.get(d)}return{get:l,update:h,getWireframeAttribute:f}}function CC(e,t,n,i){const r=i.isWebGL2;let a;function o(p){a=p}let l,h;function u(p){l=p.type,h=p.bytesPerElement}function f(p,g){e.drawElements(a,g,l,p*h),n.update(g,a,1)}function d(p,g,x){if(x===0)return;let y,_;if(r)y=e,_="drawElementsInstanced";else if(y=t.get("ANGLE_instanced_arrays"),_="drawElementsInstancedANGLE",y===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}y[_](a,g,l,p*h,x),n.update(g,a,x)}this.setMode=o,this.setIndex=u,this.render=f,this.renderInstances=d}function PC(e){const t={geometries:0,textures:0},n={frame:0,calls:0,triangles:0,points:0,lines:0};function i(a,o,l){switch(n.calls++,o){case e.TRIANGLES:n.triangles+=l*(a/3);break;case e.LINES:n.lines+=l*(a/2);break;case e.LINE_STRIP:n.lines+=l*(a-1);break;case e.LINE_LOOP:n.lines+=l*a;break;case e.POINTS:n.points+=l*a;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function r(){n.calls=0,n.triangles=0,n.points=0,n.lines=0}return{memory:t,render:n,programs:null,autoReset:!0,reset:r,update:i}}function UC(e,t){return e[0]-t[0]}function DC(e,t){return Math.abs(t[1])-Math.abs(e[1])}function IC(e,t,n){const i={},r=new Float32Array(8),a=new WeakMap,o=new hn,l=[];for(let u=0;u<8;u++)l[u]=[u,0];function h(u,f,d){const p=u.morphTargetInfluences;if(t.isWebGL2===!0){const x=f.morphAttributes.position||f.morphAttributes.normal||f.morphAttributes.color,y=x!==void 0?x.length:0;let _=a.get(f);if(_===void 0||_.count!==y){let z=function(){L.dispose(),a.delete(f),f.removeEventListener("dispose",z)};var g=z;_!==void 0&&_.texture.dispose();const M=f.morphAttributes.position!==void 0,T=f.morphAttributes.normal!==void 0,A=f.morphAttributes.color!==void 0,P=f.morphAttributes.position||[],b=f.morphAttributes.normal||[],U=f.morphAttributes.color||[];let S=0;M===!0&&(S=1),T===!0&&(S=2),A===!0&&(S=3);let R=f.attributes.position.count*S,V=1;R>t.maxTextureSize&&(V=Math.ceil(R/t.maxTextureSize),R=t.maxTextureSize);const W=new Float32Array(R*V*4*y),L=new b0(W,R,V,y);L.type=la,L.needsUpdate=!0;const I=S*4;for(let X=0;X<y;X++){const Y=P[X],$=b[X],ne=U[X],ae=R*V*4*X;for(let j=0;j<Y.count;j++){const K=j*I;M===!0&&(o.fromBufferAttribute(Y,j),W[ae+K+0]=o.x,W[ae+K+1]=o.y,W[ae+K+2]=o.z,W[ae+K+3]=0),T===!0&&(o.fromBufferAttribute($,j),W[ae+K+4]=o.x,W[ae+K+5]=o.y,W[ae+K+6]=o.z,W[ae+K+7]=0),A===!0&&(o.fromBufferAttribute(ne,j),W[ae+K+8]=o.x,W[ae+K+9]=o.y,W[ae+K+10]=o.z,W[ae+K+11]=ne.itemSize===4?o.w:1)}}_={count:y,texture:L,size:new Wt(R,V)},a.set(f,_),f.addEventListener("dispose",z)}let v=0;for(let M=0;M<p.length;M++)v+=p[M];const w=f.morphTargetsRelative?1:1-v;d.getUniforms().setValue(e,"morphTargetBaseInfluence",w),d.getUniforms().setValue(e,"morphTargetInfluences",p),d.getUniforms().setValue(e,"morphTargetsTexture",_.texture,n),d.getUniforms().setValue(e,"morphTargetsTextureSize",_.size)}else{const x=p===void 0?0:p.length;let y=i[f.id];if(y===void 0||y.length!==x){y=[];for(let T=0;T<x;T++)y[T]=[T,0];i[f.id]=y}for(let T=0;T<x;T++){const A=y[T];A[0]=T,A[1]=p[T]}y.sort(DC);for(let T=0;T<8;T++)T<x&&y[T][1]?(l[T][0]=y[T][0],l[T][1]=y[T][1]):(l[T][0]=Number.MAX_SAFE_INTEGER,l[T][1]=0);l.sort(UC);const _=f.morphAttributes.position,v=f.morphAttributes.normal;let w=0;for(let T=0;T<8;T++){const A=l[T],P=A[0],b=A[1];P!==Number.MAX_SAFE_INTEGER&&b?(_&&f.getAttribute("morphTarget"+T)!==_[P]&&f.setAttribute("morphTarget"+T,_[P]),v&&f.getAttribute("morphNormal"+T)!==v[P]&&f.setAttribute("morphNormal"+T,v[P]),r[T]=b,w+=b):(_&&f.hasAttribute("morphTarget"+T)===!0&&f.deleteAttribute("morphTarget"+T),v&&f.hasAttribute("morphNormal"+T)===!0&&f.deleteAttribute("morphNormal"+T),r[T]=0)}const M=f.morphTargetsRelative?1:1-w;d.getUniforms().setValue(e,"morphTargetBaseInfluence",M),d.getUniforms().setValue(e,"morphTargetInfluences",r)}}return{update:h}}function FC(e,t,n,i){let r=new WeakMap;function a(h){const u=i.render.frame,f=h.geometry,d=t.get(h,f);if(r.get(d)!==u&&(t.update(d),r.set(d,u)),h.isInstancedMesh&&(h.hasEventListener("dispose",l)===!1&&h.addEventListener("dispose",l),r.get(h)!==u&&(n.update(h.instanceMatrix,e.ARRAY_BUFFER),h.instanceColor!==null&&n.update(h.instanceColor,e.ARRAY_BUFFER),r.set(h,u))),h.isSkinnedMesh){const p=h.skeleton;r.get(p)!==u&&(p.update(),r.set(p,u))}return d}function o(){r=new WeakMap}function l(h){const u=h.target;u.removeEventListener("dispose",l),n.remove(u.instanceMatrix),u.instanceColor!==null&&n.remove(u.instanceColor)}return{update:a,dispose:o}}const H0=new vr,V0=new b0,k0=new xA,W0=new B0,A_=[],R_=[],L_=new Float32Array(16),C_=new Float32Array(9),P_=new Float32Array(4);function nl(e,t,n){const i=e[0];if(i<=0||i>0)return e;const r=t*n;let a=A_[r];if(a===void 0&&(a=new Float32Array(r),A_[r]=a),t!==0){i.toArray(a,0);for(let o=1,l=0;o!==t;++o)l+=n,e[o].toArray(a,l)}return a}function Tn(e,t){if(e.length!==t.length)return!1;for(let n=0,i=e.length;n<i;n++)if(e[n]!==t[n])return!1;return!0}function An(e,t){for(let n=0,i=t.length;n<i;n++)e[n]=t[n]}function Nh(e,t){let n=R_[t];n===void 0&&(n=new Int32Array(t),R_[t]=n);for(let i=0;i!==t;++i)n[i]=e.allocateTextureUnit();return n}function NC(e,t){const n=this.cache;n[0]!==t&&(e.uniform1f(this.addr,t),n[0]=t)}function OC(e,t){const n=this.cache;if(t.x!==void 0)(n[0]!==t.x||n[1]!==t.y)&&(e.uniform2f(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(Tn(n,t))return;e.uniform2fv(this.addr,t),An(n,t)}}function BC(e,t){const n=this.cache;if(t.x!==void 0)(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z)&&(e.uniform3f(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else if(t.r!==void 0)(n[0]!==t.r||n[1]!==t.g||n[2]!==t.b)&&(e.uniform3f(this.addr,t.r,t.g,t.b),n[0]=t.r,n[1]=t.g,n[2]=t.b);else{if(Tn(n,t))return;e.uniform3fv(this.addr,t),An(n,t)}}function zC(e,t){const n=this.cache;if(t.x!==void 0)(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z||n[3]!==t.w)&&(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(Tn(n,t))return;e.uniform4fv(this.addr,t),An(n,t)}}function GC(e,t){const n=this.cache,i=t.elements;if(i===void 0){if(Tn(n,t))return;e.uniformMatrix2fv(this.addr,!1,t),An(n,t)}else{if(Tn(n,i))return;P_.set(i),e.uniformMatrix2fv(this.addr,!1,P_),An(n,i)}}function HC(e,t){const n=this.cache,i=t.elements;if(i===void 0){if(Tn(n,t))return;e.uniformMatrix3fv(this.addr,!1,t),An(n,t)}else{if(Tn(n,i))return;C_.set(i),e.uniformMatrix3fv(this.addr,!1,C_),An(n,i)}}function VC(e,t){const n=this.cache,i=t.elements;if(i===void 0){if(Tn(n,t))return;e.uniformMatrix4fv(this.addr,!1,t),An(n,t)}else{if(Tn(n,i))return;L_.set(i),e.uniformMatrix4fv(this.addr,!1,L_),An(n,i)}}function kC(e,t){const n=this.cache;n[0]!==t&&(e.uniform1i(this.addr,t),n[0]=t)}function WC(e,t){const n=this.cache;if(t.x!==void 0)(n[0]!==t.x||n[1]!==t.y)&&(e.uniform2i(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(Tn(n,t))return;e.uniform2iv(this.addr,t),An(n,t)}}function XC(e,t){const n=this.cache;if(t.x!==void 0)(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z)&&(e.uniform3i(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else{if(Tn(n,t))return;e.uniform3iv(this.addr,t),An(n,t)}}function YC(e,t){const n=this.cache;if(t.x!==void 0)(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z||n[3]!==t.w)&&(e.uniform4i(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(Tn(n,t))return;e.uniform4iv(this.addr,t),An(n,t)}}function qC(e,t){const n=this.cache;n[0]!==t&&(e.uniform1ui(this.addr,t),n[0]=t)}function $C(e,t){const n=this.cache;if(t.x!==void 0)(n[0]!==t.x||n[1]!==t.y)&&(e.uniform2ui(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(Tn(n,t))return;e.uniform2uiv(this.addr,t),An(n,t)}}function jC(e,t){const n=this.cache;if(t.x!==void 0)(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z)&&(e.uniform3ui(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else{if(Tn(n,t))return;e.uniform3uiv(this.addr,t),An(n,t)}}function ZC(e,t){const n=this.cache;if(t.x!==void 0)(n[0]!==t.x||n[1]!==t.y||n[2]!==t.z||n[3]!==t.w)&&(e.uniform4ui(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(Tn(n,t))return;e.uniform4uiv(this.addr,t),An(n,t)}}function KC(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTexture2D(t||H0,r)}function JC(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTexture3D(t||k0,r)}function QC(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTextureCube(t||W0,r)}function eP(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTexture2DArray(t||V0,r)}function tP(e){switch(e){case 5126:return NC;case 35664:return OC;case 35665:return BC;case 35666:return zC;case 35674:return GC;case 35675:return HC;case 35676:return VC;case 5124:case 35670:return kC;case 35667:case 35671:return WC;case 35668:case 35672:return XC;case 35669:case 35673:return YC;case 5125:return qC;case 36294:return $C;case 36295:return jC;case 36296:return ZC;case 35678:case 36198:case 36298:case 36306:case 35682:return KC;case 35679:case 36299:case 36307:return JC;case 35680:case 36300:case 36308:case 36293:return QC;case 36289:case 36303:case 36311:case 36292:return eP}}function nP(e,t){e.uniform1fv(this.addr,t)}function iP(e,t){const n=nl(t,this.size,2);e.uniform2fv(this.addr,n)}function rP(e,t){const n=nl(t,this.size,3);e.uniform3fv(this.addr,n)}function aP(e,t){const n=nl(t,this.size,4);e.uniform4fv(this.addr,n)}function sP(e,t){const n=nl(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,n)}function oP(e,t){const n=nl(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,n)}function lP(e,t){const n=nl(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,n)}function cP(e,t){e.uniform1iv(this.addr,t)}function uP(e,t){e.uniform2iv(this.addr,t)}function hP(e,t){e.uniform3iv(this.addr,t)}function fP(e,t){e.uniform4iv(this.addr,t)}function dP(e,t){e.uniform1uiv(this.addr,t)}function pP(e,t){e.uniform2uiv(this.addr,t)}function mP(e,t){e.uniform3uiv(this.addr,t)}function vP(e,t){e.uniform4uiv(this.addr,t)}function gP(e,t,n){const i=this.cache,r=t.length,a=Nh(n,r);Tn(i,a)||(e.uniform1iv(this.addr,a),An(i,a));for(let o=0;o!==r;++o)n.setTexture2D(t[o]||H0,a[o])}function _P(e,t,n){const i=this.cache,r=t.length,a=Nh(n,r);Tn(i,a)||(e.uniform1iv(this.addr,a),An(i,a));for(let o=0;o!==r;++o)n.setTexture3D(t[o]||k0,a[o])}function xP(e,t,n){const i=this.cache,r=t.length,a=Nh(n,r);Tn(i,a)||(e.uniform1iv(this.addr,a),An(i,a));for(let o=0;o!==r;++o)n.setTextureCube(t[o]||W0,a[o])}function yP(e,t,n){const i=this.cache,r=t.length,a=Nh(n,r);Tn(i,a)||(e.uniform1iv(this.addr,a),An(i,a));for(let o=0;o!==r;++o)n.setTexture2DArray(t[o]||V0,a[o])}function MP(e){switch(e){case 5126:return nP;case 35664:return iP;case 35665:return rP;case 35666:return aP;case 35674:return sP;case 35675:return oP;case 35676:return lP;case 5124:case 35670:return cP;case 35667:case 35671:return uP;case 35668:case 35672:return hP;case 35669:case 35673:return fP;case 5125:return dP;case 36294:return pP;case 36295:return mP;case 36296:return vP;case 35678:case 36198:case 36298:case 36306:case 35682:return gP;case 35679:case 36299:case 36307:return _P;case 35680:case 36300:case 36308:case 36293:return xP;case 36289:case 36303:case 36311:case 36292:return yP}}let EP=class{constructor(t,n,i){this.id=t,this.addr=i,this.cache=[],this.setValue=tP(n.type)}},wP=class{constructor(t,n,i){this.id=t,this.addr=i,this.cache=[],this.size=n.size,this.setValue=MP(n.type)}},SP=class{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,n,i){const r=this.seq;for(let a=0,o=r.length;a!==o;++a){const l=r[a];l.setValue(t,n[l.id],i)}}};const Cd=/(\w+)(\])?(\[|\.)?/g;function U_(e,t){e.seq.push(t),e.map[t.id]=t}function bP(e,t,n){const i=e.name,r=i.length;for(Cd.lastIndex=0;;){const a=Cd.exec(i),o=Cd.lastIndex;let l=a[1];const h=a[2]==="]",u=a[3];if(h&&(l=l|0),u===void 0||u==="["&&o+2===r){U_(n,u===void 0?new EP(l,e,t):new wP(l,e,t));break}else{let d=n.map[l];d===void 0&&(d=new SP(l),U_(n,d)),n=d}}}let Ku=class{constructor(t,n){this.seq=[],this.map={};const i=t.getProgramParameter(n,t.ACTIVE_UNIFORMS);for(let r=0;r<i;++r){const a=t.getActiveUniform(n,r),o=t.getUniformLocation(n,a.name);bP(a,o,this)}}setValue(t,n,i,r){const a=this.map[n];a!==void 0&&a.setValue(t,i,r)}setOptional(t,n,i){const r=n[i];r!==void 0&&this.setValue(t,i,r)}static upload(t,n,i,r){for(let a=0,o=n.length;a!==o;++a){const l=n[a],h=i[l.id];h.needsUpdate!==!1&&l.setValue(t,h.value,r)}}static seqWithValue(t,n){const i=[];for(let r=0,a=t.length;r!==a;++r){const o=t[r];o.id in n&&i.push(o)}return i}};function D_(e,t,n){const i=e.createShader(t);return e.shaderSource(i,n),e.compileShader(i),i}let TP=0;function AP(e,t){const n=e.split(`
`),i=[],r=Math.max(t-6,0),a=Math.min(t+6,n.length);for(let o=r;o<a;o++){const l=o+1;i.push(`${l===t?">":" "} ${l}: ${n[o]}`)}return i.join(`
`)}function RP(e){switch(e){case hr:return["Linear","( value )"];case sn:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",e),["Linear","( value )"]}}function I_(e,t,n){const i=e.getShaderParameter(t,e.COMPILE_STATUS),r=e.getShaderInfoLog(t).trim();if(i&&r==="")return"";const a=/ERROR: 0:(\d+)/.exec(r);if(a){const o=parseInt(a[1]);return n.toUpperCase()+`

`+r+`

`+AP(e.getShaderSource(t),o)}else return r}function LP(e,t){const n=RP(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function CP(e,t){let n;switch(t){case F1:n="Linear";break;case N1:n="Reinhard";break;case O1:n="OptimizedCineon";break;case B1:n="ACESFilmic";break;case z1:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),n="Linear"}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function PP(e){return[e.extensionDerivatives||e.envMapCubeUVHeight||e.bumpMap||e.normalMapTangentSpace||e.clearcoatNormalMap||e.flatShading||e.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap||e.transmission)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Ul).join(`
`)}function UP(e){const t=[];for(const n in e){const i=e[n];i!==!1&&t.push("#define "+n+" "+i)}return t.join(`
`)}function DP(e,t){const n={},i=e.getProgramParameter(t,e.ACTIVE_ATTRIBUTES);for(let r=0;r<i;r++){const a=e.getActiveAttrib(t,r),o=a.name;let l=1;a.type===e.FLOAT_MAT2&&(l=2),a.type===e.FLOAT_MAT3&&(l=3),a.type===e.FLOAT_MAT4&&(l=4),n[o]={type:a.type,location:e.getAttribLocation(t,o),locationSize:l}}return n}function Ul(e){return e!==""}function F_(e,t){const n=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,n).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function N_(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const IP=/^[ \t]*#include +<([\w\d./]+)>/gm;function jd(e){return e.replace(IP,NP)}const FP=new Map([["encodings_fragment","colorspace_fragment"],["encodings_pars_fragment","colorspace_pars_fragment"],["output_fragment","opaque_fragment"]]);function NP(e,t){let n=Lt[t];if(n===void 0){const i=FP.get(t);if(i!==void 0)n=Lt[i],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',t,i);else throw new Error("Can not resolve #include <"+t+">")}return jd(n)}const OP=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function O_(e){return e.replace(OP,BP)}function BP(e,t,n,i){let r="";for(let a=parseInt(t);a<parseInt(n);a++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+a+" ]").replace(/UNROLLED_LOOP_INDEX/g,a);return r}function B_(e){let t="precision "+e.precision+` float;
precision `+e.precision+" int;";return e.precision==="highp"?t+=`
#define HIGH_PRECISION`:e.precision==="mediump"?t+=`
#define MEDIUM_PRECISION`:e.precision==="lowp"&&(t+=`
#define LOW_PRECISION`),t}function zP(e){let t="SHADOWMAP_TYPE_BASIC";return e.shadowMapType===o0?t="SHADOWMAP_TYPE_PCF":e.shadowMapType===d1?t="SHADOWMAP_TYPE_PCF_SOFT":e.shadowMapType===Dr&&(t="SHADOWMAP_TYPE_VSM"),t}function GP(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case lo:case co:t="ENVMAP_TYPE_CUBE";break;case Uh:t="ENVMAP_TYPE_CUBE_UV";break}return t}function HP(e){let t="ENVMAP_MODE_REFLECTION";if(e.envMap)switch(e.envMapMode){case co:t="ENVMAP_MODE_REFRACTION";break}return t}function VP(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case Sp:t="ENVMAP_BLENDING_MULTIPLY";break;case D1:t="ENVMAP_BLENDING_MIX";break;case I1:t="ENVMAP_BLENDING_ADD";break}return t}function kP(e){const t=e.envMapCubeUVHeight;if(t===null)return null;const n=Math.log2(t)-2,i=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,n),7*16)),texelHeight:i,maxMip:n}}function WP(e,t,n,i){const r=e.getContext(),a=n.defines;let o=n.vertexShader,l=n.fragmentShader;const h=zP(n),u=GP(n),f=HP(n),d=VP(n),p=kP(n),g=n.isWebGL2?"":PP(n),x=UP(a),y=r.createProgram();let _,v,w=n.glslVersion?"#version "+n.glslVersion+`
`:"";n.isRawShaderMaterial?(_=["#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,x].filter(Ul).join(`
`),_.length>0&&(_+=`
`),v=[g,"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,x].filter(Ul).join(`
`),v.length>0&&(v+=`
`)):(_=[B_(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,x,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+f:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.displacementMap?"#define USE_DISPLACEMENTMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.mapUv?"#define MAP_UV "+n.mapUv:"",n.alphaMapUv?"#define ALPHAMAP_UV "+n.alphaMapUv:"",n.lightMapUv?"#define LIGHTMAP_UV "+n.lightMapUv:"",n.aoMapUv?"#define AOMAP_UV "+n.aoMapUv:"",n.emissiveMapUv?"#define EMISSIVEMAP_UV "+n.emissiveMapUv:"",n.bumpMapUv?"#define BUMPMAP_UV "+n.bumpMapUv:"",n.normalMapUv?"#define NORMALMAP_UV "+n.normalMapUv:"",n.displacementMapUv?"#define DISPLACEMENTMAP_UV "+n.displacementMapUv:"",n.metalnessMapUv?"#define METALNESSMAP_UV "+n.metalnessMapUv:"",n.roughnessMapUv?"#define ROUGHNESSMAP_UV "+n.roughnessMapUv:"",n.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+n.anisotropyMapUv:"",n.clearcoatMapUv?"#define CLEARCOATMAP_UV "+n.clearcoatMapUv:"",n.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+n.clearcoatNormalMapUv:"",n.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+n.clearcoatRoughnessMapUv:"",n.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+n.iridescenceMapUv:"",n.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+n.iridescenceThicknessMapUv:"",n.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+n.sheenColorMapUv:"",n.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+n.sheenRoughnessMapUv:"",n.specularMapUv?"#define SPECULARMAP_UV "+n.specularMapUv:"",n.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+n.specularColorMapUv:"",n.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+n.specularIntensityMapUv:"",n.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+n.transmissionMapUv:"",n.thicknessMapUv?"#define THICKNESSMAP_UV "+n.thicknessMapUv:"",n.vertexTangents&&n.flatShading===!1?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&n.flatShading===!1?"#define USE_MORPHNORMALS":"",n.morphColors&&n.isWebGL2?"#define USE_MORPHCOLORS":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+n.morphTextureStride:"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+h:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.useLegacyLights?"#define LEGACY_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Ul).join(`
`),v=[g,B_(n),"#define SHADER_TYPE "+n.shaderType,"#define SHADER_NAME "+n.shaderName,x,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+u:"",n.envMap?"#define "+f:"",n.envMap?"#define "+d:"",p?"#define CUBEUV_TEXEL_WIDTH "+p.texelWidth:"",p?"#define CUBEUV_TEXEL_HEIGHT "+p.texelHeight:"",p?"#define CUBEUV_MAX_MIP "+p.maxMip+".0":"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.anisotropy?"#define USE_ANISOTROPY":"",n.anisotropyMap?"#define USE_ANISOTROPYMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescence?"#define USE_IRIDESCENCE":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.alphaHash?"#define USE_ALPHAHASH":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.vertexTangents&&n.flatShading===!1?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+h:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.useLegacyLights?"#define LEGACY_LIGHTS":"",n.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",n.toneMapping!==ha?"#define TONE_MAPPING":"",n.toneMapping!==ha?Lt.tonemapping_pars_fragment:"",n.toneMapping!==ha?CP("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.opaque?"#define OPAQUE":"",Lt.colorspace_pars_fragment,LP("linearToOutputTexel",n.outputColorSpace),n.useDepthPacking?"#define DEPTH_PACKING "+n.depthPacking:"",`
`].filter(Ul).join(`
`)),o=jd(o),o=F_(o,n),o=N_(o,n),l=jd(l),l=F_(l,n),l=N_(l,n),o=O_(o),l=O_(l),n.isWebGL2&&n.isRawShaderMaterial!==!0&&(w=`#version 300 es
`,_=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+_,v=["#define varying in",n.glslVersion===r_?"":"layout(location = 0) out highp vec4 pc_fragColor;",n.glslVersion===r_?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+v);const M=w+_+o,T=w+v+l,A=D_(r,r.VERTEX_SHADER,M),P=D_(r,r.FRAGMENT_SHADER,T);if(r.attachShader(y,A),r.attachShader(y,P),n.index0AttributeName!==void 0?r.bindAttribLocation(y,0,n.index0AttributeName):n.morphTargets===!0&&r.bindAttribLocation(y,0,"position"),r.linkProgram(y),e.debug.checkShaderErrors){const S=r.getProgramInfoLog(y).trim(),R=r.getShaderInfoLog(A).trim(),V=r.getShaderInfoLog(P).trim();let W=!0,L=!0;if(r.getProgramParameter(y,r.LINK_STATUS)===!1)if(W=!1,typeof e.debug.onShaderError=="function")e.debug.onShaderError(r,y,A,P);else{const I=I_(r,A,"vertex"),z=I_(r,P,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(y,r.VALIDATE_STATUS)+`

Program Info Log: `+S+`
`+I+`
`+z)}else S!==""?console.warn("THREE.WebGLProgram: Program Info Log:",S):(R===""||V==="")&&(L=!1);L&&(this.diagnostics={runnable:W,programLog:S,vertexShader:{log:R,prefix:_},fragmentShader:{log:V,prefix:v}})}r.deleteShader(A),r.deleteShader(P);let b;this.getUniforms=function(){return b===void 0&&(b=new Ku(r,y)),b};let U;return this.getAttributes=function(){return U===void 0&&(U=DP(r,y)),U},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(y),this.program=void 0},this.type=n.shaderType,this.name=n.shaderName,this.id=TP++,this.cacheKey=t,this.usedTimes=1,this.program=y,this.vertexShader=A,this.fragmentShader=P,this}let XP=0;class YP{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const n=t.vertexShader,i=t.fragmentShader,r=this._getShaderStage(n),a=this._getShaderStage(i),o=this._getShaderCacheForMaterial(t);return o.has(r)===!1&&(o.add(r),r.usedTimes++),o.has(a)===!1&&(o.add(a),a.usedTimes++),this}remove(t){const n=this.materialCache.get(t);for(const i of n)i.usedTimes--,i.usedTimes===0&&this.shaderCache.delete(i.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const n=this.materialCache;let i=n.get(t);return i===void 0&&(i=new Set,n.set(t,i)),i}_getShaderStage(t){const n=this.shaderCache;let i=n.get(t);return i===void 0&&(i=new qP(t),n.set(t,i)),i}}class qP{constructor(t){this.id=XP++,this.code=t,this.usedTimes=0}}function $P(e,t,n,i,r,a,o){const l=new C0,h=new YP,u=[],f=r.isWebGL2,d=r.logarithmicDepthBuffer,p=r.vertexTextures;let g=r.precision;const x={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function y(S){return S===0?"uv":`uv${S}`}function _(S,R,V,W,L){const I=W.fog,z=L.geometry,X=S.isMeshStandardMaterial?W.environment:null,Y=(S.isMeshStandardMaterial?n:t).get(S.envMap||X),$=Y&&Y.mapping===Uh?Y.image.height:null,ne=x[S.type];S.precision!==null&&(g=r.getMaxPrecision(S.precision),g!==S.precision&&console.warn("THREE.WebGLProgram.getParameters:",S.precision,"not supported, using",g,"instead."));const ae=z.morphAttributes.position||z.morphAttributes.normal||z.morphAttributes.color,j=ae!==void 0?ae.length:0;let K=0;z.morphAttributes.position!==void 0&&(K=1),z.morphAttributes.normal!==void 0&&(K=2),z.morphAttributes.color!==void 0&&(K=3);let Q,he,me,ge;if(ne){const Xt=lr[ne];Q=Xt.vertexShader,he=Xt.fragmentShader}else Q=S.vertexShader,he=S.fragmentShader,h.update(S),me=h.getVertexShaderID(S),ge=h.getFragmentShaderID(S);const Pe=e.getRenderTarget(),we=L.isInstancedMesh===!0,Se=!!S.map,ht=!!S.matcap,J=!!Y,se=!!S.aoMap,Qe=!!S.lightMap,ze=!!S.bumpMap,Re=!!S.normalMap,et=!!S.displacementMap,qe=!!S.emissiveMap,We=!!S.metalnessMap,tt=!!S.roughnessMap,ot=S.anisotropy>0,pt=S.clearcoat>0,Dt=S.iridescence>0,G=S.sheen>0,N=S.transmission>0,ue=ot&&!!S.anisotropyMap,Ce=pt&&!!S.clearcoatMap,be=pt&&!!S.clearcoatNormalMap,Fe=pt&&!!S.clearcoatRoughnessMap,st=Dt&&!!S.iridescenceMap,Ge=Dt&&!!S.iridescenceThicknessMap,ve=G&&!!S.sheenColorMap,ie=G&&!!S.sheenRoughnessMap,Ue=!!S.specularMap,Ne=!!S.specularColorMap,Ve=!!S.specularIntensityMap,Le=N&&!!S.transmissionMap,rt=N&&!!S.thicknessMap,Et=!!S.gradientMap,ee=!!S.alphaMap,Xe=S.alphaTest>0,fe=!!S.alphaHash,Oe=!!S.extensions,Ye=!!z.attributes.uv1,Ft=!!z.attributes.uv2,qt=!!z.attributes.uv3;let Qt=ha;return S.toneMapped&&(Pe===null||Pe.isXRRenderTarget===!0)&&(Qt=e.toneMapping),{isWebGL2:f,shaderID:ne,shaderType:S.type,shaderName:S.name,vertexShader:Q,fragmentShader:he,defines:S.defines,customVertexShaderID:me,customFragmentShaderID:ge,isRawShaderMaterial:S.isRawShaderMaterial===!0,glslVersion:S.glslVersion,precision:g,instancing:we,instancingColor:we&&L.instanceColor!==null,supportsVertexTextures:p,outputColorSpace:Pe===null?e.outputColorSpace:Pe.isXRRenderTarget===!0?Pe.texture.colorSpace:hr,map:Se,matcap:ht,envMap:J,envMapMode:J&&Y.mapping,envMapCubeUVHeight:$,aoMap:se,lightMap:Qe,bumpMap:ze,normalMap:Re,displacementMap:p&&et,emissiveMap:qe,normalMapObjectSpace:Re&&S.normalMapType===J1,normalMapTangentSpace:Re&&S.normalMapType===_0,metalnessMap:We,roughnessMap:tt,anisotropy:ot,anisotropyMap:ue,clearcoat:pt,clearcoatMap:Ce,clearcoatNormalMap:be,clearcoatRoughnessMap:Fe,iridescence:Dt,iridescenceMap:st,iridescenceThicknessMap:Ge,sheen:G,sheenColorMap:ve,sheenRoughnessMap:ie,specularMap:Ue,specularColorMap:Ne,specularIntensityMap:Ve,transmission:N,transmissionMap:Le,thicknessMap:rt,gradientMap:Et,opaque:S.transparent===!1&&S.blending===ao,alphaMap:ee,alphaTest:Xe,alphaHash:fe,combine:S.combine,mapUv:Se&&y(S.map.channel),aoMapUv:se&&y(S.aoMap.channel),lightMapUv:Qe&&y(S.lightMap.channel),bumpMapUv:ze&&y(S.bumpMap.channel),normalMapUv:Re&&y(S.normalMap.channel),displacementMapUv:et&&y(S.displacementMap.channel),emissiveMapUv:qe&&y(S.emissiveMap.channel),metalnessMapUv:We&&y(S.metalnessMap.channel),roughnessMapUv:tt&&y(S.roughnessMap.channel),anisotropyMapUv:ue&&y(S.anisotropyMap.channel),clearcoatMapUv:Ce&&y(S.clearcoatMap.channel),clearcoatNormalMapUv:be&&y(S.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:Fe&&y(S.clearcoatRoughnessMap.channel),iridescenceMapUv:st&&y(S.iridescenceMap.channel),iridescenceThicknessMapUv:Ge&&y(S.iridescenceThicknessMap.channel),sheenColorMapUv:ve&&y(S.sheenColorMap.channel),sheenRoughnessMapUv:ie&&y(S.sheenRoughnessMap.channel),specularMapUv:Ue&&y(S.specularMap.channel),specularColorMapUv:Ne&&y(S.specularColorMap.channel),specularIntensityMapUv:Ve&&y(S.specularIntensityMap.channel),transmissionMapUv:Le&&y(S.transmissionMap.channel),thicknessMapUv:rt&&y(S.thicknessMap.channel),alphaMapUv:ee&&y(S.alphaMap.channel),vertexTangents:!!z.attributes.tangent&&(Re||ot),vertexColors:S.vertexColors,vertexAlphas:S.vertexColors===!0&&!!z.attributes.color&&z.attributes.color.itemSize===4,vertexUv1s:Ye,vertexUv2s:Ft,vertexUv3s:qt,pointsUvs:L.isPoints===!0&&!!z.attributes.uv&&(Se||ee),fog:!!I,useFog:S.fog===!0,fogExp2:I&&I.isFogExp2,flatShading:S.flatShading===!0,sizeAttenuation:S.sizeAttenuation===!0,logarithmicDepthBuffer:d,skinning:L.isSkinnedMesh===!0,morphTargets:z.morphAttributes.position!==void 0,morphNormals:z.morphAttributes.normal!==void 0,morphColors:z.morphAttributes.color!==void 0,morphTargetsCount:j,morphTextureStride:K,numDirLights:R.directional.length,numPointLights:R.point.length,numSpotLights:R.spot.length,numSpotLightMaps:R.spotLightMap.length,numRectAreaLights:R.rectArea.length,numHemiLights:R.hemi.length,numDirLightShadows:R.directionalShadowMap.length,numPointLightShadows:R.pointShadowMap.length,numSpotLightShadows:R.spotShadowMap.length,numSpotLightShadowsWithMaps:R.numSpotLightShadowsWithMaps,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:S.dithering,shadowMapEnabled:e.shadowMap.enabled&&V.length>0,shadowMapType:e.shadowMap.type,toneMapping:Qt,useLegacyLights:e._useLegacyLights,decodeVideoTexture:Se&&S.map.isVideoTexture===!0&&S.map.colorSpace===sn,premultipliedAlpha:S.premultipliedAlpha,doubleSided:S.side===cr,flipSided:S.side===ti,useDepthPacking:S.depthPacking>=0,depthPacking:S.depthPacking||0,index0AttributeName:S.index0AttributeName,extensionDerivatives:Oe&&S.extensions.derivatives===!0,extensionFragDepth:Oe&&S.extensions.fragDepth===!0,extensionDrawBuffers:Oe&&S.extensions.drawBuffers===!0,extensionShaderTextureLOD:Oe&&S.extensions.shaderTextureLOD===!0,rendererExtensionFragDepth:f||i.has("EXT_frag_depth"),rendererExtensionDrawBuffers:f||i.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:f||i.has("EXT_shader_texture_lod"),customProgramCacheKey:S.customProgramCacheKey()}}function v(S){const R=[];if(S.shaderID?R.push(S.shaderID):(R.push(S.customVertexShaderID),R.push(S.customFragmentShaderID)),S.defines!==void 0)for(const V in S.defines)R.push(V),R.push(S.defines[V]);return S.isRawShaderMaterial===!1&&(w(R,S),M(R,S),R.push(e.outputColorSpace)),R.push(S.customProgramCacheKey),R.join()}function w(S,R){S.push(R.precision),S.push(R.outputColorSpace),S.push(R.envMapMode),S.push(R.envMapCubeUVHeight),S.push(R.mapUv),S.push(R.alphaMapUv),S.push(R.lightMapUv),S.push(R.aoMapUv),S.push(R.bumpMapUv),S.push(R.normalMapUv),S.push(R.displacementMapUv),S.push(R.emissiveMapUv),S.push(R.metalnessMapUv),S.push(R.roughnessMapUv),S.push(R.anisotropyMapUv),S.push(R.clearcoatMapUv),S.push(R.clearcoatNormalMapUv),S.push(R.clearcoatRoughnessMapUv),S.push(R.iridescenceMapUv),S.push(R.iridescenceThicknessMapUv),S.push(R.sheenColorMapUv),S.push(R.sheenRoughnessMapUv),S.push(R.specularMapUv),S.push(R.specularColorMapUv),S.push(R.specularIntensityMapUv),S.push(R.transmissionMapUv),S.push(R.thicknessMapUv),S.push(R.combine),S.push(R.fogExp2),S.push(R.sizeAttenuation),S.push(R.morphTargetsCount),S.push(R.morphAttributeCount),S.push(R.numDirLights),S.push(R.numPointLights),S.push(R.numSpotLights),S.push(R.numSpotLightMaps),S.push(R.numHemiLights),S.push(R.numRectAreaLights),S.push(R.numDirLightShadows),S.push(R.numPointLightShadows),S.push(R.numSpotLightShadows),S.push(R.numSpotLightShadowsWithMaps),S.push(R.shadowMapType),S.push(R.toneMapping),S.push(R.numClippingPlanes),S.push(R.numClipIntersection),S.push(R.depthPacking)}function M(S,R){l.disableAll(),R.isWebGL2&&l.enable(0),R.supportsVertexTextures&&l.enable(1),R.instancing&&l.enable(2),R.instancingColor&&l.enable(3),R.matcap&&l.enable(4),R.envMap&&l.enable(5),R.normalMapObjectSpace&&l.enable(6),R.normalMapTangentSpace&&l.enable(7),R.clearcoat&&l.enable(8),R.iridescence&&l.enable(9),R.alphaTest&&l.enable(10),R.vertexColors&&l.enable(11),R.vertexAlphas&&l.enable(12),R.vertexUv1s&&l.enable(13),R.vertexUv2s&&l.enable(14),R.vertexUv3s&&l.enable(15),R.vertexTangents&&l.enable(16),R.anisotropy&&l.enable(17),S.push(l.mask),l.disableAll(),R.fog&&l.enable(0),R.useFog&&l.enable(1),R.flatShading&&l.enable(2),R.logarithmicDepthBuffer&&l.enable(3),R.skinning&&l.enable(4),R.morphTargets&&l.enable(5),R.morphNormals&&l.enable(6),R.morphColors&&l.enable(7),R.premultipliedAlpha&&l.enable(8),R.shadowMapEnabled&&l.enable(9),R.useLegacyLights&&l.enable(10),R.doubleSided&&l.enable(11),R.flipSided&&l.enable(12),R.useDepthPacking&&l.enable(13),R.dithering&&l.enable(14),R.transmission&&l.enable(15),R.sheen&&l.enable(16),R.opaque&&l.enable(17),R.pointsUvs&&l.enable(18),R.decodeVideoTexture&&l.enable(19),S.push(l.mask)}function T(S){const R=x[S.type];let V;if(R){const W=lr[R];V=UA.clone(W.uniforms)}else V=S.uniforms;return V}function A(S,R){let V;for(let W=0,L=u.length;W<L;W++){const I=u[W];if(I.cacheKey===R){V=I,++V.usedTimes;break}}return V===void 0&&(V=new WP(e,R,S,a),u.push(V)),V}function P(S){if(--S.usedTimes===0){const R=u.indexOf(S);u[R]=u[u.length-1],u.pop(),S.destroy()}}function b(S){h.remove(S)}function U(){h.dispose()}return{getParameters:_,getProgramCacheKey:v,getUniforms:T,acquireProgram:A,releaseProgram:P,releaseShaderCache:b,programs:u,dispose:U}}function jP(){let e=new WeakMap;function t(a){let o=e.get(a);return o===void 0&&(o={},e.set(a,o)),o}function n(a){e.delete(a)}function i(a,o,l){e.get(a)[o]=l}function r(){e=new WeakMap}return{get:t,remove:n,update:i,dispose:r}}function ZP(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function z_(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function G_(){const e=[];let t=0;const n=[],i=[],r=[];function a(){t=0,n.length=0,i.length=0,r.length=0}function o(d,p,g,x,y,_){let v=e[t];return v===void 0?(v={id:d.id,object:d,geometry:p,material:g,groupOrder:x,renderOrder:d.renderOrder,z:y,group:_},e[t]=v):(v.id=d.id,v.object=d,v.geometry=p,v.material=g,v.groupOrder=x,v.renderOrder=d.renderOrder,v.z=y,v.group=_),t++,v}function l(d,p,g,x,y,_){const v=o(d,p,g,x,y,_);g.transmission>0?i.push(v):g.transparent===!0?r.push(v):n.push(v)}function h(d,p,g,x,y,_){const v=o(d,p,g,x,y,_);g.transmission>0?i.unshift(v):g.transparent===!0?r.unshift(v):n.unshift(v)}function u(d,p){n.length>1&&n.sort(d||ZP),i.length>1&&i.sort(p||z_),r.length>1&&r.sort(p||z_)}function f(){for(let d=t,p=e.length;d<p;d++){const g=e[d];if(g.id===null)break;g.id=null,g.object=null,g.geometry=null,g.material=null,g.group=null}}return{opaque:n,transmissive:i,transparent:r,init:a,push:l,unshift:h,finish:f,sort:u}}function KP(){let e=new WeakMap;function t(i,r){const a=e.get(i);let o;return a===void 0?(o=new G_,e.set(i,[o])):r>=a.length?(o=new G_,a.push(o)):o=a[r],o}function n(){e=new WeakMap}return{get:t,dispose:n}}function JP(){const e={};return{get:function(t){if(e[t.id]!==void 0)return e[t.id];let n;switch(t.type){case"DirectionalLight":n={direction:new ce,color:new Ht};break;case"SpotLight":n={position:new ce,direction:new ce,color:new Ht,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new ce,color:new Ht,distance:0,decay:0};break;case"HemisphereLight":n={direction:new ce,skyColor:new Ht,groundColor:new Ht};break;case"RectAreaLight":n={color:new Ht,position:new ce,halfWidth:new ce,halfHeight:new ce};break}return e[t.id]=n,n}}}function QP(){const e={};return{get:function(t){if(e[t.id]!==void 0)return e[t.id];let n;switch(t.type){case"DirectionalLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Wt};break;case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Wt};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Wt,shadowCameraNear:1,shadowCameraFar:1e3};break}return e[t.id]=n,n}}}let e2=0;function t2(e,t){return(t.castShadow?2:0)-(e.castShadow?2:0)+(t.map?1:0)-(e.map?1:0)}function n2(e,t){const n=new JP,i=QP(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let f=0;f<9;f++)r.probe.push(new ce);const a=new ce,o=new Cn,l=new Cn;function h(f,d){let p=0,g=0,x=0;for(let V=0;V<9;V++)r.probe[V].set(0,0,0);let y=0,_=0,v=0,w=0,M=0,T=0,A=0,P=0,b=0,U=0;f.sort(t2);const S=d===!0?Math.PI:1;for(let V=0,W=f.length;V<W;V++){const L=f[V],I=L.color,z=L.intensity,X=L.distance,Y=L.shadow&&L.shadow.map?L.shadow.map.texture:null;if(L.isAmbientLight)p+=I.r*z*S,g+=I.g*z*S,x+=I.b*z*S;else if(L.isLightProbe)for(let $=0;$<9;$++)r.probe[$].addScaledVector(L.sh.coefficients[$],z);else if(L.isDirectionalLight){const $=n.get(L);if($.color.copy(L.color).multiplyScalar(L.intensity*S),L.castShadow){const ne=L.shadow,ae=i.get(L);ae.shadowBias=ne.bias,ae.shadowNormalBias=ne.normalBias,ae.shadowRadius=ne.radius,ae.shadowMapSize=ne.mapSize,r.directionalShadow[y]=ae,r.directionalShadowMap[y]=Y,r.directionalShadowMatrix[y]=L.shadow.matrix,T++}r.directional[y]=$,y++}else if(L.isSpotLight){const $=n.get(L);$.position.setFromMatrixPosition(L.matrixWorld),$.color.copy(I).multiplyScalar(z*S),$.distance=X,$.coneCos=Math.cos(L.angle),$.penumbraCos=Math.cos(L.angle*(1-L.penumbra)),$.decay=L.decay,r.spot[v]=$;const ne=L.shadow;if(L.map&&(r.spotLightMap[b]=L.map,b++,ne.updateMatrices(L),L.castShadow&&U++),r.spotLightMatrix[v]=ne.matrix,L.castShadow){const ae=i.get(L);ae.shadowBias=ne.bias,ae.shadowNormalBias=ne.normalBias,ae.shadowRadius=ne.radius,ae.shadowMapSize=ne.mapSize,r.spotShadow[v]=ae,r.spotShadowMap[v]=Y,P++}v++}else if(L.isRectAreaLight){const $=n.get(L);$.color.copy(I).multiplyScalar(z),$.halfWidth.set(L.width*.5,0,0),$.halfHeight.set(0,L.height*.5,0),r.rectArea[w]=$,w++}else if(L.isPointLight){const $=n.get(L);if($.color.copy(L.color).multiplyScalar(L.intensity*S),$.distance=L.distance,$.decay=L.decay,L.castShadow){const ne=L.shadow,ae=i.get(L);ae.shadowBias=ne.bias,ae.shadowNormalBias=ne.normalBias,ae.shadowRadius=ne.radius,ae.shadowMapSize=ne.mapSize,ae.shadowCameraNear=ne.camera.near,ae.shadowCameraFar=ne.camera.far,r.pointShadow[_]=ae,r.pointShadowMap[_]=Y,r.pointShadowMatrix[_]=L.shadow.matrix,A++}r.point[_]=$,_++}else if(L.isHemisphereLight){const $=n.get(L);$.skyColor.copy(L.color).multiplyScalar(z*S),$.groundColor.copy(L.groundColor).multiplyScalar(z*S),r.hemi[M]=$,M++}}w>0&&(t.isWebGL2||e.has("OES_texture_float_linear")===!0?(r.rectAreaLTC1=Ze.LTC_FLOAT_1,r.rectAreaLTC2=Ze.LTC_FLOAT_2):e.has("OES_texture_half_float_linear")===!0?(r.rectAreaLTC1=Ze.LTC_HALF_1,r.rectAreaLTC2=Ze.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=p,r.ambient[1]=g,r.ambient[2]=x;const R=r.hash;(R.directionalLength!==y||R.pointLength!==_||R.spotLength!==v||R.rectAreaLength!==w||R.hemiLength!==M||R.numDirectionalShadows!==T||R.numPointShadows!==A||R.numSpotShadows!==P||R.numSpotMaps!==b)&&(r.directional.length=y,r.spot.length=v,r.rectArea.length=w,r.point.length=_,r.hemi.length=M,r.directionalShadow.length=T,r.directionalShadowMap.length=T,r.pointShadow.length=A,r.pointShadowMap.length=A,r.spotShadow.length=P,r.spotShadowMap.length=P,r.directionalShadowMatrix.length=T,r.pointShadowMatrix.length=A,r.spotLightMatrix.length=P+b-U,r.spotLightMap.length=b,r.numSpotLightShadowsWithMaps=U,R.directionalLength=y,R.pointLength=_,R.spotLength=v,R.rectAreaLength=w,R.hemiLength=M,R.numDirectionalShadows=T,R.numPointShadows=A,R.numSpotShadows=P,R.numSpotMaps=b,r.version=e2++)}function u(f,d){let p=0,g=0,x=0,y=0,_=0;const v=d.matrixWorldInverse;for(let w=0,M=f.length;w<M;w++){const T=f[w];if(T.isDirectionalLight){const A=r.directional[p];A.direction.setFromMatrixPosition(T.matrixWorld),a.setFromMatrixPosition(T.target.matrixWorld),A.direction.sub(a),A.direction.transformDirection(v),p++}else if(T.isSpotLight){const A=r.spot[x];A.position.setFromMatrixPosition(T.matrixWorld),A.position.applyMatrix4(v),A.direction.setFromMatrixPosition(T.matrixWorld),a.setFromMatrixPosition(T.target.matrixWorld),A.direction.sub(a),A.direction.transformDirection(v),x++}else if(T.isRectAreaLight){const A=r.rectArea[y];A.position.setFromMatrixPosition(T.matrixWorld),A.position.applyMatrix4(v),l.identity(),o.copy(T.matrixWorld),o.premultiply(v),l.extractRotation(o),A.halfWidth.set(T.width*.5,0,0),A.halfHeight.set(0,T.height*.5,0),A.halfWidth.applyMatrix4(l),A.halfHeight.applyMatrix4(l),y++}else if(T.isPointLight){const A=r.point[g];A.position.setFromMatrixPosition(T.matrixWorld),A.position.applyMatrix4(v),g++}else if(T.isHemisphereLight){const A=r.hemi[_];A.direction.setFromMatrixPosition(T.matrixWorld),A.direction.transformDirection(v),_++}}}return{setup:h,setupView:u,state:r}}function H_(e,t){const n=new n2(e,t),i=[],r=[];function a(){i.length=0,r.length=0}function o(d){i.push(d)}function l(d){r.push(d)}function h(d){n.setup(i,d)}function u(d){n.setupView(i,d)}return{init:a,state:{lightsArray:i,shadowsArray:r,lights:n},setupLights:h,setupLightsView:u,pushLight:o,pushShadow:l}}function i2(e,t){let n=new WeakMap;function i(a,o=0){const l=n.get(a);let h;return l===void 0?(h=new H_(e,t),n.set(a,[h])):o>=l.length?(h=new H_(e,t),l.push(h)):h=l[o],h}function r(){n=new WeakMap}return{get:i,dispose:r}}let r2=class extends el{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=Z1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}};class a2 extends el{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}const s2=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,o2=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function l2(e,t,n){let i=new Tp;const r=new Wt,a=new Wt,o=new hn,l=new r2({depthPacking:K1}),h=new a2,u={},f=n.maxTextureSize,d={[da]:ti,[ti]:da,[cr]:cr},p=new Ka({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Wt},radius:{value:4}},vertexShader:s2,fragmentShader:o2}),g=p.clone();g.defines.HORIZONTAL_PASS=1;const x=new gr;x.setAttribute("position",new ur(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const y=new bi(x,p),_=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=o0;let v=this.type;this.render=function(A,P,b){if(_.enabled===!1||_.autoUpdate===!1&&_.needsUpdate===!1||A.length===0)return;const U=e.getRenderTarget(),S=e.getActiveCubeFace(),R=e.getActiveMipmapLevel(),V=e.state;V.setBlending(ua),V.buffers.color.setClear(1,1,1,1),V.buffers.depth.setTest(!0),V.setScissorTest(!1);const W=v!==Dr&&this.type===Dr,L=v===Dr&&this.type!==Dr;for(let I=0,z=A.length;I<z;I++){const X=A[I],Y=X.shadow;if(Y===void 0){console.warn("THREE.WebGLShadowMap:",X,"has no shadow.");continue}if(Y.autoUpdate===!1&&Y.needsUpdate===!1)continue;r.copy(Y.mapSize);const $=Y.getFrameExtents();if(r.multiply($),a.copy(Y.mapSize),(r.x>f||r.y>f)&&(r.x>f&&(a.x=Math.floor(f/$.x),r.x=a.x*$.x,Y.mapSize.x=a.x),r.y>f&&(a.y=Math.floor(f/$.y),r.y=a.y*$.y,Y.mapSize.y=a.y)),Y.map===null||W===!0||L===!0){const ae=this.type!==Dr?{minFilter:ei,magFilter:ei}:{};Y.map!==null&&Y.map.dispose(),Y.map=new Za(r.x,r.y,ae),Y.map.texture.name=X.name+".shadowMap",Y.camera.updateProjectionMatrix()}e.setRenderTarget(Y.map),e.clear();const ne=Y.getViewportCount();for(let ae=0;ae<ne;ae++){const j=Y.getViewport(ae);o.set(a.x*j.x,a.y*j.y,a.x*j.z,a.y*j.w),V.viewport(o),Y.updateMatrices(X,ae),i=Y.getFrustum(),T(P,b,Y.camera,X,this.type)}Y.isPointLightShadow!==!0&&this.type===Dr&&w(Y,b),Y.needsUpdate=!1}v=this.type,_.needsUpdate=!1,e.setRenderTarget(U,S,R)};function w(A,P){const b=t.update(y);p.defines.VSM_SAMPLES!==A.blurSamples&&(p.defines.VSM_SAMPLES=A.blurSamples,g.defines.VSM_SAMPLES=A.blurSamples,p.needsUpdate=!0,g.needsUpdate=!0),A.mapPass===null&&(A.mapPass=new Za(r.x,r.y)),p.uniforms.shadow_pass.value=A.map.texture,p.uniforms.resolution.value=A.mapSize,p.uniforms.radius.value=A.radius,e.setRenderTarget(A.mapPass),e.clear(),e.renderBufferDirect(P,null,b,p,y,null),g.uniforms.shadow_pass.value=A.mapPass.texture,g.uniforms.resolution.value=A.mapSize,g.uniforms.radius.value=A.radius,e.setRenderTarget(A.map),e.clear(),e.renderBufferDirect(P,null,b,g,y,null)}function M(A,P,b,U){let S=null;const R=b.isPointLight===!0?A.customDistanceMaterial:A.customDepthMaterial;if(R!==void 0)S=R;else if(S=b.isPointLight===!0?h:l,e.localClippingEnabled&&P.clipShadows===!0&&Array.isArray(P.clippingPlanes)&&P.clippingPlanes.length!==0||P.displacementMap&&P.displacementScale!==0||P.alphaMap&&P.alphaTest>0||P.map&&P.alphaTest>0){const V=S.uuid,W=P.uuid;let L=u[V];L===void 0&&(L={},u[V]=L);let I=L[W];I===void 0&&(I=S.clone(),L[W]=I),S=I}if(S.visible=P.visible,S.wireframe=P.wireframe,U===Dr?S.side=P.shadowSide!==null?P.shadowSide:P.side:S.side=P.shadowSide!==null?P.shadowSide:d[P.side],S.alphaMap=P.alphaMap,S.alphaTest=P.alphaTest,S.map=P.map,S.clipShadows=P.clipShadows,S.clippingPlanes=P.clippingPlanes,S.clipIntersection=P.clipIntersection,S.displacementMap=P.displacementMap,S.displacementScale=P.displacementScale,S.displacementBias=P.displacementBias,S.wireframeLinewidth=P.wireframeLinewidth,S.linewidth=P.linewidth,b.isPointLight===!0&&S.isMeshDistanceMaterial===!0){const V=e.properties.get(S);V.light=b}return S}function T(A,P,b,U,S){if(A.visible===!1)return;if(A.layers.test(P.layers)&&(A.isMesh||A.isLine||A.isPoints)&&(A.castShadow||A.receiveShadow&&S===Dr)&&(!A.frustumCulled||i.intersectsObject(A))){A.modelViewMatrix.multiplyMatrices(b.matrixWorldInverse,A.matrixWorld);const W=t.update(A),L=A.material;if(Array.isArray(L)){const I=W.groups;for(let z=0,X=I.length;z<X;z++){const Y=I[z],$=L[Y.materialIndex];if($&&$.visible){const ne=M(A,$,U,S);e.renderBufferDirect(b,null,W,ne,A,Y)}}}else if(L.visible){const I=M(A,L,U,S);e.renderBufferDirect(b,null,W,I,A,null)}}const V=A.children;for(let W=0,L=V.length;W<L;W++)T(V[W],P,b,U,S)}}function c2(e,t,n){const i=n.isWebGL2;function r(){let ee=!1;const Xe=new hn;let fe=null;const Oe=new hn(0,0,0,0);return{setMask:function(Ye){fe!==Ye&&!ee&&(e.colorMask(Ye,Ye,Ye,Ye),fe=Ye)},setLocked:function(Ye){ee=Ye},setClear:function(Ye,Ft,qt,Qt,On){On===!0&&(Ye*=Qt,Ft*=Qt,qt*=Qt),Xe.set(Ye,Ft,qt,Qt),Oe.equals(Xe)===!1&&(e.clearColor(Ye,Ft,qt,Qt),Oe.copy(Xe))},reset:function(){ee=!1,fe=null,Oe.set(-1,0,0,0)}}}function a(){let ee=!1,Xe=null,fe=null,Oe=null;return{setTest:function(Ye){Ye?Pe(e.DEPTH_TEST):we(e.DEPTH_TEST)},setMask:function(Ye){Xe!==Ye&&!ee&&(e.depthMask(Ye),Xe=Ye)},setFunc:function(Ye){if(fe!==Ye){switch(Ye){case T1:e.depthFunc(e.NEVER);break;case A1:e.depthFunc(e.ALWAYS);break;case R1:e.depthFunc(e.LESS);break;case Gd:e.depthFunc(e.LEQUAL);break;case L1:e.depthFunc(e.EQUAL);break;case C1:e.depthFunc(e.GEQUAL);break;case P1:e.depthFunc(e.GREATER);break;case U1:e.depthFunc(e.NOTEQUAL);break;default:e.depthFunc(e.LEQUAL)}fe=Ye}},setLocked:function(Ye){ee=Ye},setClear:function(Ye){Oe!==Ye&&(e.clearDepth(Ye),Oe=Ye)},reset:function(){ee=!1,Xe=null,fe=null,Oe=null}}}function o(){let ee=!1,Xe=null,fe=null,Oe=null,Ye=null,Ft=null,qt=null,Qt=null,On=null;return{setTest:function(Xt){ee||(Xt?Pe(e.STENCIL_TEST):we(e.STENCIL_TEST))},setMask:function(Xt){Xe!==Xt&&!ee&&(e.stencilMask(Xt),Xe=Xt)},setFunc:function(Xt,jn,xn){(fe!==Xt||Oe!==jn||Ye!==xn)&&(e.stencilFunc(Xt,jn,xn),fe=Xt,Oe=jn,Ye=xn)},setOp:function(Xt,jn,xn){(Ft!==Xt||qt!==jn||Qt!==xn)&&(e.stencilOp(Xt,jn,xn),Ft=Xt,qt=jn,Qt=xn)},setLocked:function(Xt){ee=Xt},setClear:function(Xt){On!==Xt&&(e.clearStencil(Xt),On=Xt)},reset:function(){ee=!1,Xe=null,fe=null,Oe=null,Ye=null,Ft=null,qt=null,Qt=null,On=null}}}const l=new r,h=new a,u=new o,f=new WeakMap,d=new WeakMap;let p={},g={},x=new WeakMap,y=[],_=null,v=!1,w=null,M=null,T=null,A=null,P=null,b=null,U=null,S=!1,R=null,V=null,W=null,L=null,I=null;const z=e.getParameter(e.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let X=!1,Y=0;const $=e.getParameter(e.VERSION);$.indexOf("WebGL")!==-1?(Y=parseFloat(/^WebGL (\d)/.exec($)[1]),X=Y>=1):$.indexOf("OpenGL ES")!==-1&&(Y=parseFloat(/^OpenGL ES (\d)/.exec($)[1]),X=Y>=2);let ne=null,ae={};const j=e.getParameter(e.SCISSOR_BOX),K=e.getParameter(e.VIEWPORT),Q=new hn().fromArray(j),he=new hn().fromArray(K);function me(ee,Xe,fe,Oe){const Ye=new Uint8Array(4),Ft=e.createTexture();e.bindTexture(ee,Ft),e.texParameteri(ee,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(ee,e.TEXTURE_MAG_FILTER,e.NEAREST);for(let qt=0;qt<fe;qt++)i&&(ee===e.TEXTURE_3D||ee===e.TEXTURE_2D_ARRAY)?e.texImage3D(Xe,0,e.RGBA,1,1,Oe,0,e.RGBA,e.UNSIGNED_BYTE,Ye):e.texImage2D(Xe+qt,0,e.RGBA,1,1,0,e.RGBA,e.UNSIGNED_BYTE,Ye);return Ft}const ge={};ge[e.TEXTURE_2D]=me(e.TEXTURE_2D,e.TEXTURE_2D,1),ge[e.TEXTURE_CUBE_MAP]=me(e.TEXTURE_CUBE_MAP,e.TEXTURE_CUBE_MAP_POSITIVE_X,6),i&&(ge[e.TEXTURE_2D_ARRAY]=me(e.TEXTURE_2D_ARRAY,e.TEXTURE_2D_ARRAY,1,1),ge[e.TEXTURE_3D]=me(e.TEXTURE_3D,e.TEXTURE_3D,1,1)),l.setClear(0,0,0,1),h.setClear(1),u.setClear(0),Pe(e.DEPTH_TEST),h.setFunc(Gd),et(!1),qe(bg),Pe(e.CULL_FACE),ze(ua);function Pe(ee){p[ee]!==!0&&(e.enable(ee),p[ee]=!0)}function we(ee){p[ee]!==!1&&(e.disable(ee),p[ee]=!1)}function Se(ee,Xe){return g[ee]!==Xe?(e.bindFramebuffer(ee,Xe),g[ee]=Xe,i&&(ee===e.DRAW_FRAMEBUFFER&&(g[e.FRAMEBUFFER]=Xe),ee===e.FRAMEBUFFER&&(g[e.DRAW_FRAMEBUFFER]=Xe)),!0):!1}function ht(ee,Xe){let fe=y,Oe=!1;if(ee)if(fe=x.get(Xe),fe===void 0&&(fe=[],x.set(Xe,fe)),ee.isWebGLMultipleRenderTargets){const Ye=ee.texture;if(fe.length!==Ye.length||fe[0]!==e.COLOR_ATTACHMENT0){for(let Ft=0,qt=Ye.length;Ft<qt;Ft++)fe[Ft]=e.COLOR_ATTACHMENT0+Ft;fe.length=Ye.length,Oe=!0}}else fe[0]!==e.COLOR_ATTACHMENT0&&(fe[0]=e.COLOR_ATTACHMENT0,Oe=!0);else fe[0]!==e.BACK&&(fe[0]=e.BACK,Oe=!0);Oe&&(n.isWebGL2?e.drawBuffers(fe):t.get("WEBGL_draw_buffers").drawBuffersWEBGL(fe))}function J(ee){return _!==ee?(e.useProgram(ee),_=ee,!0):!1}const se={[io]:e.FUNC_ADD,[m1]:e.FUNC_SUBTRACT,[v1]:e.FUNC_REVERSE_SUBTRACT};if(i)se[Lg]=e.MIN,se[Cg]=e.MAX;else{const ee=t.get("EXT_blend_minmax");ee!==null&&(se[Lg]=ee.MIN_EXT,se[Cg]=ee.MAX_EXT)}const Qe={[g1]:e.ZERO,[_1]:e.ONE,[x1]:e.SRC_COLOR,[l0]:e.SRC_ALPHA,[b1]:e.SRC_ALPHA_SATURATE,[w1]:e.DST_COLOR,[M1]:e.DST_ALPHA,[y1]:e.ONE_MINUS_SRC_COLOR,[c0]:e.ONE_MINUS_SRC_ALPHA,[S1]:e.ONE_MINUS_DST_COLOR,[E1]:e.ONE_MINUS_DST_ALPHA};function ze(ee,Xe,fe,Oe,Ye,Ft,qt,Qt){if(ee===ua){v===!0&&(we(e.BLEND),v=!1);return}if(v===!1&&(Pe(e.BLEND),v=!0),ee!==p1){if(ee!==w||Qt!==S){if((M!==io||P!==io)&&(e.blendEquation(e.FUNC_ADD),M=io,P=io),Qt)switch(ee){case ao:e.blendFuncSeparate(e.ONE,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA);break;case Tg:e.blendFunc(e.ONE,e.ONE);break;case Ag:e.blendFuncSeparate(e.ZERO,e.ONE_MINUS_SRC_COLOR,e.ZERO,e.ONE);break;case Rg:e.blendFuncSeparate(e.ZERO,e.SRC_COLOR,e.ZERO,e.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",ee);break}else switch(ee){case ao:e.blendFuncSeparate(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA);break;case Tg:e.blendFunc(e.SRC_ALPHA,e.ONE);break;case Ag:e.blendFuncSeparate(e.ZERO,e.ONE_MINUS_SRC_COLOR,e.ZERO,e.ONE);break;case Rg:e.blendFunc(e.ZERO,e.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",ee);break}T=null,A=null,b=null,U=null,w=ee,S=Qt}return}Ye=Ye||Xe,Ft=Ft||fe,qt=qt||Oe,(Xe!==M||Ye!==P)&&(e.blendEquationSeparate(se[Xe],se[Ye]),M=Xe,P=Ye),(fe!==T||Oe!==A||Ft!==b||qt!==U)&&(e.blendFuncSeparate(Qe[fe],Qe[Oe],Qe[Ft],Qe[qt]),T=fe,A=Oe,b=Ft,U=qt),w=ee,S=!1}function Re(ee,Xe){ee.side===cr?we(e.CULL_FACE):Pe(e.CULL_FACE);let fe=ee.side===ti;Xe&&(fe=!fe),et(fe),ee.blending===ao&&ee.transparent===!1?ze(ua):ze(ee.blending,ee.blendEquation,ee.blendSrc,ee.blendDst,ee.blendEquationAlpha,ee.blendSrcAlpha,ee.blendDstAlpha,ee.premultipliedAlpha),h.setFunc(ee.depthFunc),h.setTest(ee.depthTest),h.setMask(ee.depthWrite),l.setMask(ee.colorWrite);const Oe=ee.stencilWrite;u.setTest(Oe),Oe&&(u.setMask(ee.stencilWriteMask),u.setFunc(ee.stencilFunc,ee.stencilRef,ee.stencilFuncMask),u.setOp(ee.stencilFail,ee.stencilZFail,ee.stencilZPass)),tt(ee.polygonOffset,ee.polygonOffsetFactor,ee.polygonOffsetUnits),ee.alphaToCoverage===!0?Pe(e.SAMPLE_ALPHA_TO_COVERAGE):we(e.SAMPLE_ALPHA_TO_COVERAGE)}function et(ee){R!==ee&&(ee?e.frontFace(e.CW):e.frontFace(e.CCW),R=ee)}function qe(ee){ee!==h1?(Pe(e.CULL_FACE),ee!==V&&(ee===bg?e.cullFace(e.BACK):ee===f1?e.cullFace(e.FRONT):e.cullFace(e.FRONT_AND_BACK))):we(e.CULL_FACE),V=ee}function We(ee){ee!==W&&(X&&e.lineWidth(ee),W=ee)}function tt(ee,Xe,fe){ee?(Pe(e.POLYGON_OFFSET_FILL),(L!==Xe||I!==fe)&&(e.polygonOffset(Xe,fe),L=Xe,I=fe)):we(e.POLYGON_OFFSET_FILL)}function ot(ee){ee?Pe(e.SCISSOR_TEST):we(e.SCISSOR_TEST)}function pt(ee){ee===void 0&&(ee=e.TEXTURE0+z-1),ne!==ee&&(e.activeTexture(ee),ne=ee)}function Dt(ee,Xe,fe){fe===void 0&&(ne===null?fe=e.TEXTURE0+z-1:fe=ne);let Oe=ae[fe];Oe===void 0&&(Oe={type:void 0,texture:void 0},ae[fe]=Oe),(Oe.type!==ee||Oe.texture!==Xe)&&(ne!==fe&&(e.activeTexture(fe),ne=fe),e.bindTexture(ee,Xe||ge[ee]),Oe.type=ee,Oe.texture=Xe)}function G(){const ee=ae[ne];ee!==void 0&&ee.type!==void 0&&(e.bindTexture(ee.type,null),ee.type=void 0,ee.texture=void 0)}function N(){try{e.compressedTexImage2D.apply(e,arguments)}catch(ee){console.error("THREE.WebGLState:",ee)}}function ue(){try{e.compressedTexImage3D.apply(e,arguments)}catch(ee){console.error("THREE.WebGLState:",ee)}}function Ce(){try{e.texSubImage2D.apply(e,arguments)}catch(ee){console.error("THREE.WebGLState:",ee)}}function be(){try{e.texSubImage3D.apply(e,arguments)}catch(ee){console.error("THREE.WebGLState:",ee)}}function Fe(){try{e.compressedTexSubImage2D.apply(e,arguments)}catch(ee){console.error("THREE.WebGLState:",ee)}}function st(){try{e.compressedTexSubImage3D.apply(e,arguments)}catch(ee){console.error("THREE.WebGLState:",ee)}}function Ge(){try{e.texStorage2D.apply(e,arguments)}catch(ee){console.error("THREE.WebGLState:",ee)}}function ve(){try{e.texStorage3D.apply(e,arguments)}catch(ee){console.error("THREE.WebGLState:",ee)}}function ie(){try{e.texImage2D.apply(e,arguments)}catch(ee){console.error("THREE.WebGLState:",ee)}}function Ue(){try{e.texImage3D.apply(e,arguments)}catch(ee){console.error("THREE.WebGLState:",ee)}}function Ne(ee){Q.equals(ee)===!1&&(e.scissor(ee.x,ee.y,ee.z,ee.w),Q.copy(ee))}function Ve(ee){he.equals(ee)===!1&&(e.viewport(ee.x,ee.y,ee.z,ee.w),he.copy(ee))}function Le(ee,Xe){let fe=d.get(Xe);fe===void 0&&(fe=new WeakMap,d.set(Xe,fe));let Oe=fe.get(ee);Oe===void 0&&(Oe=e.getUniformBlockIndex(Xe,ee.name),fe.set(ee,Oe))}function rt(ee,Xe){const Oe=d.get(Xe).get(ee);f.get(Xe)!==Oe&&(e.uniformBlockBinding(Xe,Oe,ee.__bindingPointIndex),f.set(Xe,Oe))}function Et(){e.disable(e.BLEND),e.disable(e.CULL_FACE),e.disable(e.DEPTH_TEST),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SCISSOR_TEST),e.disable(e.STENCIL_TEST),e.disable(e.SAMPLE_ALPHA_TO_COVERAGE),e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ONE,e.ZERO),e.blendFuncSeparate(e.ONE,e.ZERO,e.ONE,e.ZERO),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0),e.depthMask(!0),e.depthFunc(e.LESS),e.clearDepth(1),e.stencilMask(4294967295),e.stencilFunc(e.ALWAYS,0,4294967295),e.stencilOp(e.KEEP,e.KEEP,e.KEEP),e.clearStencil(0),e.cullFace(e.BACK),e.frontFace(e.CCW),e.polygonOffset(0,0),e.activeTexture(e.TEXTURE0),e.bindFramebuffer(e.FRAMEBUFFER,null),i===!0&&(e.bindFramebuffer(e.DRAW_FRAMEBUFFER,null),e.bindFramebuffer(e.READ_FRAMEBUFFER,null)),e.useProgram(null),e.lineWidth(1),e.scissor(0,0,e.canvas.width,e.canvas.height),e.viewport(0,0,e.canvas.width,e.canvas.height),p={},ne=null,ae={},g={},x=new WeakMap,y=[],_=null,v=!1,w=null,M=null,T=null,A=null,P=null,b=null,U=null,S=!1,R=null,V=null,W=null,L=null,I=null,Q.set(0,0,e.canvas.width,e.canvas.height),he.set(0,0,e.canvas.width,e.canvas.height),l.reset(),h.reset(),u.reset()}return{buffers:{color:l,depth:h,stencil:u},enable:Pe,disable:we,bindFramebuffer:Se,drawBuffers:ht,useProgram:J,setBlending:ze,setMaterial:Re,setFlipSided:et,setCullFace:qe,setLineWidth:We,setPolygonOffset:tt,setScissorTest:ot,activeTexture:pt,bindTexture:Dt,unbindTexture:G,compressedTexImage2D:N,compressedTexImage3D:ue,texImage2D:ie,texImage3D:Ue,updateUBOMapping:Le,uniformBlockBinding:rt,texStorage2D:Ge,texStorage3D:ve,texSubImage2D:Ce,texSubImage3D:be,compressedTexSubImage2D:Fe,compressedTexSubImage3D:st,scissor:Ne,viewport:Ve,reset:Et}}function u2(e,t,n,i,r,a,o){const l=r.isWebGL2,h=r.maxTextures,u=r.maxCubemapSize,f=r.maxTextureSize,d=r.maxSamples,p=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,g=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),x=new WeakMap;let y;const _=new WeakMap;let v=!1;try{v=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function w(G,N){return v?new OffscreenCanvas(G,N):Gl("canvas")}function M(G,N,ue,Ce){let be=1;if((G.width>Ce||G.height>Ce)&&(be=Ce/Math.max(G.width,G.height)),be<1||N===!0)if(typeof HTMLImageElement<"u"&&G instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&G instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&G instanceof ImageBitmap){const Fe=N?qd:Math.floor,st=Fe(be*G.width),Ge=Fe(be*G.height);y===void 0&&(y=w(st,Ge));const ve=ue?w(st,Ge):y;return ve.width=st,ve.height=Ge,ve.getContext("2d").drawImage(G,0,0,st,Ge),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+G.width+"x"+G.height+") to ("+st+"x"+Ge+")."),ve}else return"data"in G&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+G.width+"x"+G.height+")."),G;return G}function T(G){return a_(G.width)&&a_(G.height)}function A(G){return l?!1:G.wrapS!==tr||G.wrapT!==tr||G.minFilter!==ei&&G.minFilter!==zi}function P(G,N){return G.generateMipmaps&&N&&G.minFilter!==ei&&G.minFilter!==zi}function b(G){e.generateMipmap(G)}function U(G,N,ue,Ce,be=!1){if(l===!1)return N;if(G!==null){if(e[G]!==void 0)return e[G];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+G+"'")}let Fe=N;return N===e.RED&&(ue===e.FLOAT&&(Fe=e.R32F),ue===e.HALF_FLOAT&&(Fe=e.R16F),ue===e.UNSIGNED_BYTE&&(Fe=e.R8)),N===e.RED_INTEGER&&(ue===e.UNSIGNED_BYTE&&(Fe=e.R8UI),ue===e.UNSIGNED_SHORT&&(Fe=e.R16UI),ue===e.UNSIGNED_INT&&(Fe=e.R32UI),ue===e.BYTE&&(Fe=e.R8I),ue===e.SHORT&&(Fe=e.R16I),ue===e.INT&&(Fe=e.R32I)),N===e.RG&&(ue===e.FLOAT&&(Fe=e.RG32F),ue===e.HALF_FLOAT&&(Fe=e.RG16F),ue===e.UNSIGNED_BYTE&&(Fe=e.RG8)),N===e.RGBA&&(ue===e.FLOAT&&(Fe=e.RGBA32F),ue===e.HALF_FLOAT&&(Fe=e.RGBA16F),ue===e.UNSIGNED_BYTE&&(Fe=Ce===sn&&be===!1?e.SRGB8_ALPHA8:e.RGBA8),ue===e.UNSIGNED_SHORT_4_4_4_4&&(Fe=e.RGBA4),ue===e.UNSIGNED_SHORT_5_5_5_1&&(Fe=e.RGB5_A1)),(Fe===e.R16F||Fe===e.R32F||Fe===e.RG16F||Fe===e.RG32F||Fe===e.RGBA16F||Fe===e.RGBA32F)&&t.get("EXT_color_buffer_float"),Fe}function S(G,N,ue){return P(G,ue)===!0||G.isFramebufferTexture&&G.minFilter!==ei&&G.minFilter!==zi?Math.log2(Math.max(N.width,N.height))+1:G.mipmaps!==void 0&&G.mipmaps.length>0?G.mipmaps.length:G.isCompressedTexture&&Array.isArray(G.image)?N.mipmaps.length:1}function R(G){return G===ei||G===Pg||G===nd?e.NEAREST:e.LINEAR}function V(G){const N=G.target;N.removeEventListener("dispose",V),L(N),N.isVideoTexture&&x.delete(N)}function W(G){const N=G.target;N.removeEventListener("dispose",W),z(N)}function L(G){const N=i.get(G);if(N.__webglInit===void 0)return;const ue=G.source,Ce=_.get(ue);if(Ce){const be=Ce[N.__cacheKey];be.usedTimes--,be.usedTimes===0&&I(G),Object.keys(Ce).length===0&&_.delete(ue)}i.remove(G)}function I(G){const N=i.get(G);e.deleteTexture(N.__webglTexture);const ue=G.source,Ce=_.get(ue);delete Ce[N.__cacheKey],o.memory.textures--}function z(G){const N=G.texture,ue=i.get(G),Ce=i.get(N);if(Ce.__webglTexture!==void 0&&(e.deleteTexture(Ce.__webglTexture),o.memory.textures--),G.depthTexture&&G.depthTexture.dispose(),G.isWebGLCubeRenderTarget)for(let be=0;be<6;be++){if(Array.isArray(ue.__webglFramebuffer[be]))for(let Fe=0;Fe<ue.__webglFramebuffer[be].length;Fe++)e.deleteFramebuffer(ue.__webglFramebuffer[be][Fe]);else e.deleteFramebuffer(ue.__webglFramebuffer[be]);ue.__webglDepthbuffer&&e.deleteRenderbuffer(ue.__webglDepthbuffer[be])}else{if(Array.isArray(ue.__webglFramebuffer))for(let be=0;be<ue.__webglFramebuffer.length;be++)e.deleteFramebuffer(ue.__webglFramebuffer[be]);else e.deleteFramebuffer(ue.__webglFramebuffer);if(ue.__webglDepthbuffer&&e.deleteRenderbuffer(ue.__webglDepthbuffer),ue.__webglMultisampledFramebuffer&&e.deleteFramebuffer(ue.__webglMultisampledFramebuffer),ue.__webglColorRenderbuffer)for(let be=0;be<ue.__webglColorRenderbuffer.length;be++)ue.__webglColorRenderbuffer[be]&&e.deleteRenderbuffer(ue.__webglColorRenderbuffer[be]);ue.__webglDepthRenderbuffer&&e.deleteRenderbuffer(ue.__webglDepthRenderbuffer)}if(G.isWebGLMultipleRenderTargets)for(let be=0,Fe=N.length;be<Fe;be++){const st=i.get(N[be]);st.__webglTexture&&(e.deleteTexture(st.__webglTexture),o.memory.textures--),i.remove(N[be])}i.remove(N),i.remove(G)}let X=0;function Y(){X=0}function $(){const G=X;return G>=h&&console.warn("THREE.WebGLTextures: Trying to use "+G+" texture units while this GPU supports only "+h),X+=1,G}function ne(G){const N=[];return N.push(G.wrapS),N.push(G.wrapT),N.push(G.wrapR||0),N.push(G.magFilter),N.push(G.minFilter),N.push(G.anisotropy),N.push(G.internalFormat),N.push(G.format),N.push(G.type),N.push(G.generateMipmaps),N.push(G.premultiplyAlpha),N.push(G.flipY),N.push(G.unpackAlignment),N.push(G.colorSpace),N.join()}function ae(G,N){const ue=i.get(G);if(G.isVideoTexture&&pt(G),G.isRenderTargetTexture===!1&&G.version>0&&ue.__version!==G.version){const Ce=G.image;if(Ce===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(Ce.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Se(ue,G,N);return}}n.bindTexture(e.TEXTURE_2D,ue.__webglTexture,e.TEXTURE0+N)}function j(G,N){const ue=i.get(G);if(G.version>0&&ue.__version!==G.version){Se(ue,G,N);return}n.bindTexture(e.TEXTURE_2D_ARRAY,ue.__webglTexture,e.TEXTURE0+N)}function K(G,N){const ue=i.get(G);if(G.version>0&&ue.__version!==G.version){Se(ue,G,N);return}n.bindTexture(e.TEXTURE_3D,ue.__webglTexture,e.TEXTURE0+N)}function Q(G,N){const ue=i.get(G);if(G.version>0&&ue.__version!==G.version){ht(ue,G,N);return}n.bindTexture(e.TEXTURE_CUBE_MAP,ue.__webglTexture,e.TEXTURE0+N)}const he={[kd]:e.REPEAT,[tr]:e.CLAMP_TO_EDGE,[Wd]:e.MIRRORED_REPEAT},me={[ei]:e.NEAREST,[Pg]:e.NEAREST_MIPMAP_NEAREST,[nd]:e.NEAREST_MIPMAP_LINEAR,[zi]:e.LINEAR,[G1]:e.LINEAR_MIPMAP_NEAREST,[Bl]:e.LINEAR_MIPMAP_LINEAR},ge={[eA]:e.NEVER,[oA]:e.ALWAYS,[tA]:e.LESS,[iA]:e.LEQUAL,[nA]:e.EQUAL,[sA]:e.GEQUAL,[rA]:e.GREATER,[aA]:e.NOTEQUAL};function Pe(G,N,ue){if(ue?(e.texParameteri(G,e.TEXTURE_WRAP_S,he[N.wrapS]),e.texParameteri(G,e.TEXTURE_WRAP_T,he[N.wrapT]),(G===e.TEXTURE_3D||G===e.TEXTURE_2D_ARRAY)&&e.texParameteri(G,e.TEXTURE_WRAP_R,he[N.wrapR]),e.texParameteri(G,e.TEXTURE_MAG_FILTER,me[N.magFilter]),e.texParameteri(G,e.TEXTURE_MIN_FILTER,me[N.minFilter])):(e.texParameteri(G,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(G,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),(G===e.TEXTURE_3D||G===e.TEXTURE_2D_ARRAY)&&e.texParameteri(G,e.TEXTURE_WRAP_R,e.CLAMP_TO_EDGE),(N.wrapS!==tr||N.wrapT!==tr)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(G,e.TEXTURE_MAG_FILTER,R(N.magFilter)),e.texParameteri(G,e.TEXTURE_MIN_FILTER,R(N.minFilter)),N.minFilter!==ei&&N.minFilter!==zi&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),N.compareFunction&&(e.texParameteri(G,e.TEXTURE_COMPARE_MODE,e.COMPARE_REF_TO_TEXTURE),e.texParameteri(G,e.TEXTURE_COMPARE_FUNC,ge[N.compareFunction])),t.has("EXT_texture_filter_anisotropic")===!0){const Ce=t.get("EXT_texture_filter_anisotropic");if(N.magFilter===ei||N.minFilter!==nd&&N.minFilter!==Bl||N.type===la&&t.has("OES_texture_float_linear")===!1||l===!1&&N.type===zl&&t.has("OES_texture_half_float_linear")===!1)return;(N.anisotropy>1||i.get(N).__currentAnisotropy)&&(e.texParameterf(G,Ce.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(N.anisotropy,r.getMaxAnisotropy())),i.get(N).__currentAnisotropy=N.anisotropy)}}function we(G,N){let ue=!1;G.__webglInit===void 0&&(G.__webglInit=!0,N.addEventListener("dispose",V));const Ce=N.source;let be=_.get(Ce);be===void 0&&(be={},_.set(Ce,be));const Fe=ne(N);if(Fe!==G.__cacheKey){be[Fe]===void 0&&(be[Fe]={texture:e.createTexture(),usedTimes:0},o.memory.textures++,ue=!0),be[Fe].usedTimes++;const st=be[G.__cacheKey];st!==void 0&&(be[G.__cacheKey].usedTimes--,st.usedTimes===0&&I(N)),G.__cacheKey=Fe,G.__webglTexture=be[Fe].texture}return ue}function Se(G,N,ue){let Ce=e.TEXTURE_2D;(N.isDataArrayTexture||N.isCompressedArrayTexture)&&(Ce=e.TEXTURE_2D_ARRAY),N.isData3DTexture&&(Ce=e.TEXTURE_3D);const be=we(G,N),Fe=N.source;n.bindTexture(Ce,G.__webglTexture,e.TEXTURE0+ue);const st=i.get(Fe);if(Fe.version!==st.__version||be===!0){n.activeTexture(e.TEXTURE0+ue),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,N.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,N.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,N.unpackAlignment),e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL,e.NONE);const Ge=A(N)&&T(N.image)===!1;let ve=M(N.image,Ge,!1,f);ve=Dt(N,ve);const ie=T(ve)||l,Ue=a.convert(N.format,N.colorSpace);let Ne=a.convert(N.type),Ve=U(N.internalFormat,Ue,Ne,N.colorSpace,N.isVideoTexture);Pe(Ce,N,ie);let Le;const rt=N.mipmaps,Et=l&&N.isVideoTexture!==!0,ee=st.__version===void 0||be===!0,Xe=S(N,ve,ie);if(N.isDepthTexture)Ve=e.DEPTH_COMPONENT,l?N.type===la?Ve=e.DEPTH_COMPONENT32F:N.type===oa?Ve=e.DEPTH_COMPONENT24:N.type===Va?Ve=e.DEPTH24_STENCIL8:Ve=e.DEPTH_COMPONENT16:N.type===la&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),N.format===ka&&Ve===e.DEPTH_COMPONENT&&N.type!==bp&&N.type!==oa&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),N.type=oa,Ne=a.convert(N.type)),N.format===uo&&Ve===e.DEPTH_COMPONENT&&(Ve=e.DEPTH_STENCIL,N.type!==Va&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),N.type=Va,Ne=a.convert(N.type))),ee&&(Et?n.texStorage2D(e.TEXTURE_2D,1,Ve,ve.width,ve.height):n.texImage2D(e.TEXTURE_2D,0,Ve,ve.width,ve.height,0,Ue,Ne,null));else if(N.isDataTexture)if(rt.length>0&&ie){Et&&ee&&n.texStorage2D(e.TEXTURE_2D,Xe,Ve,rt[0].width,rt[0].height);for(let fe=0,Oe=rt.length;fe<Oe;fe++)Le=rt[fe],Et?n.texSubImage2D(e.TEXTURE_2D,fe,0,0,Le.width,Le.height,Ue,Ne,Le.data):n.texImage2D(e.TEXTURE_2D,fe,Ve,Le.width,Le.height,0,Ue,Ne,Le.data);N.generateMipmaps=!1}else Et?(ee&&n.texStorage2D(e.TEXTURE_2D,Xe,Ve,ve.width,ve.height),n.texSubImage2D(e.TEXTURE_2D,0,0,0,ve.width,ve.height,Ue,Ne,ve.data)):n.texImage2D(e.TEXTURE_2D,0,Ve,ve.width,ve.height,0,Ue,Ne,ve.data);else if(N.isCompressedTexture)if(N.isCompressedArrayTexture){Et&&ee&&n.texStorage3D(e.TEXTURE_2D_ARRAY,Xe,Ve,rt[0].width,rt[0].height,ve.depth);for(let fe=0,Oe=rt.length;fe<Oe;fe++)Le=rt[fe],N.format!==nr?Ue!==null?Et?n.compressedTexSubImage3D(e.TEXTURE_2D_ARRAY,fe,0,0,0,Le.width,Le.height,ve.depth,Ue,Le.data,0,0):n.compressedTexImage3D(e.TEXTURE_2D_ARRAY,fe,Ve,Le.width,Le.height,ve.depth,0,Le.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Et?n.texSubImage3D(e.TEXTURE_2D_ARRAY,fe,0,0,0,Le.width,Le.height,ve.depth,Ue,Ne,Le.data):n.texImage3D(e.TEXTURE_2D_ARRAY,fe,Ve,Le.width,Le.height,ve.depth,0,Ue,Ne,Le.data)}else{Et&&ee&&n.texStorage2D(e.TEXTURE_2D,Xe,Ve,rt[0].width,rt[0].height);for(let fe=0,Oe=rt.length;fe<Oe;fe++)Le=rt[fe],N.format!==nr?Ue!==null?Et?n.compressedTexSubImage2D(e.TEXTURE_2D,fe,0,0,Le.width,Le.height,Ue,Le.data):n.compressedTexImage2D(e.TEXTURE_2D,fe,Ve,Le.width,Le.height,0,Le.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Et?n.texSubImage2D(e.TEXTURE_2D,fe,0,0,Le.width,Le.height,Ue,Ne,Le.data):n.texImage2D(e.TEXTURE_2D,fe,Ve,Le.width,Le.height,0,Ue,Ne,Le.data)}else if(N.isDataArrayTexture)Et?(ee&&n.texStorage3D(e.TEXTURE_2D_ARRAY,Xe,Ve,ve.width,ve.height,ve.depth),n.texSubImage3D(e.TEXTURE_2D_ARRAY,0,0,0,0,ve.width,ve.height,ve.depth,Ue,Ne,ve.data)):n.texImage3D(e.TEXTURE_2D_ARRAY,0,Ve,ve.width,ve.height,ve.depth,0,Ue,Ne,ve.data);else if(N.isData3DTexture)Et?(ee&&n.texStorage3D(e.TEXTURE_3D,Xe,Ve,ve.width,ve.height,ve.depth),n.texSubImage3D(e.TEXTURE_3D,0,0,0,0,ve.width,ve.height,ve.depth,Ue,Ne,ve.data)):n.texImage3D(e.TEXTURE_3D,0,Ve,ve.width,ve.height,ve.depth,0,Ue,Ne,ve.data);else if(N.isFramebufferTexture){if(ee)if(Et)n.texStorage2D(e.TEXTURE_2D,Xe,Ve,ve.width,ve.height);else{let fe=ve.width,Oe=ve.height;for(let Ye=0;Ye<Xe;Ye++)n.texImage2D(e.TEXTURE_2D,Ye,Ve,fe,Oe,0,Ue,Ne,null),fe>>=1,Oe>>=1}}else if(rt.length>0&&ie){Et&&ee&&n.texStorage2D(e.TEXTURE_2D,Xe,Ve,rt[0].width,rt[0].height);for(let fe=0,Oe=rt.length;fe<Oe;fe++)Le=rt[fe],Et?n.texSubImage2D(e.TEXTURE_2D,fe,0,0,Ue,Ne,Le):n.texImage2D(e.TEXTURE_2D,fe,Ve,Ue,Ne,Le);N.generateMipmaps=!1}else Et?(ee&&n.texStorage2D(e.TEXTURE_2D,Xe,Ve,ve.width,ve.height),n.texSubImage2D(e.TEXTURE_2D,0,0,0,Ue,Ne,ve)):n.texImage2D(e.TEXTURE_2D,0,Ve,Ue,Ne,ve);P(N,ie)&&b(Ce),st.__version=Fe.version,N.onUpdate&&N.onUpdate(N)}G.__version=N.version}function ht(G,N,ue){if(N.image.length!==6)return;const Ce=we(G,N),be=N.source;n.bindTexture(e.TEXTURE_CUBE_MAP,G.__webglTexture,e.TEXTURE0+ue);const Fe=i.get(be);if(be.version!==Fe.__version||Ce===!0){n.activeTexture(e.TEXTURE0+ue),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,N.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,N.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,N.unpackAlignment),e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL,e.NONE);const st=N.isCompressedTexture||N.image[0].isCompressedTexture,Ge=N.image[0]&&N.image[0].isDataTexture,ve=[];for(let fe=0;fe<6;fe++)!st&&!Ge?ve[fe]=M(N.image[fe],!1,!0,u):ve[fe]=Ge?N.image[fe].image:N.image[fe],ve[fe]=Dt(N,ve[fe]);const ie=ve[0],Ue=T(ie)||l,Ne=a.convert(N.format,N.colorSpace),Ve=a.convert(N.type),Le=U(N.internalFormat,Ne,Ve,N.colorSpace),rt=l&&N.isVideoTexture!==!0,Et=Fe.__version===void 0||Ce===!0;let ee=S(N,ie,Ue);Pe(e.TEXTURE_CUBE_MAP,N,Ue);let Xe;if(st){rt&&Et&&n.texStorage2D(e.TEXTURE_CUBE_MAP,ee,Le,ie.width,ie.height);for(let fe=0;fe<6;fe++){Xe=ve[fe].mipmaps;for(let Oe=0;Oe<Xe.length;Oe++){const Ye=Xe[Oe];N.format!==nr?Ne!==null?rt?n.compressedTexSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+fe,Oe,0,0,Ye.width,Ye.height,Ne,Ye.data):n.compressedTexImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+fe,Oe,Le,Ye.width,Ye.height,0,Ye.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):rt?n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+fe,Oe,0,0,Ye.width,Ye.height,Ne,Ve,Ye.data):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+fe,Oe,Le,Ye.width,Ye.height,0,Ne,Ve,Ye.data)}}}else{Xe=N.mipmaps,rt&&Et&&(Xe.length>0&&ee++,n.texStorage2D(e.TEXTURE_CUBE_MAP,ee,Le,ve[0].width,ve[0].height));for(let fe=0;fe<6;fe++)if(Ge){rt?n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+fe,0,0,0,ve[fe].width,ve[fe].height,Ne,Ve,ve[fe].data):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+fe,0,Le,ve[fe].width,ve[fe].height,0,Ne,Ve,ve[fe].data);for(let Oe=0;Oe<Xe.length;Oe++){const Ft=Xe[Oe].image[fe].image;rt?n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+fe,Oe+1,0,0,Ft.width,Ft.height,Ne,Ve,Ft.data):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+fe,Oe+1,Le,Ft.width,Ft.height,0,Ne,Ve,Ft.data)}}else{rt?n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+fe,0,0,0,Ne,Ve,ve[fe]):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+fe,0,Le,Ne,Ve,ve[fe]);for(let Oe=0;Oe<Xe.length;Oe++){const Ye=Xe[Oe];rt?n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+fe,Oe+1,0,0,Ne,Ve,Ye.image[fe]):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+fe,Oe+1,Le,Ne,Ve,Ye.image[fe])}}}P(N,Ue)&&b(e.TEXTURE_CUBE_MAP),Fe.__version=be.version,N.onUpdate&&N.onUpdate(N)}G.__version=N.version}function J(G,N,ue,Ce,be,Fe){const st=a.convert(ue.format,ue.colorSpace),Ge=a.convert(ue.type),ve=U(ue.internalFormat,st,Ge,ue.colorSpace);if(!i.get(N).__hasExternalTextures){const Ue=Math.max(1,N.width>>Fe),Ne=Math.max(1,N.height>>Fe);be===e.TEXTURE_3D||be===e.TEXTURE_2D_ARRAY?n.texImage3D(be,Fe,ve,Ue,Ne,N.depth,0,st,Ge,null):n.texImage2D(be,Fe,ve,Ue,Ne,0,st,Ge,null)}n.bindFramebuffer(e.FRAMEBUFFER,G),ot(N)?p.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,Ce,be,i.get(ue).__webglTexture,0,tt(N)):(be===e.TEXTURE_2D||be>=e.TEXTURE_CUBE_MAP_POSITIVE_X&&be<=e.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&e.framebufferTexture2D(e.FRAMEBUFFER,Ce,be,i.get(ue).__webglTexture,Fe),n.bindFramebuffer(e.FRAMEBUFFER,null)}function se(G,N,ue){if(e.bindRenderbuffer(e.RENDERBUFFER,G),N.depthBuffer&&!N.stencilBuffer){let Ce=e.DEPTH_COMPONENT16;if(ue||ot(N)){const be=N.depthTexture;be&&be.isDepthTexture&&(be.type===la?Ce=e.DEPTH_COMPONENT32F:be.type===oa&&(Ce=e.DEPTH_COMPONENT24));const Fe=tt(N);ot(N)?p.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,Fe,Ce,N.width,N.height):e.renderbufferStorageMultisample(e.RENDERBUFFER,Fe,Ce,N.width,N.height)}else e.renderbufferStorage(e.RENDERBUFFER,Ce,N.width,N.height);e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.RENDERBUFFER,G)}else if(N.depthBuffer&&N.stencilBuffer){const Ce=tt(N);ue&&ot(N)===!1?e.renderbufferStorageMultisample(e.RENDERBUFFER,Ce,e.DEPTH24_STENCIL8,N.width,N.height):ot(N)?p.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,Ce,e.DEPTH24_STENCIL8,N.width,N.height):e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_STENCIL,N.width,N.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.RENDERBUFFER,G)}else{const Ce=N.isWebGLMultipleRenderTargets===!0?N.texture:[N.texture];for(let be=0;be<Ce.length;be++){const Fe=Ce[be],st=a.convert(Fe.format,Fe.colorSpace),Ge=a.convert(Fe.type),ve=U(Fe.internalFormat,st,Ge,Fe.colorSpace),ie=tt(N);ue&&ot(N)===!1?e.renderbufferStorageMultisample(e.RENDERBUFFER,ie,ve,N.width,N.height):ot(N)?p.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,ie,ve,N.width,N.height):e.renderbufferStorage(e.RENDERBUFFER,ve,N.width,N.height)}}e.bindRenderbuffer(e.RENDERBUFFER,null)}function Qe(G,N){if(N&&N.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(e.FRAMEBUFFER,G),!(N.depthTexture&&N.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!i.get(N.depthTexture).__webglTexture||N.depthTexture.image.width!==N.width||N.depthTexture.image.height!==N.height)&&(N.depthTexture.image.width=N.width,N.depthTexture.image.height=N.height,N.depthTexture.needsUpdate=!0),ae(N.depthTexture,0);const Ce=i.get(N.depthTexture).__webglTexture,be=tt(N);if(N.depthTexture.format===ka)ot(N)?p.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,Ce,0,be):e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,Ce,0);else if(N.depthTexture.format===uo)ot(N)?p.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,Ce,0,be):e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,Ce,0);else throw new Error("Unknown depthTexture format")}function ze(G){const N=i.get(G),ue=G.isWebGLCubeRenderTarget===!0;if(G.depthTexture&&!N.__autoAllocateDepthBuffer){if(ue)throw new Error("target.depthTexture not supported in Cube render targets");Qe(N.__webglFramebuffer,G)}else if(ue){N.__webglDepthbuffer=[];for(let Ce=0;Ce<6;Ce++)n.bindFramebuffer(e.FRAMEBUFFER,N.__webglFramebuffer[Ce]),N.__webglDepthbuffer[Ce]=e.createRenderbuffer(),se(N.__webglDepthbuffer[Ce],G,!1)}else n.bindFramebuffer(e.FRAMEBUFFER,N.__webglFramebuffer),N.__webglDepthbuffer=e.createRenderbuffer(),se(N.__webglDepthbuffer,G,!1);n.bindFramebuffer(e.FRAMEBUFFER,null)}function Re(G,N,ue){const Ce=i.get(G);N!==void 0&&J(Ce.__webglFramebuffer,G,G.texture,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,0),ue!==void 0&&ze(G)}function et(G){const N=G.texture,ue=i.get(G),Ce=i.get(N);G.addEventListener("dispose",W),G.isWebGLMultipleRenderTargets!==!0&&(Ce.__webglTexture===void 0&&(Ce.__webglTexture=e.createTexture()),Ce.__version=N.version,o.memory.textures++);const be=G.isWebGLCubeRenderTarget===!0,Fe=G.isWebGLMultipleRenderTargets===!0,st=T(G)||l;if(be){ue.__webglFramebuffer=[];for(let Ge=0;Ge<6;Ge++)if(l&&N.mipmaps&&N.mipmaps.length>0){ue.__webglFramebuffer[Ge]=[];for(let ve=0;ve<N.mipmaps.length;ve++)ue.__webglFramebuffer[Ge][ve]=e.createFramebuffer()}else ue.__webglFramebuffer[Ge]=e.createFramebuffer()}else{if(l&&N.mipmaps&&N.mipmaps.length>0){ue.__webglFramebuffer=[];for(let Ge=0;Ge<N.mipmaps.length;Ge++)ue.__webglFramebuffer[Ge]=e.createFramebuffer()}else ue.__webglFramebuffer=e.createFramebuffer();if(Fe)if(r.drawBuffers){const Ge=G.texture;for(let ve=0,ie=Ge.length;ve<ie;ve++){const Ue=i.get(Ge[ve]);Ue.__webglTexture===void 0&&(Ue.__webglTexture=e.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(l&&G.samples>0&&ot(G)===!1){const Ge=Fe?N:[N];ue.__webglMultisampledFramebuffer=e.createFramebuffer(),ue.__webglColorRenderbuffer=[],n.bindFramebuffer(e.FRAMEBUFFER,ue.__webglMultisampledFramebuffer);for(let ve=0;ve<Ge.length;ve++){const ie=Ge[ve];ue.__webglColorRenderbuffer[ve]=e.createRenderbuffer(),e.bindRenderbuffer(e.RENDERBUFFER,ue.__webglColorRenderbuffer[ve]);const Ue=a.convert(ie.format,ie.colorSpace),Ne=a.convert(ie.type),Ve=U(ie.internalFormat,Ue,Ne,ie.colorSpace,G.isXRRenderTarget===!0),Le=tt(G);e.renderbufferStorageMultisample(e.RENDERBUFFER,Le,Ve,G.width,G.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+ve,e.RENDERBUFFER,ue.__webglColorRenderbuffer[ve])}e.bindRenderbuffer(e.RENDERBUFFER,null),G.depthBuffer&&(ue.__webglDepthRenderbuffer=e.createRenderbuffer(),se(ue.__webglDepthRenderbuffer,G,!0)),n.bindFramebuffer(e.FRAMEBUFFER,null)}}if(be){n.bindTexture(e.TEXTURE_CUBE_MAP,Ce.__webglTexture),Pe(e.TEXTURE_CUBE_MAP,N,st);for(let Ge=0;Ge<6;Ge++)if(l&&N.mipmaps&&N.mipmaps.length>0)for(let ve=0;ve<N.mipmaps.length;ve++)J(ue.__webglFramebuffer[Ge][ve],G,N,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+Ge,ve);else J(ue.__webglFramebuffer[Ge],G,N,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+Ge,0);P(N,st)&&b(e.TEXTURE_CUBE_MAP),n.unbindTexture()}else if(Fe){const Ge=G.texture;for(let ve=0,ie=Ge.length;ve<ie;ve++){const Ue=Ge[ve],Ne=i.get(Ue);n.bindTexture(e.TEXTURE_2D,Ne.__webglTexture),Pe(e.TEXTURE_2D,Ue,st),J(ue.__webglFramebuffer,G,Ue,e.COLOR_ATTACHMENT0+ve,e.TEXTURE_2D,0),P(Ue,st)&&b(e.TEXTURE_2D)}n.unbindTexture()}else{let Ge=e.TEXTURE_2D;if((G.isWebGL3DRenderTarget||G.isWebGLArrayRenderTarget)&&(l?Ge=G.isWebGL3DRenderTarget?e.TEXTURE_3D:e.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),n.bindTexture(Ge,Ce.__webglTexture),Pe(Ge,N,st),l&&N.mipmaps&&N.mipmaps.length>0)for(let ve=0;ve<N.mipmaps.length;ve++)J(ue.__webglFramebuffer[ve],G,N,e.COLOR_ATTACHMENT0,Ge,ve);else J(ue.__webglFramebuffer,G,N,e.COLOR_ATTACHMENT0,Ge,0);P(N,st)&&b(Ge),n.unbindTexture()}G.depthBuffer&&ze(G)}function qe(G){const N=T(G)||l,ue=G.isWebGLMultipleRenderTargets===!0?G.texture:[G.texture];for(let Ce=0,be=ue.length;Ce<be;Ce++){const Fe=ue[Ce];if(P(Fe,N)){const st=G.isWebGLCubeRenderTarget?e.TEXTURE_CUBE_MAP:e.TEXTURE_2D,Ge=i.get(Fe).__webglTexture;n.bindTexture(st,Ge),b(st),n.unbindTexture()}}}function We(G){if(l&&G.samples>0&&ot(G)===!1){const N=G.isWebGLMultipleRenderTargets?G.texture:[G.texture],ue=G.width,Ce=G.height;let be=e.COLOR_BUFFER_BIT;const Fe=[],st=G.stencilBuffer?e.DEPTH_STENCIL_ATTACHMENT:e.DEPTH_ATTACHMENT,Ge=i.get(G),ve=G.isWebGLMultipleRenderTargets===!0;if(ve)for(let ie=0;ie<N.length;ie++)n.bindFramebuffer(e.FRAMEBUFFER,Ge.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+ie,e.RENDERBUFFER,null),n.bindFramebuffer(e.FRAMEBUFFER,Ge.__webglFramebuffer),e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0+ie,e.TEXTURE_2D,null,0);n.bindFramebuffer(e.READ_FRAMEBUFFER,Ge.__webglMultisampledFramebuffer),n.bindFramebuffer(e.DRAW_FRAMEBUFFER,Ge.__webglFramebuffer);for(let ie=0;ie<N.length;ie++){Fe.push(e.COLOR_ATTACHMENT0+ie),G.depthBuffer&&Fe.push(st);const Ue=Ge.__ignoreDepthValues!==void 0?Ge.__ignoreDepthValues:!1;if(Ue===!1&&(G.depthBuffer&&(be|=e.DEPTH_BUFFER_BIT),G.stencilBuffer&&(be|=e.STENCIL_BUFFER_BIT)),ve&&e.framebufferRenderbuffer(e.READ_FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.RENDERBUFFER,Ge.__webglColorRenderbuffer[ie]),Ue===!0&&(e.invalidateFramebuffer(e.READ_FRAMEBUFFER,[st]),e.invalidateFramebuffer(e.DRAW_FRAMEBUFFER,[st])),ve){const Ne=i.get(N[ie]).__webglTexture;e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,Ne,0)}e.blitFramebuffer(0,0,ue,Ce,0,0,ue,Ce,be,e.NEAREST),g&&e.invalidateFramebuffer(e.READ_FRAMEBUFFER,Fe)}if(n.bindFramebuffer(e.READ_FRAMEBUFFER,null),n.bindFramebuffer(e.DRAW_FRAMEBUFFER,null),ve)for(let ie=0;ie<N.length;ie++){n.bindFramebuffer(e.FRAMEBUFFER,Ge.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+ie,e.RENDERBUFFER,Ge.__webglColorRenderbuffer[ie]);const Ue=i.get(N[ie]).__webglTexture;n.bindFramebuffer(e.FRAMEBUFFER,Ge.__webglFramebuffer),e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0+ie,e.TEXTURE_2D,Ue,0)}n.bindFramebuffer(e.DRAW_FRAMEBUFFER,Ge.__webglMultisampledFramebuffer)}}function tt(G){return Math.min(d,G.samples)}function ot(G){const N=i.get(G);return l&&G.samples>0&&t.has("WEBGL_multisampled_render_to_texture")===!0&&N.__useRenderToTexture!==!1}function pt(G){const N=o.render.frame;x.get(G)!==N&&(x.set(G,N),G.update())}function Dt(G,N){const ue=G.colorSpace,Ce=G.format,be=G.type;return G.isCompressedTexture===!0||G.isVideoTexture===!0||G.format===Xd||ue!==hr&&ue!==Xa&&(ue===sn||ue===Dh?l===!1?t.has("EXT_sRGB")===!0&&Ce===nr?(G.format=Xd,G.minFilter=zi,G.generateMipmaps=!1):N=E0.sRGBToLinear(N):(Ce!==nr||be!==fa)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",ue)),N}this.allocateTextureUnit=$,this.resetTextureUnits=Y,this.setTexture2D=ae,this.setTexture2DArray=j,this.setTexture3D=K,this.setTextureCube=Q,this.rebindTextures=Re,this.setupRenderTarget=et,this.updateRenderTargetMipmap=qe,this.updateMultisampleRenderTarget=We,this.setupDepthRenderbuffer=ze,this.setupFrameBufferTexture=J,this.useMultisampledRTT=ot}const h2=0,Sn=1;function f2(e,t,n){const i=n.isWebGL2;function r(a,o=Xa){let l;const h=o===sn||o===Dh?Sn:h2;if(a===fa)return e.UNSIGNED_BYTE;if(a===f0)return e.UNSIGNED_SHORT_4_4_4_4;if(a===d0)return e.UNSIGNED_SHORT_5_5_5_1;if(a===H1)return e.BYTE;if(a===V1)return e.SHORT;if(a===bp)return e.UNSIGNED_SHORT;if(a===h0)return e.INT;if(a===oa)return e.UNSIGNED_INT;if(a===la)return e.FLOAT;if(a===zl)return i?e.HALF_FLOAT:(l=t.get("OES_texture_half_float"),l!==null?l.HALF_FLOAT_OES:null);if(a===k1)return e.ALPHA;if(a===nr)return e.RGBA;if(a===W1)return e.LUMINANCE;if(a===X1)return e.LUMINANCE_ALPHA;if(a===ka)return e.DEPTH_COMPONENT;if(a===uo)return e.DEPTH_STENCIL;if(a===Xd)return l=t.get("EXT_sRGB"),l!==null?l.SRGB_ALPHA_EXT:null;if(a===Y1)return e.RED;if(a===p0)return e.RED_INTEGER;if(a===q1)return e.RG;if(a===m0)return e.RG_INTEGER;if(a===v0)return e.RGBA_INTEGER;if(a===id||a===rd||a===ad||a===sd)if(h===Sn)if(l=t.get("WEBGL_compressed_texture_s3tc_srgb"),l!==null){if(a===id)return l.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(a===rd)return l.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(a===ad)return l.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(a===sd)return l.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(l=t.get("WEBGL_compressed_texture_s3tc"),l!==null){if(a===id)return l.COMPRESSED_RGB_S3TC_DXT1_EXT;if(a===rd)return l.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(a===ad)return l.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(a===sd)return l.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(a===Ug||a===Dg||a===Ig||a===Fg)if(l=t.get("WEBGL_compressed_texture_pvrtc"),l!==null){if(a===Ug)return l.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(a===Dg)return l.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(a===Ig)return l.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(a===Fg)return l.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(a===$1)return l=t.get("WEBGL_compressed_texture_etc1"),l!==null?l.COMPRESSED_RGB_ETC1_WEBGL:null;if(a===Ng||a===Og)if(l=t.get("WEBGL_compressed_texture_etc"),l!==null){if(a===Ng)return h===Sn?l.COMPRESSED_SRGB8_ETC2:l.COMPRESSED_RGB8_ETC2;if(a===Og)return h===Sn?l.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:l.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(a===Bg||a===zg||a===Gg||a===Hg||a===Vg||a===kg||a===Wg||a===Xg||a===Yg||a===qg||a===$g||a===jg||a===Zg||a===Kg)if(l=t.get("WEBGL_compressed_texture_astc"),l!==null){if(a===Bg)return h===Sn?l.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:l.COMPRESSED_RGBA_ASTC_4x4_KHR;if(a===zg)return h===Sn?l.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:l.COMPRESSED_RGBA_ASTC_5x4_KHR;if(a===Gg)return h===Sn?l.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:l.COMPRESSED_RGBA_ASTC_5x5_KHR;if(a===Hg)return h===Sn?l.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:l.COMPRESSED_RGBA_ASTC_6x5_KHR;if(a===Vg)return h===Sn?l.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:l.COMPRESSED_RGBA_ASTC_6x6_KHR;if(a===kg)return h===Sn?l.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:l.COMPRESSED_RGBA_ASTC_8x5_KHR;if(a===Wg)return h===Sn?l.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:l.COMPRESSED_RGBA_ASTC_8x6_KHR;if(a===Xg)return h===Sn?l.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:l.COMPRESSED_RGBA_ASTC_8x8_KHR;if(a===Yg)return h===Sn?l.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:l.COMPRESSED_RGBA_ASTC_10x5_KHR;if(a===qg)return h===Sn?l.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:l.COMPRESSED_RGBA_ASTC_10x6_KHR;if(a===$g)return h===Sn?l.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:l.COMPRESSED_RGBA_ASTC_10x8_KHR;if(a===jg)return h===Sn?l.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:l.COMPRESSED_RGBA_ASTC_10x10_KHR;if(a===Zg)return h===Sn?l.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:l.COMPRESSED_RGBA_ASTC_12x10_KHR;if(a===Kg)return h===Sn?l.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:l.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(a===od||a===Jg||a===Qg)if(l=t.get("EXT_texture_compression_bptc"),l!==null){if(a===od)return h===Sn?l.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:l.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(a===Jg)return l.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(a===Qg)return l.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(a===j1||a===e_||a===t_||a===n_)if(l=t.get("EXT_texture_compression_rgtc"),l!==null){if(a===od)return l.COMPRESSED_RED_RGTC1_EXT;if(a===e_)return l.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(a===t_)return l.COMPRESSED_RED_GREEN_RGTC2_EXT;if(a===n_)return l.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return a===Va?i?e.UNSIGNED_INT_24_8:(l=t.get("WEBGL_depth_texture"),l!==null?l.UNSIGNED_INT_24_8_WEBGL:null):e[a]!==void 0?e[a]:null}return{convert:r}}class d2 extends kn{constructor(t=[]){super(),this.isArrayCamera=!0,this.cameras=t}}let Dl=class extends Wi{constructor(){super(),this.isGroup=!0,this.type="Group"}};const p2={type:"move"};class Pd{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Dl,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Dl,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new ce,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new ce),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Dl,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new ce,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new ce),this._grip}dispatchEvent(t){return this._targetRay!==null&&this._targetRay.dispatchEvent(t),this._grip!==null&&this._grip.dispatchEvent(t),this._hand!==null&&this._hand.dispatchEvent(t),this}connect(t){if(t&&t.hand){const n=this._hand;if(n)for(const i of t.hand.values())this._getHandJoint(n,i)}return this.dispatchEvent({type:"connected",data:t}),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(t,n,i){let r=null,a=null,o=null;const l=this._targetRay,h=this._grip,u=this._hand;if(t&&n.session.visibilityState!=="visible-blurred"){if(u&&t.hand){o=!0;for(const y of t.hand.values()){const _=n.getJointPose(y,i),v=this._getHandJoint(u,y);_!==null&&(v.matrix.fromArray(_.transform.matrix),v.matrix.decompose(v.position,v.rotation,v.scale),v.matrixWorldNeedsUpdate=!0,v.jointRadius=_.radius),v.visible=_!==null}const f=u.joints["index-finger-tip"],d=u.joints["thumb-tip"],p=f.position.distanceTo(d.position),g=.02,x=.005;u.inputState.pinching&&p>g+x?(u.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!u.inputState.pinching&&p<=g-x&&(u.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else h!==null&&t.gripSpace&&(a=n.getPose(t.gripSpace,i),a!==null&&(h.matrix.fromArray(a.transform.matrix),h.matrix.decompose(h.position,h.rotation,h.scale),h.matrixWorldNeedsUpdate=!0,a.linearVelocity?(h.hasLinearVelocity=!0,h.linearVelocity.copy(a.linearVelocity)):h.hasLinearVelocity=!1,a.angularVelocity?(h.hasAngularVelocity=!0,h.angularVelocity.copy(a.angularVelocity)):h.hasAngularVelocity=!1));l!==null&&(r=n.getPose(t.targetRaySpace,i),r===null&&a!==null&&(r=a),r!==null&&(l.matrix.fromArray(r.transform.matrix),l.matrix.decompose(l.position,l.rotation,l.scale),l.matrixWorldNeedsUpdate=!0,r.linearVelocity?(l.hasLinearVelocity=!0,l.linearVelocity.copy(r.linearVelocity)):l.hasLinearVelocity=!1,r.angularVelocity?(l.hasAngularVelocity=!0,l.angularVelocity.copy(r.angularVelocity)):l.hasAngularVelocity=!1,this.dispatchEvent(p2)))}return l!==null&&(l.visible=r!==null),h!==null&&(h.visible=a!==null),u!==null&&(u.visible=o!==null),this}_getHandJoint(t,n){if(t.joints[n.jointName]===void 0){const i=new Dl;i.matrixAutoUpdate=!1,i.visible=!1,t.joints[n.jointName]=i,t.add(i)}return t.joints[n.jointName]}}let m2=class extends vr{constructor(t,n,i,r,a,o,l,h,u,f){if(f=f!==void 0?f:ka,f!==ka&&f!==uo)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");i===void 0&&f===ka&&(i=oa),i===void 0&&f===uo&&(i=Va),super(null,r,a,o,l,h,f,i,u),this.isDepthTexture=!0,this.image={width:t,height:n},this.magFilter=l!==void 0?l:ei,this.minFilter=h!==void 0?h:ei,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(t){return super.copy(t),this.compareFunction=t.compareFunction,this}toJSON(t){const n=super.toJSON(t);return this.compareFunction!==null&&(n.compareFunction=this.compareFunction),n}};class v2 extends Qo{constructor(t,n){super();const i=this;let r=null,a=1,o=null,l="local-floor",h=1,u=null,f=null,d=null,p=null,g=null,x=null;const y=n.getContextAttributes();let _=null,v=null;const w=[],M=[],T=new kn;T.layers.enable(1),T.viewport=new hn;const A=new kn;A.layers.enable(2),A.viewport=new hn;const P=[T,A],b=new d2;b.layers.enable(1),b.layers.enable(2);let U=null,S=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(j){let K=w[j];return K===void 0&&(K=new Pd,w[j]=K),K.getTargetRaySpace()},this.getControllerGrip=function(j){let K=w[j];return K===void 0&&(K=new Pd,w[j]=K),K.getGripSpace()},this.getHand=function(j){let K=w[j];return K===void 0&&(K=new Pd,w[j]=K),K.getHandSpace()};function R(j){const K=M.indexOf(j.inputSource);if(K===-1)return;const Q=w[K];Q!==void 0&&(Q.update(j.inputSource,j.frame,u||o),Q.dispatchEvent({type:j.type,data:j.inputSource}))}function V(){r.removeEventListener("select",R),r.removeEventListener("selectstart",R),r.removeEventListener("selectend",R),r.removeEventListener("squeeze",R),r.removeEventListener("squeezestart",R),r.removeEventListener("squeezeend",R),r.removeEventListener("end",V),r.removeEventListener("inputsourceschange",W);for(let j=0;j<w.length;j++){const K=M[j];K!==null&&(M[j]=null,w[j].disconnect(K))}U=null,S=null,t.setRenderTarget(_),g=null,p=null,d=null,r=null,v=null,ae.stop(),i.isPresenting=!1,i.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(j){a=j,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(j){l=j,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return u||o},this.setReferenceSpace=function(j){u=j},this.getBaseLayer=function(){return p!==null?p:g},this.getBinding=function(){return d},this.getFrame=function(){return x},this.getSession=function(){return r},this.setSession=async function(j){if(r=j,r!==null){if(_=t.getRenderTarget(),r.addEventListener("select",R),r.addEventListener("selectstart",R),r.addEventListener("selectend",R),r.addEventListener("squeeze",R),r.addEventListener("squeezestart",R),r.addEventListener("squeezeend",R),r.addEventListener("end",V),r.addEventListener("inputsourceschange",W),y.xrCompatible!==!0&&await n.makeXRCompatible(),r.renderState.layers===void 0||t.capabilities.isWebGL2===!1){const K={antialias:r.renderState.layers===void 0?y.antialias:!0,alpha:!0,depth:y.depth,stencil:y.stencil,framebufferScaleFactor:a};g=new XRWebGLLayer(r,n,K),r.updateRenderState({baseLayer:g}),v=new Za(g.framebufferWidth,g.framebufferHeight,{format:nr,type:fa,colorSpace:t.outputColorSpace,stencilBuffer:y.stencil})}else{let K=null,Q=null,he=null;y.depth&&(he=y.stencil?n.DEPTH24_STENCIL8:n.DEPTH_COMPONENT24,K=y.stencil?uo:ka,Q=y.stencil?Va:oa);const me={colorFormat:n.RGBA8,depthFormat:he,scaleFactor:a};d=new XRWebGLBinding(r,n),p=d.createProjectionLayer(me),r.updateRenderState({layers:[p]}),v=new Za(p.textureWidth,p.textureHeight,{format:nr,type:fa,depthTexture:new m2(p.textureWidth,p.textureHeight,Q,void 0,void 0,void 0,void 0,void 0,void 0,K),stencilBuffer:y.stencil,colorSpace:t.outputColorSpace,samples:y.antialias?4:0});const ge=t.properties.get(v);ge.__ignoreDepthValues=p.ignoreDepthValues}v.isXRRenderTarget=!0,this.setFoveation(h),u=null,o=await r.requestReferenceSpace(l),ae.setContext(r),ae.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(r!==null)return r.environmentBlendMode};function W(j){for(let K=0;K<j.removed.length;K++){const Q=j.removed[K],he=M.indexOf(Q);he>=0&&(M[he]=null,w[he].disconnect(Q))}for(let K=0;K<j.added.length;K++){const Q=j.added[K];let he=M.indexOf(Q);if(he===-1){for(let ge=0;ge<w.length;ge++)if(ge>=M.length){M.push(Q),he=ge;break}else if(M[ge]===null){M[ge]=Q,he=ge;break}if(he===-1)break}const me=w[he];me&&me.connect(Q)}}const L=new ce,I=new ce;function z(j,K,Q){L.setFromMatrixPosition(K.matrixWorld),I.setFromMatrixPosition(Q.matrixWorld);const he=L.distanceTo(I),me=K.projectionMatrix.elements,ge=Q.projectionMatrix.elements,Pe=me[14]/(me[10]-1),we=me[14]/(me[10]+1),Se=(me[9]+1)/me[5],ht=(me[9]-1)/me[5],J=(me[8]-1)/me[0],se=(ge[8]+1)/ge[0],Qe=Pe*J,ze=Pe*se,Re=he/(-J+se),et=Re*-J;K.matrixWorld.decompose(j.position,j.quaternion,j.scale),j.translateX(et),j.translateZ(Re),j.matrixWorld.compose(j.position,j.quaternion,j.scale),j.matrixWorldInverse.copy(j.matrixWorld).invert();const qe=Pe+Re,We=we+Re,tt=Qe-et,ot=ze+(he-et),pt=Se*we/We*qe,Dt=ht*we/We*qe;j.projectionMatrix.makePerspective(tt,ot,pt,Dt,qe,We),j.projectionMatrixInverse.copy(j.projectionMatrix).invert()}function X(j,K){K===null?j.matrixWorld.copy(j.matrix):j.matrixWorld.multiplyMatrices(K.matrixWorld,j.matrix),j.matrixWorldInverse.copy(j.matrixWorld).invert()}this.updateCamera=function(j){if(r===null)return;b.near=A.near=T.near=j.near,b.far=A.far=T.far=j.far,(U!==b.near||S!==b.far)&&(r.updateRenderState({depthNear:b.near,depthFar:b.far}),U=b.near,S=b.far);const K=j.parent,Q=b.cameras;X(b,K);for(let he=0;he<Q.length;he++)X(Q[he],K);Q.length===2?z(b,T,A):b.projectionMatrix.copy(T.projectionMatrix),Y(j,b,K)};function Y(j,K,Q){Q===null?j.matrix.copy(K.matrixWorld):(j.matrix.copy(Q.matrixWorld),j.matrix.invert(),j.matrix.multiply(K.matrixWorld)),j.matrix.decompose(j.position,j.quaternion,j.scale),j.updateMatrixWorld(!0),j.projectionMatrix.copy(K.projectionMatrix),j.projectionMatrixInverse.copy(K.projectionMatrixInverse),j.isPerspectiveCamera&&(j.fov=Yd*2*Math.atan(1/j.projectionMatrix.elements[5]),j.zoom=1)}this.getCamera=function(){return b},this.getFoveation=function(){if(!(p===null&&g===null))return h},this.setFoveation=function(j){h=j,p!==null&&(p.fixedFoveation=j),g!==null&&g.fixedFoveation!==void 0&&(g.fixedFoveation=j)};let $=null;function ne(j,K){if(f=K.getViewerPose(u||o),x=K,f!==null){const Q=f.views;g!==null&&(t.setRenderTargetFramebuffer(v,g.framebuffer),t.setRenderTarget(v));let he=!1;Q.length!==b.cameras.length&&(b.cameras.length=0,he=!0);for(let me=0;me<Q.length;me++){const ge=Q[me];let Pe=null;if(g!==null)Pe=g.getViewport(ge);else{const Se=d.getViewSubImage(p,ge);Pe=Se.viewport,me===0&&(t.setRenderTargetTextures(v,Se.colorTexture,p.ignoreDepthValues?void 0:Se.depthStencilTexture),t.setRenderTarget(v))}let we=P[me];we===void 0&&(we=new kn,we.layers.enable(me),we.viewport=new hn,P[me]=we),we.matrix.fromArray(ge.transform.matrix),we.matrix.decompose(we.position,we.quaternion,we.scale),we.projectionMatrix.fromArray(ge.projectionMatrix),we.projectionMatrixInverse.copy(we.projectionMatrix).invert(),we.viewport.set(Pe.x,Pe.y,Pe.width,Pe.height),me===0&&(b.matrix.copy(we.matrix),b.matrix.decompose(b.position,b.quaternion,b.scale)),he===!0&&b.cameras.push(we)}}for(let Q=0;Q<w.length;Q++){const he=M[Q],me=w[Q];he!==null&&me!==void 0&&me.update(he,K,u||o)}$&&$(j,K),K.detectedPlanes&&i.dispatchEvent({type:"planesdetected",data:K}),x=null}const ae=new z0;ae.setAnimationLoop(ne),this.setAnimationLoop=function(j){$=j},this.dispose=function(){}}}function g2(e,t){function n(_,v){_.matrixAutoUpdate===!0&&_.updateMatrix(),v.value.copy(_.matrix)}function i(_,v){v.color.getRGB(_.fogColor.value,N0(e)),v.isFog?(_.fogNear.value=v.near,_.fogFar.value=v.far):v.isFogExp2&&(_.fogDensity.value=v.density)}function r(_,v,w,M,T){v.isMeshBasicMaterial||v.isMeshLambertMaterial?a(_,v):v.isMeshToonMaterial?(a(_,v),d(_,v)):v.isMeshPhongMaterial?(a(_,v),f(_,v)):v.isMeshStandardMaterial?(a(_,v),p(_,v),v.isMeshPhysicalMaterial&&g(_,v,T)):v.isMeshMatcapMaterial?(a(_,v),x(_,v)):v.isMeshDepthMaterial?a(_,v):v.isMeshDistanceMaterial?(a(_,v),y(_,v)):v.isMeshNormalMaterial?a(_,v):v.isLineBasicMaterial?(o(_,v),v.isLineDashedMaterial&&l(_,v)):v.isPointsMaterial?h(_,v,w,M):v.isSpriteMaterial?u(_,v):v.isShadowMaterial?(_.color.value.copy(v.color),_.opacity.value=v.opacity):v.isShaderMaterial&&(v.uniformsNeedUpdate=!1)}function a(_,v){_.opacity.value=v.opacity,v.color&&_.diffuse.value.copy(v.color),v.emissive&&_.emissive.value.copy(v.emissive).multiplyScalar(v.emissiveIntensity),v.map&&(_.map.value=v.map,n(v.map,_.mapTransform)),v.alphaMap&&(_.alphaMap.value=v.alphaMap,n(v.alphaMap,_.alphaMapTransform)),v.bumpMap&&(_.bumpMap.value=v.bumpMap,n(v.bumpMap,_.bumpMapTransform),_.bumpScale.value=v.bumpScale,v.side===ti&&(_.bumpScale.value*=-1)),v.normalMap&&(_.normalMap.value=v.normalMap,n(v.normalMap,_.normalMapTransform),_.normalScale.value.copy(v.normalScale),v.side===ti&&_.normalScale.value.negate()),v.displacementMap&&(_.displacementMap.value=v.displacementMap,n(v.displacementMap,_.displacementMapTransform),_.displacementScale.value=v.displacementScale,_.displacementBias.value=v.displacementBias),v.emissiveMap&&(_.emissiveMap.value=v.emissiveMap,n(v.emissiveMap,_.emissiveMapTransform)),v.specularMap&&(_.specularMap.value=v.specularMap,n(v.specularMap,_.specularMapTransform)),v.alphaTest>0&&(_.alphaTest.value=v.alphaTest);const w=t.get(v).envMap;if(w&&(_.envMap.value=w,_.flipEnvMap.value=w.isCubeTexture&&w.isRenderTargetTexture===!1?-1:1,_.reflectivity.value=v.reflectivity,_.ior.value=v.ior,_.refractionRatio.value=v.refractionRatio),v.lightMap){_.lightMap.value=v.lightMap;const M=e._useLegacyLights===!0?Math.PI:1;_.lightMapIntensity.value=v.lightMapIntensity*M,n(v.lightMap,_.lightMapTransform)}v.aoMap&&(_.aoMap.value=v.aoMap,_.aoMapIntensity.value=v.aoMapIntensity,n(v.aoMap,_.aoMapTransform))}function o(_,v){_.diffuse.value.copy(v.color),_.opacity.value=v.opacity,v.map&&(_.map.value=v.map,n(v.map,_.mapTransform))}function l(_,v){_.dashSize.value=v.dashSize,_.totalSize.value=v.dashSize+v.gapSize,_.scale.value=v.scale}function h(_,v,w,M){_.diffuse.value.copy(v.color),_.opacity.value=v.opacity,_.size.value=v.size*w,_.scale.value=M*.5,v.map&&(_.map.value=v.map,n(v.map,_.uvTransform)),v.alphaMap&&(_.alphaMap.value=v.alphaMap,n(v.alphaMap,_.alphaMapTransform)),v.alphaTest>0&&(_.alphaTest.value=v.alphaTest)}function u(_,v){_.diffuse.value.copy(v.color),_.opacity.value=v.opacity,_.rotation.value=v.rotation,v.map&&(_.map.value=v.map,n(v.map,_.mapTransform)),v.alphaMap&&(_.alphaMap.value=v.alphaMap,n(v.alphaMap,_.alphaMapTransform)),v.alphaTest>0&&(_.alphaTest.value=v.alphaTest)}function f(_,v){_.specular.value.copy(v.specular),_.shininess.value=Math.max(v.shininess,1e-4)}function d(_,v){v.gradientMap&&(_.gradientMap.value=v.gradientMap)}function p(_,v){_.metalness.value=v.metalness,v.metalnessMap&&(_.metalnessMap.value=v.metalnessMap,n(v.metalnessMap,_.metalnessMapTransform)),_.roughness.value=v.roughness,v.roughnessMap&&(_.roughnessMap.value=v.roughnessMap,n(v.roughnessMap,_.roughnessMapTransform)),t.get(v).envMap&&(_.envMapIntensity.value=v.envMapIntensity)}function g(_,v,w){_.ior.value=v.ior,v.sheen>0&&(_.sheenColor.value.copy(v.sheenColor).multiplyScalar(v.sheen),_.sheenRoughness.value=v.sheenRoughness,v.sheenColorMap&&(_.sheenColorMap.value=v.sheenColorMap,n(v.sheenColorMap,_.sheenColorMapTransform)),v.sheenRoughnessMap&&(_.sheenRoughnessMap.value=v.sheenRoughnessMap,n(v.sheenRoughnessMap,_.sheenRoughnessMapTransform))),v.clearcoat>0&&(_.clearcoat.value=v.clearcoat,_.clearcoatRoughness.value=v.clearcoatRoughness,v.clearcoatMap&&(_.clearcoatMap.value=v.clearcoatMap,n(v.clearcoatMap,_.clearcoatMapTransform)),v.clearcoatRoughnessMap&&(_.clearcoatRoughnessMap.value=v.clearcoatRoughnessMap,n(v.clearcoatRoughnessMap,_.clearcoatRoughnessMapTransform)),v.clearcoatNormalMap&&(_.clearcoatNormalMap.value=v.clearcoatNormalMap,n(v.clearcoatNormalMap,_.clearcoatNormalMapTransform),_.clearcoatNormalScale.value.copy(v.clearcoatNormalScale),v.side===ti&&_.clearcoatNormalScale.value.negate())),v.iridescence>0&&(_.iridescence.value=v.iridescence,_.iridescenceIOR.value=v.iridescenceIOR,_.iridescenceThicknessMinimum.value=v.iridescenceThicknessRange[0],_.iridescenceThicknessMaximum.value=v.iridescenceThicknessRange[1],v.iridescenceMap&&(_.iridescenceMap.value=v.iridescenceMap,n(v.iridescenceMap,_.iridescenceMapTransform)),v.iridescenceThicknessMap&&(_.iridescenceThicknessMap.value=v.iridescenceThicknessMap,n(v.iridescenceThicknessMap,_.iridescenceThicknessMapTransform))),v.transmission>0&&(_.transmission.value=v.transmission,_.transmissionSamplerMap.value=w.texture,_.transmissionSamplerSize.value.set(w.width,w.height),v.transmissionMap&&(_.transmissionMap.value=v.transmissionMap,n(v.transmissionMap,_.transmissionMapTransform)),_.thickness.value=v.thickness,v.thicknessMap&&(_.thicknessMap.value=v.thicknessMap,n(v.thicknessMap,_.thicknessMapTransform)),_.attenuationDistance.value=v.attenuationDistance,_.attenuationColor.value.copy(v.attenuationColor)),v.anisotropy>0&&(_.anisotropyVector.value.set(v.anisotropy*Math.cos(v.anisotropyRotation),v.anisotropy*Math.sin(v.anisotropyRotation)),v.anisotropyMap&&(_.anisotropyMap.value=v.anisotropyMap,n(v.anisotropyMap,_.anisotropyMapTransform))),_.specularIntensity.value=v.specularIntensity,_.specularColor.value.copy(v.specularColor),v.specularColorMap&&(_.specularColorMap.value=v.specularColorMap,n(v.specularColorMap,_.specularColorMapTransform)),v.specularIntensityMap&&(_.specularIntensityMap.value=v.specularIntensityMap,n(v.specularIntensityMap,_.specularIntensityMapTransform))}function x(_,v){v.matcap&&(_.matcap.value=v.matcap)}function y(_,v){const w=t.get(v).light;_.referencePosition.value.setFromMatrixPosition(w.matrixWorld),_.nearDistance.value=w.shadow.camera.near,_.farDistance.value=w.shadow.camera.far}return{refreshFogUniforms:i,refreshMaterialUniforms:r}}function _2(e,t,n,i){let r={},a={},o=[];const l=n.isWebGL2?e.getParameter(e.MAX_UNIFORM_BUFFER_BINDINGS):0;function h(w,M){const T=M.program;i.uniformBlockBinding(w,T)}function u(w,M){let T=r[w.id];T===void 0&&(x(w),T=f(w),r[w.id]=T,w.addEventListener("dispose",_));const A=M.program;i.updateUBOMapping(w,A);const P=t.render.frame;a[w.id]!==P&&(p(w),a[w.id]=P)}function f(w){const M=d();w.__bindingPointIndex=M;const T=e.createBuffer(),A=w.__size,P=w.usage;return e.bindBuffer(e.UNIFORM_BUFFER,T),e.bufferData(e.UNIFORM_BUFFER,A,P),e.bindBuffer(e.UNIFORM_BUFFER,null),e.bindBufferBase(e.UNIFORM_BUFFER,M,T),T}function d(){for(let w=0;w<l;w++)if(o.indexOf(w)===-1)return o.push(w),w;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function p(w){const M=r[w.id],T=w.uniforms,A=w.__cache;e.bindBuffer(e.UNIFORM_BUFFER,M);for(let P=0,b=T.length;P<b;P++){const U=T[P];if(g(U,P,A)===!0){const S=U.__offset,R=Array.isArray(U.value)?U.value:[U.value];let V=0;for(let W=0;W<R.length;W++){const L=R[W],I=y(L);typeof L=="number"?(U.__data[0]=L,e.bufferSubData(e.UNIFORM_BUFFER,S+V,U.__data)):L.isMatrix3?(U.__data[0]=L.elements[0],U.__data[1]=L.elements[1],U.__data[2]=L.elements[2],U.__data[3]=L.elements[0],U.__data[4]=L.elements[3],U.__data[5]=L.elements[4],U.__data[6]=L.elements[5],U.__data[7]=L.elements[0],U.__data[8]=L.elements[6],U.__data[9]=L.elements[7],U.__data[10]=L.elements[8],U.__data[11]=L.elements[0]):(L.toArray(U.__data,V),V+=I.storage/Float32Array.BYTES_PER_ELEMENT)}e.bufferSubData(e.UNIFORM_BUFFER,S,U.__data)}}e.bindBuffer(e.UNIFORM_BUFFER,null)}function g(w,M,T){const A=w.value;if(T[M]===void 0){if(typeof A=="number")T[M]=A;else{const P=Array.isArray(A)?A:[A],b=[];for(let U=0;U<P.length;U++)b.push(P[U].clone());T[M]=b}return!0}else if(typeof A=="number"){if(T[M]!==A)return T[M]=A,!0}else{const P=Array.isArray(T[M])?T[M]:[T[M]],b=Array.isArray(A)?A:[A];for(let U=0;U<P.length;U++){const S=P[U];if(S.equals(b[U])===!1)return S.copy(b[U]),!0}}return!1}function x(w){const M=w.uniforms;let T=0;const A=16;let P=0;for(let b=0,U=M.length;b<U;b++){const S=M[b],R={boundary:0,storage:0},V=Array.isArray(S.value)?S.value:[S.value];for(let W=0,L=V.length;W<L;W++){const I=V[W],z=y(I);R.boundary+=z.boundary,R.storage+=z.storage}if(S.__data=new Float32Array(R.storage/Float32Array.BYTES_PER_ELEMENT),S.__offset=T,b>0){P=T%A;const W=A-P;P!==0&&W-R.boundary<0&&(T+=A-P,S.__offset=T)}T+=R.storage}return P=T%A,P>0&&(T+=A-P),w.__size=T,w.__cache={},this}function y(w){const M={boundary:0,storage:0};return typeof w=="number"?(M.boundary=4,M.storage=4):w.isVector2?(M.boundary=8,M.storage=8):w.isVector3||w.isColor?(M.boundary=16,M.storage=12):w.isVector4?(M.boundary=16,M.storage=16):w.isMatrix3?(M.boundary=48,M.storage=48):w.isMatrix4?(M.boundary=64,M.storage=64):w.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",w),M}function _(w){const M=w.target;M.removeEventListener("dispose",_);const T=o.indexOf(M.__bindingPointIndex);o.splice(T,1),e.deleteBuffer(r[M.id]),delete r[M.id],delete a[M.id]}function v(){for(const w in r)e.deleteBuffer(r[w]);o=[],r={},a={}}return{bind:h,update:u,dispose:v}}let X0=class{constructor(t={}){const{canvas:n=cA(),context:i=null,depth:r=!0,stencil:a=!0,alpha:o=!1,antialias:l=!1,premultipliedAlpha:h=!0,preserveDrawingBuffer:u=!1,powerPreference:f="default",failIfMajorPerformanceCaveat:d=!1}=t;this.isWebGLRenderer=!0;let p;i!==null?p=i.getContextAttributes().alpha:p=o;const g=new Uint32Array(4),x=new Int32Array(4);let y=null,_=null;const v=[],w=[];this.domElement=n,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputColorSpace=sn,this._useLegacyLights=!1,this.toneMapping=ha,this.toneMappingExposure=1;const M=this;let T=!1,A=0,P=0,b=null,U=-1,S=null;const R=new hn,V=new hn;let W=null;const L=new Ht(0);let I=0,z=n.width,X=n.height,Y=1,$=null,ne=null;const ae=new hn(0,0,z,X),j=new hn(0,0,z,X);let K=!1;const Q=new Tp;let he=!1,me=!1,ge=null;const Pe=new Cn,we=new Wt,Se=new ce,ht={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function J(){return b===null?Y:1}let se=i;function Qe(H,de){for(let ye=0;ye<H.length;ye++){const pe=H[ye],Me=n.getContext(pe,de);if(Me!==null)return Me}return null}try{const H={alpha:!0,depth:r,stencil:a,antialias:l,premultipliedAlpha:h,preserveDrawingBuffer:u,powerPreference:f,failIfMajorPerformanceCaveat:d};if("setAttribute"in n&&n.setAttribute("data-engine",`three.js r${wp}`),n.addEventListener("webglcontextlost",Xe,!1),n.addEventListener("webglcontextrestored",fe,!1),n.addEventListener("webglcontextcreationerror",Oe,!1),se===null){const de=["webgl2","webgl","experimental-webgl"];if(M.isWebGL1Renderer===!0&&de.shift(),se=Qe(de,H),se===null)throw Qe(de)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}typeof WebGLRenderingContext<"u"&&se instanceof WebGLRenderingContext&&console.warn("THREE.WebGLRenderer: WebGL 1 support was deprecated in r153 and will be removed in r163."),se.getShaderPrecisionFormat===void 0&&(se.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(H){throw console.error("THREE.WebGLRenderer: "+H.message),H}let ze,Re,et,qe,We,tt,ot,pt,Dt,G,N,ue,Ce,be,Fe,st,Ge,ve,ie,Ue,Ne,Ve,Le,rt;function Et(){ze=new RC(se),Re=new MC(se,ze,t),ze.init(Re),Ve=new f2(se,ze,Re),et=new c2(se,ze,Re),qe=new PC(se),We=new jP,tt=new u2(se,ze,et,We,Re,Ve,qe),ot=new wC(M),pt=new AC(M),Dt=new zA(se,Re),Le=new xC(se,ze,Dt,Re),G=new LC(se,Dt,qe,Le),N=new FC(se,G,Dt,qe),ie=new IC(se,Re,tt),st=new EC(We),ue=new $P(M,ot,pt,ze,Re,Le,st),Ce=new g2(M,We),be=new KP,Fe=new i2(ze,Re),ve=new _C(M,ot,pt,et,N,p,h),Ge=new l2(M,N,Re),rt=new _2(se,qe,Re,et),Ue=new yC(se,ze,qe,Re),Ne=new CC(se,ze,qe,Re),qe.programs=ue.programs,M.capabilities=Re,M.extensions=ze,M.properties=We,M.renderLists=be,M.shadowMap=Ge,M.state=et,M.info=qe}Et();const ee=new v2(M,se);this.xr=ee,this.getContext=function(){return se},this.getContextAttributes=function(){return se.getContextAttributes()},this.forceContextLoss=function(){const H=ze.get("WEBGL_lose_context");H&&H.loseContext()},this.forceContextRestore=function(){const H=ze.get("WEBGL_lose_context");H&&H.restoreContext()},this.getPixelRatio=function(){return Y},this.setPixelRatio=function(H){H!==void 0&&(Y=H,this.setSize(z,X,!1))},this.getSize=function(H){return H.set(z,X)},this.setSize=function(H,de,ye=!0){if(ee.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}z=H,X=de,n.width=Math.floor(H*Y),n.height=Math.floor(de*Y),ye===!0&&(n.style.width=H+"px",n.style.height=de+"px"),this.setViewport(0,0,H,de)},this.getDrawingBufferSize=function(H){return H.set(z*Y,X*Y).floor()},this.setDrawingBufferSize=function(H,de,ye){z=H,X=de,Y=ye,n.width=Math.floor(H*ye),n.height=Math.floor(de*ye),this.setViewport(0,0,H,de)},this.getCurrentViewport=function(H){return H.copy(R)},this.getViewport=function(H){return H.copy(ae)},this.setViewport=function(H,de,ye,pe){H.isVector4?ae.set(H.x,H.y,H.z,H.w):ae.set(H,de,ye,pe),et.viewport(R.copy(ae).multiplyScalar(Y).floor())},this.getScissor=function(H){return H.copy(j)},this.setScissor=function(H,de,ye,pe){H.isVector4?j.set(H.x,H.y,H.z,H.w):j.set(H,de,ye,pe),et.scissor(V.copy(j).multiplyScalar(Y).floor())},this.getScissorTest=function(){return K},this.setScissorTest=function(H){et.setScissorTest(K=H)},this.setOpaqueSort=function(H){$=H},this.setTransparentSort=function(H){ne=H},this.getClearColor=function(H){return H.copy(ve.getClearColor())},this.setClearColor=function(){ve.setClearColor.apply(ve,arguments)},this.getClearAlpha=function(){return ve.getClearAlpha()},this.setClearAlpha=function(){ve.setClearAlpha.apply(ve,arguments)},this.clear=function(H=!0,de=!0,ye=!0){let pe=0;if(H){let Me=!1;if(b!==null){const nt=b.texture.format;Me=nt===v0||nt===m0||nt===p0}if(Me){const nt=b.texture.type,C=nt===fa||nt===oa||nt===bp||nt===Va||nt===f0||nt===d0,B=ve.getClearColor(),Z=ve.getClearAlpha(),xe=B.r,re=B.g,Be=B.b;C?(g[0]=xe,g[1]=re,g[2]=Be,g[3]=Z,se.clearBufferuiv(se.COLOR,0,g)):(x[0]=xe,x[1]=re,x[2]=Be,x[3]=Z,se.clearBufferiv(se.COLOR,0,x))}else pe|=se.COLOR_BUFFER_BIT}de&&(pe|=se.DEPTH_BUFFER_BIT),ye&&(pe|=se.STENCIL_BUFFER_BIT),se.clear(pe)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){n.removeEventListener("webglcontextlost",Xe,!1),n.removeEventListener("webglcontextrestored",fe,!1),n.removeEventListener("webglcontextcreationerror",Oe,!1),be.dispose(),Fe.dispose(),We.dispose(),ot.dispose(),pt.dispose(),N.dispose(),Le.dispose(),rt.dispose(),ue.dispose(),ee.dispose(),ee.removeEventListener("sessionstart",Xt),ee.removeEventListener("sessionend",jn),ge&&(ge.dispose(),ge=null),xn.stop()};function Xe(H){H.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),T=!0}function fe(){console.log("THREE.WebGLRenderer: Context Restored."),T=!1;const H=qe.autoReset,de=Ge.enabled,ye=Ge.autoUpdate,pe=Ge.needsUpdate,Me=Ge.type;Et(),qe.autoReset=H,Ge.enabled=de,Ge.autoUpdate=ye,Ge.needsUpdate=pe,Ge.type=Me}function Oe(H){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",H.statusMessage)}function Ye(H){const de=H.target;de.removeEventListener("dispose",Ye),Ft(de)}function Ft(H){qt(H),We.remove(H)}function qt(H){const de=We.get(H).programs;de!==void 0&&(de.forEach(function(ye){ue.releaseProgram(ye)}),H.isShaderMaterial&&ue.releaseShaderCache(H))}this.renderBufferDirect=function(H,de,ye,pe,Me,nt){de===null&&(de=ht);const C=Me.isMesh&&Me.matrixWorld.determinant()<0,B=ol(H,de,ye,pe,Me);et.setMaterial(pe,C);let Z=ye.index,xe=1;if(pe.wireframe===!0){if(Z=G.getWireframeAttribute(ye),Z===void 0)return;xe=2}const re=ye.drawRange,Be=ye.attributes.position;let ct=re.start*xe,He=(re.start+re.count)*xe;nt!==null&&(ct=Math.max(ct,nt.start*xe),He=Math.min(He,(nt.start+nt.count)*xe)),Z!==null?(ct=Math.max(ct,0),He=Math.min(He,Z.count)):Be!=null&&(ct=Math.max(ct,0),He=Math.min(He,Be.count));const mt=He-ct;if(mt<0||mt===1/0)return;Le.setup(Me,pe,B,ye,Z);let lt,ke=Ue;if(Z!==null&&(lt=Dt.get(Z),ke=Ne,ke.setIndex(lt)),Me.isMesh)pe.wireframe===!0?(et.setLineWidth(pe.wireframeLinewidth*J()),ke.setMode(se.LINES)):ke.setMode(se.TRIANGLES);else if(Me.isLine){let De=pe.linewidth;De===void 0&&(De=1),et.setLineWidth(De*J()),Me.isLineSegments?ke.setMode(se.LINES):Me.isLineLoop?ke.setMode(se.LINE_LOOP):ke.setMode(se.LINE_STRIP)}else Me.isPoints?ke.setMode(se.POINTS):Me.isSprite&&ke.setMode(se.TRIANGLES);if(Me.isInstancedMesh)ke.renderInstances(ct,mt,Me.count);else if(ye.isInstancedBufferGeometry){const De=ye._maxInstanceCount!==void 0?ye._maxInstanceCount:1/0,$t=Math.min(ye.instanceCount,De);ke.renderInstances(ct,mt,$t)}else ke.render(ct,mt)},this.compile=function(H,de){function ye(pe,Me,nt){pe.transparent===!0&&pe.side===cr&&pe.forceSinglePass===!1?(pe.side=ti,pe.needsUpdate=!0,Wr(pe,Me,nt),pe.side=da,pe.needsUpdate=!0,Wr(pe,Me,nt),pe.side=cr):Wr(pe,Me,nt)}_=Fe.get(H),_.init(),w.push(_),H.traverseVisible(function(pe){pe.isLight&&pe.layers.test(de.layers)&&(_.pushLight(pe),pe.castShadow&&_.pushShadow(pe))}),_.setupLights(M._useLegacyLights),H.traverse(function(pe){const Me=pe.material;if(Me)if(Array.isArray(Me))for(let nt=0;nt<Me.length;nt++){const C=Me[nt];ye(C,H,pe)}else ye(Me,H,pe)}),w.pop(),_=null};let Qt=null;function On(H){Qt&&Qt(H)}function Xt(){xn.stop()}function jn(){xn.start()}const xn=new z0;xn.setAnimationLoop(On),typeof self<"u"&&xn.setContext(self),this.setAnimationLoop=function(H){Qt=H,ee.setAnimationLoop(H),H===null?xn.stop():xn.start()},ee.addEventListener("sessionstart",Xt),ee.addEventListener("sessionend",jn),this.render=function(H,de){if(de!==void 0&&de.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(T===!0)return;H.matrixWorldAutoUpdate===!0&&H.updateMatrixWorld(),de.parent===null&&de.matrixWorldAutoUpdate===!0&&de.updateMatrixWorld(),ee.enabled===!0&&ee.isPresenting===!0&&(ee.cameraAutoUpdate===!0&&ee.updateCamera(de),de=ee.getCamera()),H.isScene===!0&&H.onBeforeRender(M,H,de,b),_=Fe.get(H,w.length),_.init(),w.push(_),Pe.multiplyMatrices(de.projectionMatrix,de.matrixWorldInverse),Q.setFromProjectionMatrix(Pe),me=this.localClippingEnabled,he=st.init(this.clippingPlanes,me),y=be.get(H,v.length),y.init(),v.push(y),Vr(H,de,0,M.sortObjects),y.finish(),M.sortObjects===!0&&y.sort($,ne),this.info.render.frame++,he===!0&&st.beginShadows();const ye=_.state.shadowsArray;if(Ge.render(ye,H,de),he===!0&&st.endShadows(),this.info.autoReset===!0&&this.info.reset(),ve.render(y,H),_.setupLights(M._useLegacyLights),de.isArrayCamera){const pe=de.cameras;for(let Me=0,nt=pe.length;Me<nt;Me++){const C=pe[Me];ya(y,H,C,C.viewport)}}else ya(y,H,de);b!==null&&(tt.updateMultisampleRenderTarget(b),tt.updateRenderTargetMipmap(b)),H.isScene===!0&&H.onAfterRender(M,H,de),Le.resetDefaultState(),U=-1,S=null,w.pop(),w.length>0?_=w[w.length-1]:_=null,v.pop(),v.length>0?y=v[v.length-1]:y=null};function Vr(H,de,ye,pe){if(H.visible===!1)return;if(H.layers.test(de.layers)){if(H.isGroup)ye=H.renderOrder;else if(H.isLOD)H.autoUpdate===!0&&H.update(de);else if(H.isLight)_.pushLight(H),H.castShadow&&_.pushShadow(H);else if(H.isSprite){if(!H.frustumCulled||Q.intersectsSprite(H)){pe&&Se.setFromMatrixPosition(H.matrixWorld).applyMatrix4(Pe);const C=N.update(H),B=H.material;B.visible&&y.push(H,C,B,ye,Se.z,null)}}else if((H.isMesh||H.isLine||H.isPoints)&&(!H.frustumCulled||Q.intersectsObject(H))){const C=N.update(H),B=H.material;if(pe&&(H.boundingSphere!==void 0?(H.boundingSphere===null&&H.computeBoundingSphere(),Se.copy(H.boundingSphere.center)):(C.boundingSphere===null&&C.computeBoundingSphere(),Se.copy(C.boundingSphere.center)),Se.applyMatrix4(H.matrixWorld).applyMatrix4(Pe)),Array.isArray(B)){const Z=C.groups;for(let xe=0,re=Z.length;xe<re;xe++){const Be=Z[xe],ct=B[Be.materialIndex];ct&&ct.visible&&y.push(H,C,ct,ye,Se.z,Be)}}else B.visible&&y.push(H,C,B,ye,Se.z,null)}}const nt=H.children;for(let C=0,B=nt.length;C<B;C++)Vr(nt[C],de,ye,pe)}function ya(H,de,ye,pe){const Me=H.opaque,nt=H.transmissive,C=H.transparent;_.setupLightsView(ye),he===!0&&st.setGlobalState(M.clippingPlanes,ye),nt.length>0&&Ma(Me,nt,de,ye),pe&&et.viewport(R.copy(pe)),Me.length>0&&kr(Me,de,ye),nt.length>0&&kr(nt,de,ye),C.length>0&&kr(C,de,ye),et.buffers.depth.setTest(!0),et.buffers.depth.setMask(!0),et.buffers.color.setMask(!0),et.setPolygonOffset(!1)}function Ma(H,de,ye,pe){const Me=Re.isWebGL2;ge===null&&(ge=new Za(1,1,{generateMipmaps:!0,type:ze.has("EXT_color_buffer_half_float")?zl:fa,minFilter:Bl,samples:Me?4:0})),M.getDrawingBufferSize(we),Me?ge.setSize(we.x,we.y):ge.setSize(qd(we.x),qd(we.y));const nt=M.getRenderTarget();M.setRenderTarget(ge),M.getClearColor(L),I=M.getClearAlpha(),I<1&&M.setClearColor(16777215,.5),M.clear();const C=M.toneMapping;M.toneMapping=ha,kr(H,ye,pe),tt.updateMultisampleRenderTarget(ge),tt.updateRenderTargetMipmap(ge);let B=!1;for(let Z=0,xe=de.length;Z<xe;Z++){const re=de[Z],Be=re.object,ct=re.geometry,He=re.material,mt=re.group;if(He.side===cr&&Be.layers.test(pe.layers)){const lt=He.side;He.side=ti,He.needsUpdate=!0,Es(Be,ye,pe,ct,He,mt),He.side=lt,He.needsUpdate=!0,B=!0}}B===!0&&(tt.updateMultisampleRenderTarget(ge),tt.updateRenderTargetMipmap(ge)),M.setRenderTarget(nt),M.setClearColor(L,I),M.toneMapping=C}function kr(H,de,ye){const pe=de.isScene===!0?de.overrideMaterial:null;for(let Me=0,nt=H.length;Me<nt;Me++){const C=H[Me],B=C.object,Z=C.geometry,xe=pe===null?C.material:pe,re=C.group;B.layers.test(ye.layers)&&Es(B,de,ye,Z,xe,re)}}function Es(H,de,ye,pe,Me,nt){H.onBeforeRender(M,de,ye,pe,Me,nt),H.modelViewMatrix.multiplyMatrices(ye.matrixWorldInverse,H.matrixWorld),H.normalMatrix.getNormalMatrix(H.modelViewMatrix),Me.onBeforeRender(M,de,ye,pe,H,nt),Me.transparent===!0&&Me.side===cr&&Me.forceSinglePass===!1?(Me.side=ti,Me.needsUpdate=!0,M.renderBufferDirect(ye,de,pe,Me,H,nt),Me.side=da,Me.needsUpdate=!0,M.renderBufferDirect(ye,de,pe,Me,H,nt),Me.side=cr):M.renderBufferDirect(ye,de,pe,Me,H,nt),H.onAfterRender(M,de,ye,pe,Me,nt)}function Wr(H,de,ye){de.isScene!==!0&&(de=ht);const pe=We.get(H),Me=_.state.lights,nt=_.state.shadowsArray,C=Me.state.version,B=ue.getParameters(H,Me.state,nt,de,ye),Z=ue.getProgramCacheKey(B);let xe=pe.programs;pe.environment=H.isMeshStandardMaterial?de.environment:null,pe.fog=de.fog,pe.envMap=(H.isMeshStandardMaterial?pt:ot).get(H.envMap||pe.environment),xe===void 0&&(H.addEventListener("dispose",Ye),xe=new Map,pe.programs=xe);let re=xe.get(Z);if(re!==void 0){if(pe.currentProgram===re&&pe.lightsStateVersion===C)return Ea(H,B),re}else B.uniforms=ue.getUniforms(H),H.onBuild(ye,B,M),H.onBeforeCompile(B,M),re=ue.acquireProgram(B,Z),xe.set(Z,re),pe.uniforms=B.uniforms;const Be=pe.uniforms;(!H.isShaderMaterial&&!H.isRawShaderMaterial||H.clipping===!0)&&(Be.clippingPlanes=st.uniform),Ea(H,B),pe.needsLights=ll(H),pe.lightsStateVersion=C,pe.needsLights&&(Be.ambientLightColor.value=Me.state.ambient,Be.lightProbe.value=Me.state.probe,Be.directionalLights.value=Me.state.directional,Be.directionalLightShadows.value=Me.state.directionalShadow,Be.spotLights.value=Me.state.spot,Be.spotLightShadows.value=Me.state.spotShadow,Be.rectAreaLights.value=Me.state.rectArea,Be.ltc_1.value=Me.state.rectAreaLTC1,Be.ltc_2.value=Me.state.rectAreaLTC2,Be.pointLights.value=Me.state.point,Be.pointLightShadows.value=Me.state.pointShadow,Be.hemisphereLights.value=Me.state.hemi,Be.directionalShadowMap.value=Me.state.directionalShadowMap,Be.directionalShadowMatrix.value=Me.state.directionalShadowMatrix,Be.spotShadowMap.value=Me.state.spotShadowMap,Be.spotLightMatrix.value=Me.state.spotLightMatrix,Be.spotLightMap.value=Me.state.spotLightMap,Be.pointShadowMap.value=Me.state.pointShadowMap,Be.pointShadowMatrix.value=Me.state.pointShadowMatrix);const ct=re.getUniforms(),He=Ku.seqWithValue(ct.seq,Be);return pe.currentProgram=re,pe.uniformsList=He,re}function Ea(H,de){const ye=We.get(H);ye.outputColorSpace=de.outputColorSpace,ye.instancing=de.instancing,ye.instancingColor=de.instancingColor,ye.skinning=de.skinning,ye.morphTargets=de.morphTargets,ye.morphNormals=de.morphNormals,ye.morphColors=de.morphColors,ye.morphTargetsCount=de.morphTargetsCount,ye.numClippingPlanes=de.numClippingPlanes,ye.numIntersection=de.numClipIntersection,ye.vertexAlphas=de.vertexAlphas,ye.vertexTangents=de.vertexTangents,ye.toneMapping=de.toneMapping}function ol(H,de,ye,pe,Me){de.isScene!==!0&&(de=ht),tt.resetTextureUnits();const nt=de.fog,C=pe.isMeshStandardMaterial?de.environment:null,B=b===null?M.outputColorSpace:b.isXRRenderTarget===!0?b.texture.colorSpace:hr,Z=(pe.isMeshStandardMaterial?pt:ot).get(pe.envMap||C),xe=pe.vertexColors===!0&&!!ye.attributes.color&&ye.attributes.color.itemSize===4,re=!!ye.attributes.tangent&&(!!pe.normalMap||pe.anisotropy>0),Be=!!ye.morphAttributes.position,ct=!!ye.morphAttributes.normal,He=!!ye.morphAttributes.color;let mt=ha;pe.toneMapped&&(b===null||b.isXRRenderTarget===!0)&&(mt=M.toneMapping);const lt=ye.morphAttributes.position||ye.morphAttributes.normal||ye.morphAttributes.color,ke=lt!==void 0?lt.length:0,De=We.get(pe),$t=_.state.lights;if(he===!0&&(me===!0||H!==S)){const dn=H===S&&pe.id===U;st.setState(pe,H,dn)}let yt=!1;pe.version===De.__version?(De.needsLights&&De.lightsStateVersion!==$t.state.version||De.outputColorSpace!==B||Me.isInstancedMesh&&De.instancing===!1||!Me.isInstancedMesh&&De.instancing===!0||Me.isSkinnedMesh&&De.skinning===!1||!Me.isSkinnedMesh&&De.skinning===!0||Me.isInstancedMesh&&De.instancingColor===!0&&Me.instanceColor===null||Me.isInstancedMesh&&De.instancingColor===!1&&Me.instanceColor!==null||De.envMap!==Z||pe.fog===!0&&De.fog!==nt||De.numClippingPlanes!==void 0&&(De.numClippingPlanes!==st.numPlanes||De.numIntersection!==st.numIntersection)||De.vertexAlphas!==xe||De.vertexTangents!==re||De.morphTargets!==Be||De.morphNormals!==ct||De.morphColors!==He||De.toneMapping!==mt||Re.isWebGL2===!0&&De.morphTargetsCount!==ke)&&(yt=!0):(yt=!0,De.__version=pe.version);let en=De.currentProgram;yt===!0&&(en=Wr(pe,de,Me));let Bn=!1,jt=!1,yn=!1;const $e=en.getUniforms(),rn=De.uniforms;if(et.useProgram(en.program)&&(Bn=!0,jt=!0,yn=!0),pe.id!==U&&(U=pe.id,jt=!0),Bn||S!==H){$e.setValue(se,"projectionMatrix",H.projectionMatrix),$e.setValue(se,"viewMatrix",H.matrixWorldInverse);const dn=$e.map.cameraPosition;dn!==void 0&&dn.setValue(se,Se.setFromMatrixPosition(H.matrixWorld)),Re.logarithmicDepthBuffer&&$e.setValue(se,"logDepthBufFC",2/(Math.log(H.far+1)/Math.LN2)),(pe.isMeshPhongMaterial||pe.isMeshToonMaterial||pe.isMeshLambertMaterial||pe.isMeshBasicMaterial||pe.isMeshStandardMaterial||pe.isShaderMaterial)&&$e.setValue(se,"isOrthographic",H.isOrthographicCamera===!0),S!==H&&(S=H,jt=!0,yn=!0)}if(Me.isSkinnedMesh){$e.setOptional(se,Me,"bindMatrix"),$e.setOptional(se,Me,"bindMatrixInverse");const dn=Me.skeleton;dn&&(Re.floatVertexTextures?(dn.boneTexture===null&&dn.computeBoneTexture(),$e.setValue(se,"boneTexture",dn.boneTexture,tt),$e.setValue(se,"boneTextureSize",dn.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const Un=ye.morphAttributes;if((Un.position!==void 0||Un.normal!==void 0||Un.color!==void 0&&Re.isWebGL2===!0)&&ie.update(Me,ye,en),(jt||De.receiveShadow!==Me.receiveShadow)&&(De.receiveShadow=Me.receiveShadow,$e.setValue(se,"receiveShadow",Me.receiveShadow)),pe.isMeshGouraudMaterial&&pe.envMap!==null&&(rn.envMap.value=Z,rn.flipEnvMap.value=Z.isCubeTexture&&Z.isRenderTargetTexture===!1?-1:1),jt&&($e.setValue(se,"toneMappingExposure",M.toneMappingExposure),De.needsLights&&ws(rn,yn),nt&&pe.fog===!0&&Ce.refreshFogUniforms(rn,nt),Ce.refreshMaterialUniforms(rn,pe,Y,X,ge),Ku.upload(se,De.uniformsList,rn,tt)),pe.isShaderMaterial&&pe.uniformsNeedUpdate===!0&&(Ku.upload(se,De.uniformsList,rn,tt),pe.uniformsNeedUpdate=!1),pe.isSpriteMaterial&&$e.setValue(se,"center",Me.center),$e.setValue(se,"modelViewMatrix",Me.modelViewMatrix),$e.setValue(se,"normalMatrix",Me.normalMatrix),$e.setValue(se,"modelMatrix",Me.matrixWorld),pe.isShaderMaterial||pe.isRawShaderMaterial){const dn=pe.uniformsGroups;for(let Xr=0,Ss=dn.length;Xr<Ss;Xr++)if(Re.isWebGL2){const wa=dn[Xr];rt.update(wa,en),rt.bind(wa,en)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return en}function ws(H,de){H.ambientLightColor.needsUpdate=de,H.lightProbe.needsUpdate=de,H.directionalLights.needsUpdate=de,H.directionalLightShadows.needsUpdate=de,H.pointLights.needsUpdate=de,H.pointLightShadows.needsUpdate=de,H.spotLights.needsUpdate=de,H.spotLightShadows.needsUpdate=de,H.rectAreaLights.needsUpdate=de,H.hemisphereLights.needsUpdate=de}function ll(H){return H.isMeshLambertMaterial||H.isMeshToonMaterial||H.isMeshPhongMaterial||H.isMeshStandardMaterial||H.isShadowMaterial||H.isShaderMaterial&&H.lights===!0}this.getActiveCubeFace=function(){return A},this.getActiveMipmapLevel=function(){return P},this.getRenderTarget=function(){return b},this.setRenderTargetTextures=function(H,de,ye){We.get(H.texture).__webglTexture=de,We.get(H.depthTexture).__webglTexture=ye;const pe=We.get(H);pe.__hasExternalTextures=!0,pe.__hasExternalTextures&&(pe.__autoAllocateDepthBuffer=ye===void 0,pe.__autoAllocateDepthBuffer||ze.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),pe.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(H,de){const ye=We.get(H);ye.__webglFramebuffer=de,ye.__useDefaultFramebuffer=de===void 0},this.setRenderTarget=function(H,de=0,ye=0){b=H,A=de,P=ye;let pe=!0,Me=null,nt=!1,C=!1;if(H){const Z=We.get(H);Z.__useDefaultFramebuffer!==void 0?(et.bindFramebuffer(se.FRAMEBUFFER,null),pe=!1):Z.__webglFramebuffer===void 0?tt.setupRenderTarget(H):Z.__hasExternalTextures&&tt.rebindTextures(H,We.get(H.texture).__webglTexture,We.get(H.depthTexture).__webglTexture);const xe=H.texture;(xe.isData3DTexture||xe.isDataArrayTexture||xe.isCompressedArrayTexture)&&(C=!0);const re=We.get(H).__webglFramebuffer;H.isWebGLCubeRenderTarget?(Array.isArray(re[de])?Me=re[de][ye]:Me=re[de],nt=!0):Re.isWebGL2&&H.samples>0&&tt.useMultisampledRTT(H)===!1?Me=We.get(H).__webglMultisampledFramebuffer:Array.isArray(re)?Me=re[ye]:Me=re,R.copy(H.viewport),V.copy(H.scissor),W=H.scissorTest}else R.copy(ae).multiplyScalar(Y).floor(),V.copy(j).multiplyScalar(Y).floor(),W=K;if(et.bindFramebuffer(se.FRAMEBUFFER,Me)&&Re.drawBuffers&&pe&&et.drawBuffers(H,Me),et.viewport(R),et.scissor(V),et.setScissorTest(W),nt){const Z=We.get(H.texture);se.framebufferTexture2D(se.FRAMEBUFFER,se.COLOR_ATTACHMENT0,se.TEXTURE_CUBE_MAP_POSITIVE_X+de,Z.__webglTexture,ye)}else if(C){const Z=We.get(H.texture),xe=de||0;se.framebufferTextureLayer(se.FRAMEBUFFER,se.COLOR_ATTACHMENT0,Z.__webglTexture,ye||0,xe)}U=-1},this.readRenderTargetPixels=function(H,de,ye,pe,Me,nt,C){if(!(H&&H.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let B=We.get(H).__webglFramebuffer;if(H.isWebGLCubeRenderTarget&&C!==void 0&&(B=B[C]),B){et.bindFramebuffer(se.FRAMEBUFFER,B);try{const Z=H.texture,xe=Z.format,re=Z.type;if(xe!==nr&&Ve.convert(xe)!==se.getParameter(se.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const Be=re===zl&&(ze.has("EXT_color_buffer_half_float")||Re.isWebGL2&&ze.has("EXT_color_buffer_float"));if(re!==fa&&Ve.convert(re)!==se.getParameter(se.IMPLEMENTATION_COLOR_READ_TYPE)&&!(re===la&&(Re.isWebGL2||ze.has("OES_texture_float")||ze.has("WEBGL_color_buffer_float")))&&!Be){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}de>=0&&de<=H.width-pe&&ye>=0&&ye<=H.height-Me&&se.readPixels(de,ye,pe,Me,Ve.convert(xe),Ve.convert(re),nt)}finally{const Z=b!==null?We.get(b).__webglFramebuffer:null;et.bindFramebuffer(se.FRAMEBUFFER,Z)}}},this.copyFramebufferToTexture=function(H,de,ye=0){const pe=Math.pow(2,-ye),Me=Math.floor(de.image.width*pe),nt=Math.floor(de.image.height*pe);tt.setTexture2D(de,0),se.copyTexSubImage2D(se.TEXTURE_2D,ye,0,0,H.x,H.y,Me,nt),et.unbindTexture()},this.copyTextureToTexture=function(H,de,ye,pe=0){const Me=de.image.width,nt=de.image.height,C=Ve.convert(ye.format),B=Ve.convert(ye.type);tt.setTexture2D(ye,0),se.pixelStorei(se.UNPACK_FLIP_Y_WEBGL,ye.flipY),se.pixelStorei(se.UNPACK_PREMULTIPLY_ALPHA_WEBGL,ye.premultiplyAlpha),se.pixelStorei(se.UNPACK_ALIGNMENT,ye.unpackAlignment),de.isDataTexture?se.texSubImage2D(se.TEXTURE_2D,pe,H.x,H.y,Me,nt,C,B,de.image.data):de.isCompressedTexture?se.compressedTexSubImage2D(se.TEXTURE_2D,pe,H.x,H.y,de.mipmaps[0].width,de.mipmaps[0].height,C,de.mipmaps[0].data):se.texSubImage2D(se.TEXTURE_2D,pe,H.x,H.y,C,B,de.image),pe===0&&ye.generateMipmaps&&se.generateMipmap(se.TEXTURE_2D),et.unbindTexture()},this.copyTextureToTexture3D=function(H,de,ye,pe,Me=0){if(M.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const nt=H.max.x-H.min.x+1,C=H.max.y-H.min.y+1,B=H.max.z-H.min.z+1,Z=Ve.convert(pe.format),xe=Ve.convert(pe.type);let re;if(pe.isData3DTexture)tt.setTexture3D(pe,0),re=se.TEXTURE_3D;else if(pe.isDataArrayTexture)tt.setTexture2DArray(pe,0),re=se.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}se.pixelStorei(se.UNPACK_FLIP_Y_WEBGL,pe.flipY),se.pixelStorei(se.UNPACK_PREMULTIPLY_ALPHA_WEBGL,pe.premultiplyAlpha),se.pixelStorei(se.UNPACK_ALIGNMENT,pe.unpackAlignment);const Be=se.getParameter(se.UNPACK_ROW_LENGTH),ct=se.getParameter(se.UNPACK_IMAGE_HEIGHT),He=se.getParameter(se.UNPACK_SKIP_PIXELS),mt=se.getParameter(se.UNPACK_SKIP_ROWS),lt=se.getParameter(se.UNPACK_SKIP_IMAGES),ke=ye.isCompressedTexture?ye.mipmaps[0]:ye.image;se.pixelStorei(se.UNPACK_ROW_LENGTH,ke.width),se.pixelStorei(se.UNPACK_IMAGE_HEIGHT,ke.height),se.pixelStorei(se.UNPACK_SKIP_PIXELS,H.min.x),se.pixelStorei(se.UNPACK_SKIP_ROWS,H.min.y),se.pixelStorei(se.UNPACK_SKIP_IMAGES,H.min.z),ye.isDataTexture||ye.isData3DTexture?se.texSubImage3D(re,Me,de.x,de.y,de.z,nt,C,B,Z,xe,ke.data):ye.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),se.compressedTexSubImage3D(re,Me,de.x,de.y,de.z,nt,C,B,Z,ke.data)):se.texSubImage3D(re,Me,de.x,de.y,de.z,nt,C,B,Z,xe,ke),se.pixelStorei(se.UNPACK_ROW_LENGTH,Be),se.pixelStorei(se.UNPACK_IMAGE_HEIGHT,ct),se.pixelStorei(se.UNPACK_SKIP_PIXELS,He),se.pixelStorei(se.UNPACK_SKIP_ROWS,mt),se.pixelStorei(se.UNPACK_SKIP_IMAGES,lt),Me===0&&pe.generateMipmaps&&se.generateMipmap(re),et.unbindTexture()},this.initTexture=function(H){H.isCubeTexture?tt.setTextureCube(H,0):H.isData3DTexture?tt.setTexture3D(H,0):H.isDataArrayTexture||H.isCompressedArrayTexture?tt.setTexture2DArray(H,0):tt.setTexture2D(H,0),et.unbindTexture()},this.resetState=function(){A=0,P=0,b=null,et.reset(),Le.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Ir}get physicallyCorrectLights(){return console.warn("THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),!this.useLegacyLights}set physicallyCorrectLights(t){console.warn("THREE.WebGLRenderer: The property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),this.useLegacyLights=!t}get outputEncoding(){return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace===sn?Wa:g0}set outputEncoding(t){console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace=t===Wa?sn:hr}get useLegacyLights(){return console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights}set useLegacyLights(t){console.warn("THREE.WebGLRenderer: The property .useLegacyLights has been deprecated. Migrate your lighting according to the following guide: https://discourse.threejs.org/t/updates-to-lighting-in-three-js-r155/53733."),this._useLegacyLights=t}};class x2 extends X0{}x2.prototype.isWebGL1Renderer=!0;let y2=class extends Wi{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,n){return super.copy(t,n),t.background!==null&&(this.background=t.background.clone()),t.environment!==null&&(this.environment=t.environment.clone()),t.fog!==null&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,this.backgroundIntensity=t.backgroundIntensity,t.overrideMaterial!==null&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const n=super.toJSON(t);return this.fog!==null&&(n.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(n.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(n.object.backgroundIntensity=this.backgroundIntensity),n}},Rp=class extends el{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Ht(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}};const V_=new ce,k_=new ce,W_=new Cn,Ud=new A0,Yu=new Ih;let Lp=class extends Wi{constructor(t=new gr,n=new Rp){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=n,this.updateMorphTargets()}copy(t,n){return super.copy(t,n),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.index===null){const n=t.attributes.position,i=[0];for(let r=1,a=n.count;r<a;r++)V_.fromBufferAttribute(n,r-1),k_.fromBufferAttribute(n,r),i[r]=i[r-1],i[r]+=V_.distanceTo(k_);t.setAttribute("lineDistance",new ni(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,n){const i=this.geometry,r=this.matrixWorld,a=t.params.Line.threshold,o=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),Yu.copy(i.boundingSphere),Yu.applyMatrix4(r),Yu.radius+=a,t.ray.intersectsSphere(Yu)===!1)return;W_.copy(r).invert(),Ud.copy(t.ray).applyMatrix4(W_);const l=a/((this.scale.x+this.scale.y+this.scale.z)/3),h=l*l,u=new ce,f=new ce,d=new ce,p=new ce,g=this.isLineSegments?2:1,x=i.index,_=i.attributes.position;if(x!==null){const v=Math.max(0,o.start),w=Math.min(x.count,o.start+o.count);for(let M=v,T=w-1;M<T;M+=g){const A=x.getX(M),P=x.getX(M+1);if(u.fromBufferAttribute(_,A),f.fromBufferAttribute(_,P),Ud.distanceSqToSegment(u,f,p,d)>h)continue;p.applyMatrix4(this.matrixWorld);const U=t.ray.origin.distanceTo(p);U<t.near||U>t.far||n.push({distance:U,point:d.clone().applyMatrix4(this.matrixWorld),index:M,face:null,faceIndex:null,object:this})}}else{const v=Math.max(0,o.start),w=Math.min(_.count,o.start+o.count);for(let M=v,T=w-1;M<T;M+=g){if(u.fromBufferAttribute(_,M),f.fromBufferAttribute(_,M+1),Ud.distanceSqToSegment(u,f,p,d)>h)continue;p.applyMatrix4(this.matrixWorld);const P=t.ray.origin.distanceTo(p);P<t.near||P>t.far||n.push({distance:P,point:d.clone().applyMatrix4(this.matrixWorld),index:M,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const n=this.geometry.morphAttributes,i=Object.keys(n);if(i.length>0){const r=n[i[0]];if(r!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let a=0,o=r.length;a<o;a++){const l=r[a].name||String(a);this.morphTargetInfluences.push(0),this.morphTargetDictionary[l]=a}}}}},M2=class Y0 extends gr{constructor(t=1,n=1,i=1,r=32,a=1,o=!1,l=0,h=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:n,height:i,radialSegments:r,heightSegments:a,openEnded:o,thetaStart:l,thetaLength:h};const u=this;r=Math.floor(r),a=Math.floor(a);const f=[],d=[],p=[],g=[];let x=0;const y=[],_=i/2;let v=0;w(),o===!1&&(t>0&&M(!0),n>0&&M(!1)),this.setIndex(f),this.setAttribute("position",new ni(d,3)),this.setAttribute("normal",new ni(p,3)),this.setAttribute("uv",new ni(g,2));function w(){const T=new ce,A=new ce;let P=0;const b=(n-t)/i;for(let U=0;U<=a;U++){const S=[],R=U/a,V=R*(n-t)+t;for(let W=0;W<=r;W++){const L=W/r,I=L*h+l,z=Math.sin(I),X=Math.cos(I);A.x=V*z,A.y=-R*i+_,A.z=V*X,d.push(A.x,A.y,A.z),T.set(z,b,X).normalize(),p.push(T.x,T.y,T.z),g.push(L,1-R),S.push(x++)}y.push(S)}for(let U=0;U<r;U++)for(let S=0;S<a;S++){const R=y[S][U],V=y[S+1][U],W=y[S+1][U+1],L=y[S][U+1];f.push(R,V,L),f.push(V,W,L),P+=6}u.addGroup(v,P,0),v+=P}function M(T){const A=x,P=new Wt,b=new ce;let U=0;const S=T===!0?t:n,R=T===!0?1:-1;for(let W=1;W<=r;W++)d.push(0,_*R,0),p.push(0,R,0),g.push(.5,.5),x++;const V=x;for(let W=0;W<=r;W++){const I=W/r*h+l,z=Math.cos(I),X=Math.sin(I);b.x=S*X,b.y=_*R,b.z=S*z,d.push(b.x,b.y,b.z),p.push(0,R,0),P.x=z*.5+.5,P.y=X*.5*R+.5,g.push(P.x,P.y),x++}for(let W=0;W<r;W++){const L=A+W,I=V+W;T===!0?f.push(I,I+1,L):f.push(I+1,I,L),U+=3}u.addGroup(v,U,T===!0?1:2),v+=U}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Y0(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}},Oh=class q0 extends gr{constructor(t=1,n=32,i=16,r=0,a=Math.PI*2,o=0,l=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:n,heightSegments:i,phiStart:r,phiLength:a,thetaStart:o,thetaLength:l},n=Math.max(3,Math.floor(n)),i=Math.max(2,Math.floor(i));const h=Math.min(o+l,Math.PI);let u=0;const f=[],d=new ce,p=new ce,g=[],x=[],y=[],_=[];for(let v=0;v<=i;v++){const w=[],M=v/i;let T=0;v===0&&o===0?T=.5/n:v===i&&h===Math.PI&&(T=-.5/n);for(let A=0;A<=n;A++){const P=A/n;d.x=-t*Math.cos(r+P*a)*Math.sin(o+M*l),d.y=t*Math.cos(o+M*l),d.z=t*Math.sin(r+P*a)*Math.sin(o+M*l),x.push(d.x,d.y,d.z),p.copy(d).normalize(),y.push(p.x,p.y,p.z),_.push(P+T,1-M),w.push(u++)}f.push(w)}for(let v=0;v<i;v++)for(let w=0;w<n;w++){const M=f[v][w+1],T=f[v][w],A=f[v+1][w],P=f[v+1][w+1];(v!==0||o>0)&&g.push(M,T,P),(v!==i-1||h<Math.PI)&&g.push(T,A,P)}this.setIndex(g),this.setAttribute("position",new ni(x,3)),this.setAttribute("normal",new ni(y,3)),this.setAttribute("uv",new ni(_,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new q0(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}},E2=class extends el{constructor(t){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new Ht(16777215),this.specular=new Ht(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Ht(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=_0,this.normalScale=new Wt(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Sp,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}};const X_={enabled:!1,files:{},add:function(e,t){this.enabled!==!1&&(this.files[e]=t)},get:function(e){if(this.enabled!==!1)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};let w2=class{constructor(t,n,i){const r=this;let a=!1,o=0,l=0,h;const u=[];this.onStart=void 0,this.onLoad=t,this.onProgress=n,this.onError=i,this.itemStart=function(f){l++,a===!1&&r.onStart!==void 0&&r.onStart(f,o,l),a=!0},this.itemEnd=function(f){o++,r.onProgress!==void 0&&r.onProgress(f,o,l),o===l&&(a=!1,r.onLoad!==void 0&&r.onLoad())},this.itemError=function(f){r.onError!==void 0&&r.onError(f)},this.resolveURL=function(f){return h?h(f):f},this.setURLModifier=function(f){return h=f,this},this.addHandler=function(f,d){return u.push(f,d),this},this.removeHandler=function(f){const d=u.indexOf(f);return d!==-1&&u.splice(d,2),this},this.getHandler=function(f){for(let d=0,p=u.length;d<p;d+=2){const g=u[d],x=u[d+1];if(g.global&&(g.lastIndex=0),g.test(f))return x}return null}}};const S2=new w2;let Cp=class{constructor(t){this.manager=t!==void 0?t:S2,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,n){const i=this;return new Promise(function(r,a){i.load(t,r,n,a)})}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}};Cp.DEFAULT_MATERIAL_NAME="__DEFAULT";let b2=class extends Cp{constructor(t){super(t)}load(t,n,i,r){this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const a=this,o=X_.get(t);if(o!==void 0)return a.manager.itemStart(t),setTimeout(function(){n&&n(o),a.manager.itemEnd(t)},0),o;const l=Gl("img");function h(){f(),X_.add(t,this),n&&n(this),a.manager.itemEnd(t)}function u(d){f(),r&&r(d),a.manager.itemError(t),a.manager.itemEnd(t)}function f(){l.removeEventListener("load",h,!1),l.removeEventListener("error",u,!1)}return l.addEventListener("load",h,!1),l.addEventListener("error",u,!1),t.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(l.crossOrigin=this.crossOrigin),a.manager.itemStart(t),l.src=t,l}},T2=class extends Cp{constructor(t){super(t)}load(t,n,i,r){const a=new vr,o=new b2(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(t,function(l){a.image=l,a.needsUpdate=!0,n!==void 0&&n(a)},i,r),a}},A2=class extends Wi{constructor(t,n=1){super(),this.isLight=!0,this.type="Light",this.color=new Ht(t),this.intensity=n}dispose(){}copy(t,n){return super.copy(t,n),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const n=super.toJSON(t);return n.object.color=this.color.getHex(),n.object.intensity=this.intensity,this.groundColor!==void 0&&(n.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(n.object.distance=this.distance),this.angle!==void 0&&(n.object.angle=this.angle),this.decay!==void 0&&(n.object.decay=this.decay),this.penumbra!==void 0&&(n.object.penumbra=this.penumbra),this.shadow!==void 0&&(n.object.shadow=this.shadow.toJSON()),n}};const Dd=new Cn,Y_=new ce,q_=new ce;let R2=class{constructor(t){this.camera=t,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Wt(512,512),this.map=null,this.mapPass=null,this.matrix=new Cn,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Tp,this._frameExtents=new Wt(1,1),this._viewportCount=1,this._viewports=[new hn(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const n=this.camera,i=this.matrix;Y_.setFromMatrixPosition(t.matrixWorld),n.position.copy(Y_),q_.setFromMatrixPosition(t.target.matrixWorld),n.lookAt(q_),n.updateMatrixWorld(),Dd.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Dd),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(Dd)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const t={};return this.bias!==0&&(t.bias=this.bias),this.normalBias!==0&&(t.normalBias=this.normalBias),this.radius!==1&&(t.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}};const $_=new Cn,Pl=new ce,Id=new ce;class L2 extends R2{constructor(){super(new kn(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new Wt(4,2),this._viewportCount=6,this._viewports=[new hn(2,1,1,1),new hn(0,1,1,1),new hn(3,1,1,1),new hn(1,1,1,1),new hn(3,0,1,1),new hn(1,0,1,1)],this._cubeDirections=[new ce(1,0,0),new ce(-1,0,0),new ce(0,0,1),new ce(0,0,-1),new ce(0,1,0),new ce(0,-1,0)],this._cubeUps=[new ce(0,1,0),new ce(0,1,0),new ce(0,1,0),new ce(0,1,0),new ce(0,0,1),new ce(0,0,-1)]}updateMatrices(t,n=0){const i=this.camera,r=this.matrix,a=t.distance||i.far;a!==i.far&&(i.far=a,i.updateProjectionMatrix()),Pl.setFromMatrixPosition(t.matrixWorld),i.position.copy(Pl),Id.copy(i.position),Id.add(this._cubeDirections[n]),i.up.copy(this._cubeUps[n]),i.lookAt(Id),i.updateMatrixWorld(),r.makeTranslation(-Pl.x,-Pl.y,-Pl.z),$_.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix($_)}}let $0=class extends A2{constructor(t,n,i=0,r=2){super(t,n),this.isPointLight=!0,this.type="PointLight",this.distance=i,this.decay=r,this.shadow=new L2}get power(){return this.intensity*4*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t,n){return super.copy(t,n),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}},C2=class{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=j_(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const n=j_();t=(n-this.oldTime)/1e3,this.oldTime=n,this.elapsedTime+=t}return t}};function j_(){return(typeof performance>"u"?Date:performance).now()}const Z_=new ce;let qu,Fd,P2=class extends Wi{constructor(t=new ce(0,0,1),n=new ce(0,0,0),i=1,r=16776960,a=i*.2,o=a*.2){super(),this.type="ArrowHelper",qu===void 0&&(qu=new gr,qu.setAttribute("position",new ni([0,0,0,0,1,0],3)),Fd=new M2(0,.5,1,5,1),Fd.translate(0,-.5,0)),this.position.copy(n),this.line=new Lp(qu,new Rp({color:r,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new bi(Fd,new tl({color:r,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(i,a,o)}setDirection(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{Z_.set(t.z,0,-t.x).normalize();const n=Math.acos(t.y);this.quaternion.setFromAxisAngle(Z_,n)}}setLength(t,n=t*.2,i=n*.2){this.line.scale.set(1,Math.max(1e-4,t-n),1),this.line.updateMatrix(),this.cone.scale.set(i,n,i),this.cone.position.y=t,this.cone.updateMatrix()}setColor(t){this.line.material.color.set(t),this.cone.material.color.set(t)}copy(t){return super.copy(t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}};typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:wp}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=wp);var sa=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function U2(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}function D2(e){if(e.__esModule)return e;var t=e.default;if(typeof t=="function"){var n=function i(){return this instanceof i?Reflect.construct(t,arguments,this.constructor):t.apply(this,arguments)};n.prototype=t.prototype}else n={};return Object.defineProperty(n,"__esModule",{value:!0}),Object.keys(e).forEach(function(i){var r=Object.getOwnPropertyDescriptor(e,i);Object.defineProperty(n,i,r.get?r:{enumerable:!0,get:function(){return e[i]}})}),n}Number.EPSILON===void 0&&(Number.EPSILON=Math.pow(2,-52));Math.sign===void 0&&(Math.sign=function(e){return e<0?-1:e>0?1:+e});Function.prototype.name===void 0&&Object.defineProperty(Function.prototype,"name",{get:function(){return this.toString().match(/^\s*function\s*([^\(\s]*)/)[1]}});Object.assign===void 0&&function(){Object.assign=function(e){if(e==null)throw new TypeError("Cannot convert undefined or null to object");for(var t=Object(e),n=1;n<arguments.length;n++){var i=arguments[n];if(i!=null)for(var r in i)Object.prototype.hasOwnProperty.call(i,r)&&(t[r]=i[r])}return t}}();function Hi(){}Object.assign(Hi.prototype,{addEventListener:function(e,t){this._listeners===void 0&&(this._listeners={});var n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)},hasEventListener:function(e,t){if(this._listeners===void 0)return!1;var n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1},removeEventListener:function(e,t){if(this._listeners!==void 0){var n=this._listeners,i=n[e];if(i!==void 0){var r=i.indexOf(t);r!==-1&&i.splice(r,1)}}},dispatchEvent:function(e){if(this._listeners!==void 0){var t=this._listeners,n=t[e.type];if(n!==void 0){e.target=this;var i=[],r=0,a=n.length;for(r=0;r<a;r++)i[r]=n[r];for(r=0;r<a;r++)i[r].call(this,e)}}}});var j0="83",I2={LEFT:0,MIDDLE:1,RIGHT:2},Z0=0,Hl=1,Pp=2,F2=3,K0=0,N2=1,O2=0,Up=1,J0=2,oo=0,pa=1,il=2,Dp=1,Ip=2,Bh=0,Fp=1,xs=2,Vl=0,rl=1,Np=2,Op=3,Bp=4,zp=5,Q0={NoBlending:Vl,NormalBlending:rl,AdditiveBlending:Np,SubtractiveBlending:Op,MultiplyBlending:Bp,CustomBlending:zp},Gp=100,ex=101,tx=102,Zd=103,Kd=104,nx=200,ix=201,rx=202,ax=203,Hp=204,Vp=205,sx=206,ox=207,lx=208,cx=209,ux=210,hx=0,fx=1,dx=2,th=3,px=4,mx=5,vx=6,gx=7,Fc=0,_x=1,xx=2,Ju=0,kp=1,yx=2,Mx=3,Ex=4,zh=300,Gh=301,nh=302,Wp=303,ih=304,Xp=305,Hh=306,Vh=307,wx={UVMapping:zh,CubeReflectionMapping:Gh,CubeRefractionMapping:nh,EquirectangularReflectionMapping:Wp,EquirectangularRefractionMapping:ih,SphericalReflectionMapping:Xp,CubeUVReflectionMapping:Hh,CubeUVRefractionMapping:Vh},Fr=1e3,Ti=1001,Ja=1002,Jd={RepeatWrapping:Fr,ClampToEdgeWrapping:Ti,MirroredRepeatWrapping:Ja},Ai=1003,kh=1004,Wh=1005,hi=1006,Yp=1007,Nc=1008,Qd={NearestFilter:Ai,NearestMipMapNearestFilter:kh,NearestMipMapLinearFilter:Wh,LinearFilter:hi,LinearMipMapNearestFilter:Yp,LinearMipMapLinearFilter:Nc},rh=1009,Sx=1010,bx=1011,kl=1012,Tx=1013,qp=1014,fo=1015,ah=1016,Ax=1017,Rx=1018,Lx=1019,Wl=1020,Cx=1021,po=1022,fr=1023,Px=1024,Ux=1025,B2=fr,Ya=1026,mo=1027,ep=2001,tp=2002,np=2003,ip=2004,rp=2100,ap=2101,sp=2102,op=2103,Dx=2151,Ix=2200,Fx=2201,Nx=2202,Xl=2300,Nl=2301,Qu=2302,Qa=2400,Ha=2401,Yl=2402,$p=0,Ox=1,Bx=2,ql=3e3,zx=3001,jp=3007,Gx=3002,z2=3003,Hx=3004,Vx=3005,kx=3006,Wx=3200,Xx=3201,St={DEG2RAD:Math.PI/180,RAD2DEG:180/Math.PI,generateUUID:function(){var e="0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz".split(""),t=new Array(36),n=0,i;return function(){for(var a=0;a<36;a++)a===8||a===13||a===18||a===23?t[a]="-":a===14?t[a]="4":(n<=2&&(n=33554432+Math.random()*16777216|0),i=n&15,n=n>>4,t[a]=e[a===19?i&3|8:i]);return t.join("")}}(),clamp:function(e,t,n){return Math.max(t,Math.min(n,e))},euclideanModulo:function(e,t){return(e%t+t)%t},mapLinear:function(e,t,n,i,r){return i+(e-t)*(r-i)/(n-t)},lerp:function(e,t,n){return(1-n)*e+n*t},smoothstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t),e*e*(3-2*e))},smootherstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t),e*e*e*(e*(e*6-15)+10))},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},degToRad:function(e){return e*St.DEG2RAD},radToDeg:function(e){return e*St.RAD2DEG},isPowerOfTwo:function(e){return(e&e-1)===0&&e!==0},nearestPowerOfTwo:function(e){return Math.pow(2,Math.round(Math.log(e)/Math.LN2))},nextPowerOfTwo:function(e){return e--,e|=e>>1,e|=e>>2,e|=e>>4,e|=e>>8,e|=e>>16,e++,e}};function Ke(e,t){this.x=e||0,this.y=t||0}Ke.prototype={constructor:Ke,isVector2:!0,get width(){return this.x},set width(e){this.x=e},get height(){return this.y},set height(e){this.y=e},set:function(e,t){return this.x=e,this.y=t,this},setScalar:function(e){return this.x=e,this.y=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y)},copy:function(e){return this.x=e.x,this.y=e.y,this},add:function(e,t){return t!==void 0?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)},addScalar:function(e){return this.x+=e,this.y+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this},sub:function(e,t){return t!==void 0?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)},subScalar:function(e){return this.x-=e,this.y-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this},multiply:function(e){return this.x*=e.x,this.y*=e.y,this},multiplyScalar:function(e){return isFinite(e)?(this.x*=e,this.y*=e):(this.x=0,this.y=0),this},divide:function(e){return this.x/=e.x,this.y/=e.y,this},divideScalar:function(e){return this.multiplyScalar(1/e)},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this},clampScalar:function(){var e,t;return function(i,r){return e===void 0&&(e=new Ke,t=new Ke),e.set(i,i),t.set(r,r),this.clamp(e,t)}}(),clampLength:function(e,t){var n=this.length();return this.multiplyScalar(Math.max(e,Math.min(t,n))/n)},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this},negate:function(){return this.x=-this.x,this.y=-this.y,this},dot:function(e){return this.x*e.x+this.y*e.y},lengthSq:function(){return this.x*this.x+this.y*this.y},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)},normalize:function(){return this.divideScalar(this.length())},angle:function(){var e=Math.atan2(this.y,this.x);return e<0&&(e+=2*Math.PI),e},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,n=this.y-e.y;return t*t+n*n},distanceToManhattan:function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)},setLength:function(e){return this.multiplyScalar(e/this.length())},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this},lerpVectors:function(e,t,n){return this.subVectors(t,e).multiplyScalar(n).add(e)},equals:function(e){return e.x===this.x&&e.y===this.y},fromArray:function(e,t){return t===void 0&&(t=0),this.x=e[t],this.y=e[t+1],this},toArray:function(e,t){return e===void 0&&(e=[]),t===void 0&&(t=0),e[t]=this.x,e[t+1]=this.y,e},fromAttribute:function(e,t,n){return n!==void 0&&console.warn("THREE.Vector2: offset has been removed from .fromAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this},rotateAround:function(e,t){var n=Math.cos(t),i=Math.sin(t),r=this.x-e.x,a=this.y-e.y;return this.x=r*n-a*i+e.x,this.y=r*i+a*n+e.y,this}};var G2=0;function nn(e,t,n,i,r,a,o,l,h,u){Object.defineProperty(this,"id",{value:G2++}),this.uuid=St.generateUUID(),this.name="",this.image=e!==void 0?e:nn.DEFAULT_IMAGE,this.mipmaps=[],this.mapping=t!==void 0?t:nn.DEFAULT_MAPPING,this.wrapS=n!==void 0?n:Ti,this.wrapT=i!==void 0?i:Ti,this.magFilter=r!==void 0?r:hi,this.minFilter=a!==void 0?a:Nc,this.anisotropy=h!==void 0?h:1,this.format=o!==void 0?o:fr,this.type=l!==void 0?l:rh,this.offset=new Ke(0,0),this.repeat=new Ke(1,1),this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=u!==void 0?u:ql,this.version=0,this.onUpdate=null}nn.DEFAULT_IMAGE=void 0;nn.DEFAULT_MAPPING=zh;nn.prototype={constructor:nn,isTexture:!0,set needsUpdate(e){e===!0&&this.version++},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.image=e.image,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this},toJSON:function(e){if(e.textures[this.uuid]!==void 0)return e.textures[this.uuid];function t(r){var a;return r.toDataURL!==void 0?a=r:(a=document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),a.width=r.width,a.height=r.height,a.getContext("2d").drawImage(r,0,0,r.width,r.height)),a.width>2048||a.height>2048?a.toDataURL("image/jpeg",.6):a.toDataURL("image/png")}var n={metadata:{version:4.4,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],wrap:[this.wrapS,this.wrapT],minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY};if(this.image!==void 0){var i=this.image;i.uuid===void 0&&(i.uuid=St.generateUUID()),e.images[i.uuid]===void 0&&(e.images[i.uuid]={uuid:i.uuid,url:t(i)}),n.image=i.uuid}return e.textures[this.uuid]=n,n},dispose:function(){this.dispatchEvent({type:"dispose"})},transformUv:function(e){if(this.mapping===zh){if(e.multiply(this.repeat),e.add(this.offset),e.x<0||e.x>1)switch(this.wrapS){case Fr:e.x=e.x-Math.floor(e.x);break;case Ti:e.x=e.x<0?0:1;break;case Ja:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case Fr:e.y=e.y-Math.floor(e.y);break;case Ti:e.y=e.y<0?0:1;break;case Ja:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}this.flipY&&(e.y=1-e.y)}}};Object.assign(nn.prototype,Hi.prototype);function Kt(e,t,n,i){this.x=e||0,this.y=t||0,this.z=n||0,this.w=i!==void 0?i:1}Kt.prototype={constructor:Kt,isVector4:!0,set:function(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this},setScalar:function(e){return this.x=e,this.y=e,this.z=e,this.w=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setW:function(e){return this.w=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y,this.z,this.w)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this},add:function(e,t){return t!==void 0?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this},sub:function(e,t){return t!==void 0?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this},multiplyScalar:function(e){return isFinite(e)?(this.x*=e,this.y*=e,this.z*=e,this.w*=e):(this.x=0,this.y=0,this.z=0,this.w=0),this},applyMatrix4:function(e){var t=this.x,n=this.y,i=this.z,r=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*i+a[12]*r,this.y=a[1]*t+a[5]*n+a[9]*i+a[13]*r,this.z=a[2]*t+a[6]*n+a[10]*i+a[14]*r,this.w=a[3]*t+a[7]*n+a[11]*i+a[15]*r,this},divideScalar:function(e){return this.multiplyScalar(1/e)},setAxisAngleFromQuaternion:function(e){this.w=2*Math.acos(e.w);var t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this},setAxisAngleFromRotationMatrix:function(e){var t,n,i,r,a=.01,o=.1,l=e.elements,h=l[0],u=l[4],f=l[8],d=l[1],p=l[5],g=l[9],x=l[2],y=l[6],_=l[10];if(Math.abs(u-d)<a&&Math.abs(f-x)<a&&Math.abs(g-y)<a){if(Math.abs(u+d)<o&&Math.abs(f+x)<o&&Math.abs(g+y)<o&&Math.abs(h+p+_-3)<o)return this.set(1,0,0,0),this;t=Math.PI;var v=(h+1)/2,w=(p+1)/2,M=(_+1)/2,T=(u+d)/4,A=(f+x)/4,P=(g+y)/4;return v>w&&v>M?v<a?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(v),i=T/n,r=A/n):w>M?w<a?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(w),n=T/i,r=P/i):M<a?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(M),n=A/r,i=P/r),this.set(n,i,r,t),this}var b=Math.sqrt((y-g)*(y-g)+(f-x)*(f-x)+(d-u)*(d-u));return Math.abs(b)<.001&&(b=1),this.x=(y-g)/b,this.y=(f-x)/b,this.z=(d-u)/b,this.w=Math.acos((h+p+_-1)/2),this},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this},clampScalar:function(){var e,t;return function(i,r){return e===void 0&&(e=new Kt,t=new Kt),e.set(i,i,i,i),t.set(r,r,r,r),this.clamp(e,t)}}(),floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){return this.multiplyScalar(e/this.length())},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this},lerpVectors:function(e,t,n){return this.subVectors(t,e).multiplyScalar(n).add(e)},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w},fromArray:function(e,t){return t===void 0&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this},toArray:function(e,t){return e===void 0&&(e=[]),t===void 0&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e},fromAttribute:function(e,t,n){return n!==void 0&&console.warn("THREE.Vector4: offset has been removed from .fromAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}};function al(e,t,n){this.uuid=St.generateUUID(),this.width=e,this.height=t,this.scissor=new Kt(0,0,e,t),this.scissorTest=!1,this.viewport=new Kt(0,0,e,t),n=n||{},n.minFilter===void 0&&(n.minFilter=hi),this.texture=new nn(void 0,void 0,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!0,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null}Object.assign(al.prototype,Hi.prototype,{isWebGLRenderTarget:!0,setSize:function(e,t){(this.width!==e||this.height!==t)&&(this.width=e,this.height=t,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.width=e.width,this.height=e.height,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this},dispose:function(){this.dispatchEvent({type:"dispose"})}});function vo(e,t,n){al.call(this,e,t,n),this.activeCubeFace=0,this.activeMipMapLevel=0}vo.prototype=Object.create(al.prototype);vo.prototype.constructor=vo;vo.prototype.isWebGLRenderTargetCube=!0;function bn(e,t,n,i){this._x=e||0,this._y=t||0,this._z=n||0,this._w=i!==void 0?i:1}bn.prototype={constructor:bn,get x(){return this._x},set x(e){this._x=e,this.onChangeCallback()},get y(){return this._y},set y(e){this._y=e,this.onChangeCallback()},get z(){return this._z},set z(e){this._z=e,this.onChangeCallback()},get w(){return this._w},set w(e){this._w=e,this.onChangeCallback()},set:function(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._w)},copy:function(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this.onChangeCallback(),this},setFromEuler:function(e,t){if((e&&e.isEuler)===!1)throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");var n=Math.cos(e._x/2),i=Math.cos(e._y/2),r=Math.cos(e._z/2),a=Math.sin(e._x/2),o=Math.sin(e._y/2),l=Math.sin(e._z/2),h=e.order;return h==="XYZ"?(this._x=a*i*r+n*o*l,this._y=n*o*r-a*i*l,this._z=n*i*l+a*o*r,this._w=n*i*r-a*o*l):h==="YXZ"?(this._x=a*i*r+n*o*l,this._y=n*o*r-a*i*l,this._z=n*i*l-a*o*r,this._w=n*i*r+a*o*l):h==="ZXY"?(this._x=a*i*r-n*o*l,this._y=n*o*r+a*i*l,this._z=n*i*l+a*o*r,this._w=n*i*r-a*o*l):h==="ZYX"?(this._x=a*i*r-n*o*l,this._y=n*o*r+a*i*l,this._z=n*i*l-a*o*r,this._w=n*i*r+a*o*l):h==="YZX"?(this._x=a*i*r+n*o*l,this._y=n*o*r+a*i*l,this._z=n*i*l-a*o*r,this._w=n*i*r-a*o*l):h==="XZY"&&(this._x=a*i*r-n*o*l,this._y=n*o*r-a*i*l,this._z=n*i*l+a*o*r,this._w=n*i*r+a*o*l),t!==!1&&this.onChangeCallback(),this},setFromAxisAngle:function(e,t){var n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this.onChangeCallback(),this},setFromRotationMatrix:function(e){var t=e.elements,n=t[0],i=t[4],r=t[8],a=t[1],o=t[5],l=t[9],h=t[2],u=t[6],f=t[10],d=n+o+f,p;return d>0?(p=.5/Math.sqrt(d+1),this._w=.25/p,this._x=(u-l)*p,this._y=(r-h)*p,this._z=(a-i)*p):n>o&&n>f?(p=2*Math.sqrt(1+n-o-f),this._w=(u-l)/p,this._x=.25*p,this._y=(i+a)/p,this._z=(r+h)/p):o>f?(p=2*Math.sqrt(1+o-n-f),this._w=(r-h)/p,this._x=(i+a)/p,this._y=.25*p,this._z=(l+u)/p):(p=2*Math.sqrt(1+f-n-o),this._w=(a-i)/p,this._x=(r+h)/p,this._y=(l+u)/p,this._z=.25*p),this.onChangeCallback(),this},setFromUnitVectors:function(){var e,t,n=1e-6;return function(r,a){return e===void 0&&(e=new k),t=r.dot(a)+1,t<n?(t=0,Math.abs(r.x)>Math.abs(r.z)?e.set(-r.y,r.x,0):e.set(0,-r.z,r.y)):e.crossVectors(r,a),this._x=e.x,this._y=e.y,this._z=e.z,this._w=t,this.normalize()}}(),inverse:function(){return this.conjugate().normalize()},conjugate:function(){return this._x*=-1,this._y*=-1,this._z*=-1,this.onChangeCallback(),this},dot:function(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w},lengthSq:function(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w},length:function(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)},normalize:function(){var e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this.onChangeCallback(),this},multiply:function(e,t){return t!==void 0?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)},premultiply:function(e){return this.multiplyQuaternions(e,this)},multiplyQuaternions:function(e,t){var n=e._x,i=e._y,r=e._z,a=e._w,o=t._x,l=t._y,h=t._z,u=t._w;return this._x=n*u+a*o+i*h-r*l,this._y=i*u+a*l+r*o-n*h,this._z=r*u+a*h+n*l-i*o,this._w=a*u-n*o-i*l-r*h,this.onChangeCallback(),this},slerp:function(e,t){if(t===0)return this;if(t===1)return this.copy(e);var n=this._x,i=this._y,r=this._z,a=this._w,o=a*e._w+n*e._x+i*e._y+r*e._z;if(o<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,o=-o):this.copy(e),o>=1)return this._w=a,this._x=n,this._y=i,this._z=r,this;var l=Math.sqrt(1-o*o);if(Math.abs(l)<.001)return this._w=.5*(a+this._w),this._x=.5*(n+this._x),this._y=.5*(i+this._y),this._z=.5*(r+this._z),this;var h=Math.atan2(l,o),u=Math.sin((1-t)*h)/l,f=Math.sin(t*h)/l;return this._w=a*u+this._w*f,this._x=n*u+this._x*f,this._y=i*u+this._y*f,this._z=r*u+this._z*f,this.onChangeCallback(),this},equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w},fromArray:function(e,t){return t===void 0&&(t=0),this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this.onChangeCallback(),this},toArray:function(e,t){return e===void 0&&(e=[]),t===void 0&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){}};Object.assign(bn,{slerp:function(e,t,n,i){return n.copy(e).slerp(t,i)},slerpFlat:function(e,t,n,i,r,a,o){var l=n[i+0],h=n[i+1],u=n[i+2],f=n[i+3],d=r[a+0],p=r[a+1],g=r[a+2],x=r[a+3];if(f!==x||l!==d||h!==p||u!==g){var y=1-o,_=l*d+h*p+u*g+f*x,v=_>=0?1:-1,w=1-_*_;if(w>Number.EPSILON){var M=Math.sqrt(w),T=Math.atan2(M,_*v);y=Math.sin(y*T)/M,o=Math.sin(o*T)/M}var A=o*v;if(l=l*y+d*A,h=h*y+p*A,u=u*y+g*A,f=f*y+x*A,y===1-o){var P=1/Math.sqrt(l*l+h*h+u*u+f*f);l*=P,h*=P,u*=P,f*=P}}e[t]=l,e[t+1]=h,e[t+2]=u,e[t+3]=f}});function k(e,t,n){this.x=e||0,this.y=t||0,this.z=n||0}k.prototype={constructor:k,isVector3:!0,set:function(e,t,n){return this.x=e,this.y=t,this.z=n,this},setScalar:function(e){return this.x=e,this.y=e,this.z=e,this},setX:function(e){return this.x=e,this},setY:function(e){return this.y=e,this},setZ:function(e){return this.z=e,this},setComponent:function(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this},getComponent:function(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}},clone:function(){return new this.constructor(this.x,this.y,this.z)},copy:function(e){return this.x=e.x,this.y=e.y,this.z=e.z,this},add:function(e,t){return t!==void 0?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)},addScalar:function(e){return this.x+=e,this.y+=e,this.z+=e,this},addVectors:function(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this},addScaledVector:function(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this},sub:function(e,t){return t!==void 0?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)},subScalar:function(e){return this.x-=e,this.y-=e,this.z-=e,this},subVectors:function(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this},multiply:function(e,t){return t!==void 0?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)},multiplyScalar:function(e){return isFinite(e)?(this.x*=e,this.y*=e,this.z*=e):(this.x=0,this.y=0,this.z=0),this},multiplyVectors:function(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this},applyEuler:function(){var e;return function(n){return(n&&n.isEuler)===!1&&console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),e===void 0&&(e=new bn),this.applyQuaternion(e.setFromEuler(n))}}(),applyAxisAngle:function(){var e;return function(n,i){return e===void 0&&(e=new bn),this.applyQuaternion(e.setFromAxisAngle(n,i))}}(),applyMatrix3:function(e){var t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*i,this.y=r[1]*t+r[4]*n+r[7]*i,this.z=r[2]*t+r[5]*n+r[8]*i,this},applyMatrix4:function(e){var t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i+r[12],this.y=r[1]*t+r[5]*n+r[9]*i+r[13],this.z=r[2]*t+r[6]*n+r[10]*i+r[14],this},applyProjection:function(e){var t=this.x,n=this.y,i=this.z,r=e.elements,a=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*a,this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*a,this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*a,this},applyQuaternion:function(e){var t=this.x,n=this.y,i=this.z,r=e.x,a=e.y,o=e.z,l=e.w,h=l*t+a*i-o*n,u=l*n+o*t-r*i,f=l*i+r*n-a*t,d=-r*t-a*n-o*i;return this.x=h*l+d*-r+u*-o-f*-a,this.y=u*l+d*-a+f*-r-h*-o,this.z=f*l+d*-o+h*-a-u*-r,this},project:function(){var e;return function(n){return e===void 0&&(e=new xt),e.multiplyMatrices(n.projectionMatrix,e.getInverse(n.matrixWorld)),this.applyProjection(e)}}(),unproject:function(){var e;return function(n){return e===void 0&&(e=new xt),e.multiplyMatrices(n.matrixWorld,e.getInverse(n.projectionMatrix)),this.applyProjection(e)}}(),transformDirection:function(e){var t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i,this.y=r[1]*t+r[5]*n+r[9]*i,this.z=r[2]*t+r[6]*n+r[10]*i,this.normalize()},divide:function(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this},divideScalar:function(e){return this.multiplyScalar(1/e)},min:function(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this},max:function(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this},clamp:function(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this},clampScalar:function(){var e,t;return function(i,r){return e===void 0&&(e=new k,t=new k),e.set(i,i,i),t.set(r,r,r),this.clamp(e,t)}}(),clampLength:function(e,t){var n=this.length();return this.multiplyScalar(Math.max(e,Math.min(t,n))/n)},floor:function(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this},ceil:function(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this},round:function(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this},roundToZero:function(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this},negate:function(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this},dot:function(e){return this.x*e.x+this.y*e.y+this.z*e.z},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthManhattan:function(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)},normalize:function(){return this.divideScalar(this.length())},setLength:function(e){return this.multiplyScalar(e/this.length())},lerp:function(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this},lerpVectors:function(e,t,n){return this.subVectors(t,e).multiplyScalar(n).add(e)},cross:function(e,t){if(t!==void 0)return console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t);var n=this.x,i=this.y,r=this.z;return this.x=i*e.z-r*e.y,this.y=r*e.x-n*e.z,this.z=n*e.y-i*e.x,this},crossVectors:function(e,t){var n=e.x,i=e.y,r=e.z,a=t.x,o=t.y,l=t.z;return this.x=i*l-r*o,this.y=r*a-n*l,this.z=n*o-i*a,this},projectOnVector:function(e){var t=e.dot(this)/e.lengthSq();return this.copy(e).multiplyScalar(t)},projectOnPlane:function(){var e;return function(n){return e===void 0&&(e=new k),e.copy(this).projectOnVector(n),this.sub(e)}}(),reflect:function(){var e;return function(n){return e===void 0&&(e=new k),this.sub(e.copy(n).multiplyScalar(2*this.dot(n)))}}(),angleTo:function(e){var t=this.dot(e)/Math.sqrt(this.lengthSq()*e.lengthSq());return Math.acos(St.clamp(t,-1,1))},distanceTo:function(e){return Math.sqrt(this.distanceToSquared(e))},distanceToSquared:function(e){var t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i},distanceToManhattan:function(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)},setFromSpherical:function(e){var t=Math.sin(e.phi)*e.radius;return this.x=t*Math.sin(e.theta),this.y=Math.cos(e.phi)*e.radius,this.z=t*Math.cos(e.theta),this},setFromCylindrical:function(e){return this.x=e.radius*Math.sin(e.theta),this.y=e.y,this.z=e.radius*Math.cos(e.theta),this},setFromMatrixPosition:function(e){return this.setFromMatrixColumn(e,3)},setFromMatrixScale:function(e){var t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this},setFromMatrixColumn:function(e,t){if(typeof e=="number"){console.warn("THREE.Vector3: setFromMatrixColumn now expects ( matrix, index ).");var n=e;e=t,t=n}return this.fromArray(e.elements,t*4)},equals:function(e){return e.x===this.x&&e.y===this.y&&e.z===this.z},fromArray:function(e,t){return t===void 0&&(t=0),this.x=e[t],this.y=e[t+1],this.z=e[t+2],this},toArray:function(e,t){return e===void 0&&(e=[]),t===void 0&&(t=0),e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e},fromAttribute:function(e,t,n){return n!==void 0&&console.warn("THREE.Vector3: offset has been removed from .fromAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}};function xt(){this.elements=new Float32Array([1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]),arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}xt.prototype={constructor:xt,isMatrix4:!0,set:function(e,t,n,i,r,a,o,l,h,u,f,d,p,g,x,y){var _=this.elements;return _[0]=e,_[4]=t,_[8]=n,_[12]=i,_[1]=r,_[5]=a,_[9]=o,_[13]=l,_[2]=h,_[6]=u,_[10]=f,_[14]=d,_[3]=p,_[7]=g,_[11]=x,_[15]=y,this},identity:function(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this},clone:function(){return new xt().fromArray(this.elements)},copy:function(e){return this.elements.set(e.elements),this},copyPosition:function(e){var t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this},extractBasis:function(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this},makeBasis:function(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this},extractRotation:function(){var e;return function(n){e===void 0&&(e=new k);var i=this.elements,r=n.elements,a=1/e.setFromMatrixColumn(n,0).length(),o=1/e.setFromMatrixColumn(n,1).length(),l=1/e.setFromMatrixColumn(n,2).length();return i[0]=r[0]*a,i[1]=r[1]*a,i[2]=r[2]*a,i[4]=r[4]*o,i[5]=r[5]*o,i[6]=r[6]*o,i[8]=r[8]*l,i[9]=r[9]*l,i[10]=r[10]*l,this}}(),makeRotationFromEuler:function(e){(e&&e.isEuler)===!1&&console.error("THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");var t=this.elements,n=e.x,i=e.y,r=e.z,a=Math.cos(n),o=Math.sin(n),l=Math.cos(i),h=Math.sin(i),u=Math.cos(r),f=Math.sin(r);if(e.order==="XYZ"){var d=a*u,p=a*f,g=o*u,x=o*f;t[0]=l*u,t[4]=-l*f,t[8]=h,t[1]=p+g*h,t[5]=d-x*h,t[9]=-o*l,t[2]=x-d*h,t[6]=g+p*h,t[10]=a*l}else if(e.order==="YXZ"){var y=l*u,_=l*f,v=h*u,w=h*f;t[0]=y+w*o,t[4]=v*o-_,t[8]=a*h,t[1]=a*f,t[5]=a*u,t[9]=-o,t[2]=_*o-v,t[6]=w+y*o,t[10]=a*l}else if(e.order==="ZXY"){var y=l*u,_=l*f,v=h*u,w=h*f;t[0]=y-w*o,t[4]=-a*f,t[8]=v+_*o,t[1]=_+v*o,t[5]=a*u,t[9]=w-y*o,t[2]=-a*h,t[6]=o,t[10]=a*l}else if(e.order==="ZYX"){var d=a*u,p=a*f,g=o*u,x=o*f;t[0]=l*u,t[4]=g*h-p,t[8]=d*h+x,t[1]=l*f,t[5]=x*h+d,t[9]=p*h-g,t[2]=-h,t[6]=o*l,t[10]=a*l}else if(e.order==="YZX"){var M=a*l,T=a*h,A=o*l,P=o*h;t[0]=l*u,t[4]=P-M*f,t[8]=A*f+T,t[1]=f,t[5]=a*u,t[9]=-o*u,t[2]=-h*u,t[6]=T*f+A,t[10]=M-P*f}else if(e.order==="XZY"){var M=a*l,T=a*h,A=o*l,P=o*h;t[0]=l*u,t[4]=-f,t[8]=h*u,t[1]=M*f+P,t[5]=a*u,t[9]=T*f-A,t[2]=A*f-T,t[6]=o*u,t[10]=P*f+M}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},makeRotationFromQuaternion:function(e){var t=this.elements,n=e.x,i=e.y,r=e.z,a=e.w,o=n+n,l=i+i,h=r+r,u=n*o,f=n*l,d=n*h,p=i*l,g=i*h,x=r*h,y=a*o,_=a*l,v=a*h;return t[0]=1-(p+x),t[4]=f-v,t[8]=d+_,t[1]=f+v,t[5]=1-(u+x),t[9]=g-y,t[2]=d-_,t[6]=g+y,t[10]=1-(u+p),t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this},lookAt:function(){var e,t,n;return function(r,a,o){e===void 0&&(e=new k,t=new k,n=new k);var l=this.elements;return n.subVectors(r,a).normalize(),n.lengthSq()===0&&(n.z=1),e.crossVectors(o,n).normalize(),e.lengthSq()===0&&(n.z+=1e-4,e.crossVectors(o,n).normalize()),t.crossVectors(n,e),l[0]=e.x,l[4]=t.x,l[8]=n.x,l[1]=e.y,l[5]=t.y,l[9]=n.y,l[2]=e.z,l[6]=t.z,l[10]=n.z,this}}(),multiply:function(e,t){return t!==void 0?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)},premultiply:function(e){return this.multiplyMatrices(e,this)},multiplyMatrices:function(e,t){var n=e.elements,i=t.elements,r=this.elements,a=n[0],o=n[4],l=n[8],h=n[12],u=n[1],f=n[5],d=n[9],p=n[13],g=n[2],x=n[6],y=n[10],_=n[14],v=n[3],w=n[7],M=n[11],T=n[15],A=i[0],P=i[4],b=i[8],U=i[12],S=i[1],R=i[5],V=i[9],W=i[13],L=i[2],I=i[6],z=i[10],X=i[14],Y=i[3],$=i[7],ne=i[11],ae=i[15];return r[0]=a*A+o*S+l*L+h*Y,r[4]=a*P+o*R+l*I+h*$,r[8]=a*b+o*V+l*z+h*ne,r[12]=a*U+o*W+l*X+h*ae,r[1]=u*A+f*S+d*L+p*Y,r[5]=u*P+f*R+d*I+p*$,r[9]=u*b+f*V+d*z+p*ne,r[13]=u*U+f*W+d*X+p*ae,r[2]=g*A+x*S+y*L+_*Y,r[6]=g*P+x*R+y*I+_*$,r[10]=g*b+x*V+y*z+_*ne,r[14]=g*U+x*W+y*X+_*ae,r[3]=v*A+w*S+M*L+T*Y,r[7]=v*P+w*R+M*I+T*$,r[11]=v*b+w*V+M*z+T*ne,r[15]=v*U+w*W+M*X+T*ae,this},multiplyToArray:function(e,t,n){var i=this.elements;return this.multiplyMatrices(e,t),n[0]=i[0],n[1]=i[1],n[2]=i[2],n[3]=i[3],n[4]=i[4],n[5]=i[5],n[6]=i[6],n[7]=i[7],n[8]=i[8],n[9]=i[9],n[10]=i[10],n[11]=i[11],n[12]=i[12],n[13]=i[13],n[14]=i[14],n[15]=i[15],this},multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this},applyToVector3Array:function(){var e;return function(n,i,r){e===void 0&&(e=new k),i===void 0&&(i=0),r===void 0&&(r=n.length);for(var a=0,o=i;a<r;a+=3,o+=3)e.fromArray(n,o),e.applyMatrix4(this),e.toArray(n,o);return n}}(),applyToBufferAttribute:function(){var e;return function(n){e===void 0&&(e=new k);for(var i=0,r=n.count;i<r;i++)e.x=n.getX(i),e.y=n.getY(i),e.z=n.getZ(i),e.applyMatrix4(this),n.setXYZ(i,e.x,e.y,e.z);return n}}(),determinant:function(){var e=this.elements,t=e[0],n=e[4],i=e[8],r=e[12],a=e[1],o=e[5],l=e[9],h=e[13],u=e[2],f=e[6],d=e[10],p=e[14],g=e[3],x=e[7],y=e[11],_=e[15];return g*(+r*l*f-i*h*f-r*o*d+n*h*d+i*o*p-n*l*p)+x*(+t*l*p-t*h*d+r*a*d-i*a*p+i*h*u-r*l*u)+y*(+t*h*f-t*o*p-r*a*f+n*a*p+r*o*u-n*h*u)+_*(-i*o*u-t*l*f+t*o*d+i*a*f-n*a*d+n*l*u)},transpose:function(){var e=this.elements,t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this},setPosition:function(e){var t=this.elements;return t[12]=e.x,t[13]=e.y,t[14]=e.z,this},getInverse:function(e,t){var n=this.elements,i=e.elements,r=i[0],a=i[1],o=i[2],l=i[3],h=i[4],u=i[5],f=i[6],d=i[7],p=i[8],g=i[9],x=i[10],y=i[11],_=i[12],v=i[13],w=i[14],M=i[15],T=g*w*d-v*x*d+v*f*y-u*w*y-g*f*M+u*x*M,A=_*x*d-p*w*d-_*f*y+h*w*y+p*f*M-h*x*M,P=p*v*d-_*g*d+_*u*y-h*v*y-p*u*M+h*g*M,b=_*g*f-p*v*f-_*u*x+h*v*x+p*u*w-h*g*w,U=r*T+a*A+o*P+l*b;if(U===0){var S="THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0";if(t===!0)throw new Error(S);return console.warn(S),this.identity()}var R=1/U;return n[0]=T*R,n[1]=(v*x*l-g*w*l-v*o*y+a*w*y+g*o*M-a*x*M)*R,n[2]=(u*w*l-v*f*l+v*o*d-a*w*d-u*o*M+a*f*M)*R,n[3]=(g*f*l-u*x*l-g*o*d+a*x*d+u*o*y-a*f*y)*R,n[4]=A*R,n[5]=(p*w*l-_*x*l+_*o*y-r*w*y-p*o*M+r*x*M)*R,n[6]=(_*f*l-h*w*l-_*o*d+r*w*d+h*o*M-r*f*M)*R,n[7]=(h*x*l-p*f*l+p*o*d-r*x*d-h*o*y+r*f*y)*R,n[8]=P*R,n[9]=(_*g*l-p*v*l-_*a*y+r*v*y+p*a*M-r*g*M)*R,n[10]=(h*v*l-_*u*l+_*a*d-r*v*d-h*a*M+r*u*M)*R,n[11]=(p*u*l-h*g*l-p*a*d+r*g*d+h*a*y-r*u*y)*R,n[12]=b*R,n[13]=(p*v*o-_*g*o+_*a*x-r*v*x-p*a*w+r*g*w)*R,n[14]=(_*u*o-h*v*o-_*a*f+r*v*f+h*a*w-r*u*w)*R,n[15]=(h*g*o-p*u*o+p*a*f-r*g*f-h*a*x+r*u*x)*R,this},scale:function(e){var t=this.elements,n=e.x,i=e.y,r=e.z;return t[0]*=n,t[4]*=i,t[8]*=r,t[1]*=n,t[5]*=i,t[9]*=r,t[2]*=n,t[6]*=i,t[10]*=r,t[3]*=n,t[7]*=i,t[11]*=r,this},getMaxScaleOnAxis:function(){var e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))},makeTranslation:function(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this},makeRotationX:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this},makeRotationY:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this},makeRotationZ:function(e){var t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this},makeRotationAxis:function(e,t){var n=Math.cos(t),i=Math.sin(t),r=1-n,a=e.x,o=e.y,l=e.z,h=r*a,u=r*o;return this.set(h*a+n,h*o-i*l,h*l+i*o,0,h*o+i*l,u*o+n,u*l-i*a,0,h*l-i*o,u*l+i*a,r*l*l+n,0,0,0,0,1),this},makeScale:function(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this},makeShear:function(e,t,n){return this.set(1,t,n,0,e,1,n,0,e,t,1,0,0,0,0,1),this},compose:function(e,t,n){return this.makeRotationFromQuaternion(t),this.scale(n),this.setPosition(e),this},decompose:function(){var e,t;return function(i,r,a){e===void 0&&(e=new k,t=new xt);var o=this.elements,l=e.set(o[0],o[1],o[2]).length(),h=e.set(o[4],o[5],o[6]).length(),u=e.set(o[8],o[9],o[10]).length(),f=this.determinant();f<0&&(l=-l),i.x=o[12],i.y=o[13],i.z=o[14],t.elements.set(this.elements);var d=1/l,p=1/h,g=1/u;return t.elements[0]*=d,t.elements[1]*=d,t.elements[2]*=d,t.elements[4]*=p,t.elements[5]*=p,t.elements[6]*=p,t.elements[8]*=g,t.elements[9]*=g,t.elements[10]*=g,r.setFromRotationMatrix(t),a.x=l,a.y=h,a.z=u,this}}(),makeFrustum:function(e,t,n,i,r,a){var o=this.elements,l=2*r/(t-e),h=2*r/(i-n),u=(t+e)/(t-e),f=(i+n)/(i-n),d=-(a+r)/(a-r),p=-2*a*r/(a-r);return o[0]=l,o[4]=0,o[8]=u,o[12]=0,o[1]=0,o[5]=h,o[9]=f,o[13]=0,o[2]=0,o[6]=0,o[10]=d,o[14]=p,o[3]=0,o[7]=0,o[11]=-1,o[15]=0,this},makePerspective:function(e,t,n,i){var r=n*Math.tan(St.DEG2RAD*e*.5),a=-r,o=a*t,l=r*t;return this.makeFrustum(o,l,a,r,n,i)},makeOrthographic:function(e,t,n,i,r,a){var o=this.elements,l=1/(t-e),h=1/(n-i),u=1/(a-r),f=(t+e)*l,d=(n+i)*h,p=(a+r)*u;return o[0]=2*l,o[4]=0,o[8]=0,o[12]=-f,o[1]=0,o[5]=2*h,o[9]=0,o[13]=-d,o[2]=0,o[6]=0,o[10]=-2*u,o[14]=-p,o[3]=0,o[7]=0,o[11]=0,o[15]=1,this},equals:function(e){for(var t=this.elements,n=e.elements,i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0},fromArray:function(e,t){t===void 0&&(t=0);for(var n=0;n<16;n++)this.elements[n]=e[n+t];return this},toArray:function(e,t){e===void 0&&(e=[]),t===void 0&&(t=0);var n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}};function ma(e,t,n,i,r,a,o,l,h,u){e=e!==void 0?e:[],t=t!==void 0?t:Gh,nn.call(this,e,t,n,i,r,a,o,l,h,u),this.flipY=!1}ma.prototype=Object.create(nn.prototype);ma.prototype.constructor=ma;ma.prototype.isCubeTexture=!0;Object.defineProperty(ma.prototype,"images",{get:function(){return this.image},set:function(e){this.image=e}});var Yx=new nn,qx=new ma;function $x(){this.seq=[],this.map={}}var K_=[],J_=[];function sl(e,t,n){var i=e[0];if(i<=0||i>0)return e;var r=t*n,a=K_[r];if(a===void 0&&(a=new Float32Array(r),K_[r]=a),t!==0){i.toArray(a,0);for(var o=1,l=0;o!==t;++o)l+=n,e[o].toArray(a,l)}return a}function jx(e,t){var n=J_[t];n===void 0&&(n=new Int32Array(t),J_[t]=n);for(var i=0;i!==t;++i)n[i]=e.allocTextureUnit();return n}function H2(e,t){e.uniform1f(this.addr,t)}function V2(e,t){e.uniform1i(this.addr,t)}function k2(e,t){t.x===void 0?e.uniform2fv(this.addr,t):e.uniform2f(this.addr,t.x,t.y)}function W2(e,t){t.x!==void 0?e.uniform3f(this.addr,t.x,t.y,t.z):t.r!==void 0?e.uniform3f(this.addr,t.r,t.g,t.b):e.uniform3fv(this.addr,t)}function X2(e,t){t.x===void 0?e.uniform4fv(this.addr,t):e.uniform4f(this.addr,t.x,t.y,t.z,t.w)}function Y2(e,t){e.uniformMatrix2fv(this.addr,!1,t.elements||t)}function q2(e,t){e.uniformMatrix3fv(this.addr,!1,t.elements||t)}function $2(e,t){e.uniformMatrix4fv(this.addr,!1,t.elements||t)}function j2(e,t,n){var i=n.allocTextureUnit();e.uniform1i(this.addr,i),n.setTexture2D(t||Yx,i)}function Z2(e,t,n){var i=n.allocTextureUnit();e.uniform1i(this.addr,i),n.setTextureCube(t||qx,i)}function Zx(e,t){e.uniform2iv(this.addr,t)}function Kx(e,t){e.uniform3iv(this.addr,t)}function Jx(e,t){e.uniform4iv(this.addr,t)}function K2(e){switch(e){case 5126:return H2;case 35664:return k2;case 35665:return W2;case 35666:return X2;case 35674:return Y2;case 35675:return q2;case 35676:return $2;case 35678:return j2;case 35680:return Z2;case 5124:case 35670:return V2;case 35667:case 35671:return Zx;case 35668:case 35672:return Kx;case 35669:case 35673:return Jx}}function J2(e,t){e.uniform1fv(this.addr,t)}function Q2(e,t){e.uniform1iv(this.addr,t)}function eU(e,t){e.uniform2fv(this.addr,sl(t,this.size,2))}function tU(e,t){e.uniform3fv(this.addr,sl(t,this.size,3))}function nU(e,t){e.uniform4fv(this.addr,sl(t,this.size,4))}function iU(e,t){e.uniformMatrix2fv(this.addr,!1,sl(t,this.size,4))}function rU(e,t){e.uniformMatrix3fv(this.addr,!1,sl(t,this.size,9))}function aU(e,t){e.uniformMatrix4fv(this.addr,!1,sl(t,this.size,16))}function sU(e,t,n){var i=t.length,r=jx(n,i);e.uniform1iv(this.addr,r);for(var a=0;a!==i;++a)n.setTexture2D(t[a]||Yx,r[a])}function oU(e,t,n){var i=t.length,r=jx(n,i);e.uniform1iv(this.addr,r);for(var a=0;a!==i;++a)n.setTextureCube(t[a]||qx,r[a])}function lU(e){switch(e){case 5126:return J2;case 35664:return eU;case 35665:return tU;case 35666:return nU;case 35674:return iU;case 35675:return rU;case 35676:return aU;case 35678:return sU;case 35680:return oU;case 5124:case 35670:return Q2;case 35667:case 35671:return Zx;case 35668:case 35672:return Kx;case 35669:case 35673:return Jx}}function cU(e,t,n){this.id=e,this.addr=n,this.setValue=K2(t.type)}function uU(e,t,n){this.id=e,this.addr=n,this.size=t.size,this.setValue=lU(t.type)}function Qx(e){this.id=e,$x.call(this)}Qx.prototype.setValue=function(e,t){for(var n=this.seq,i=0,r=n.length;i!==r;++i){var a=n[i];a.setValue(e,t[a.id])}};var Nd=/([\w\d_]+)(\])?(\[|\.)?/g;function Q_(e,t){e.seq.push(t),e.map[t.id]=t}function hU(e,t,n){var i=e.name,r=i.length;for(Nd.lastIndex=0;;){var a=Nd.exec(i),o=Nd.lastIndex,l=a[1],h=a[2]==="]",u=a[3];if(h&&(l=l|0),u===void 0||u==="["&&o+2===r){Q_(n,u===void 0?new cU(l,e,t):new uU(l,e,t));break}else{var f=n.map,d=f[l];d===void 0&&(d=new Qx(l),Q_(n,d)),n=d}}}function va(e,t,n){$x.call(this),this.renderer=n;for(var i=e.getProgramParameter(t,e.ACTIVE_UNIFORMS),r=0;r!==i;++r){var a=e.getActiveUniform(t,r),o=a.name,l=e.getUniformLocation(t,o);hU(a,l,this)}}va.prototype.setValue=function(e,t,n){var i=this.map[t];i!==void 0&&i.setValue(e,n,this.renderer)};va.prototype.set=function(e,t,n){var i=this.map[n];i!==void 0&&i.setValue(e,t[n],this.renderer)};va.prototype.setOptional=function(e,t,n){var i=t[n];i!==void 0&&this.setValue(e,n,i)};va.upload=function(e,t,n,i){for(var r=0,a=t.length;r!==a;++r){var o=t[r],l=n[o.id];l.needsUpdate!==!1&&o.setValue(e,l.value,i)}};va.seqWithValue=function(e,t){for(var n=[],i=0,r=e.length;i!==r;++i){var a=e[i];a.id in t&&n.push(a)}return n};var ci={merge:function(e){for(var t={},n=0;n<e.length;n++){var i=this.clone(e[n]);for(var r in i)t[r]=i[r]}return t},clone:function(e){var t={};for(var n in e){t[n]={};for(var i in e[n]){var r=e[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture)?t[n][i]=r.clone():Array.isArray(r)?t[n][i]=r.slice():t[n][i]=r}}return t}},fU=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif
`,dU=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif
`,pU=`#ifdef ALPHATEST
	if ( diffuseColor.a < ALPHATEST ) discard;
#endif
`,mU=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( PHYSICAL )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );
	#endif
#endif
`,vU=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,gU=`
vec3 transformed = vec3( position );
`,_U=`
vec3 objectNormal = vec3( normal );
`,xU=`float punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
		if( decayExponent > 0.0 ) {
#if defined ( PHYSICALLY_CORRECT_LIGHTS )
			float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
			float maxDistanceCutoffFactor = pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
			return distanceFalloff * maxDistanceCutoffFactor;
#else
			return pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );
#endif
		}
		return 1.0;
}
vec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {
	float fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );
	return ( 1.0 - specularColor ) * fresnel + specularColor;
}
float G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	float gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	return 1.0 / ( gl * gv );
}
float G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );
	float dotNL = saturate( dot( geometry.normal, incidentLight.direction ) );
	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
	float dotNH = saturate( dot( geometry.normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( G * D );
}
vec2 ltcTextureCoords( const in GeometricContext geometry, const in float roughness ) {
	const float LUT_SIZE  = 64.0;
	const float LUT_SCALE = (LUT_SIZE - 1.0)/LUT_SIZE;
	const float LUT_BIAS  = 0.5/LUT_SIZE;
	vec3 N = geometry.normal;
	vec3 V = geometry.viewDir;
	vec3 P = geometry.position;
	float theta = acos( dot( N, V ) );
	vec2 uv = vec2(
		sqrt( saturate( roughness ) ),
		saturate( theta / ( 0.5 * PI ) ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
void clipQuadToHorizon( inout vec3 L[5], out int n ) {
	int config = 0;
	if ( L[0].z > 0.0 ) config += 1;
	if ( L[1].z > 0.0 ) config += 2;
	if ( L[2].z > 0.0 ) config += 4;
	if ( L[3].z > 0.0 ) config += 8;
	n = 0;
	if ( config == 0 ) {
	} else if ( config == 1 ) {
		n = 3;
		L[1] = -L[1].z * L[0] + L[0].z * L[1];
		L[2] = -L[3].z * L[0] + L[0].z * L[3];
	} else if ( config == 2 ) {
		n = 3;
		L[0] = -L[0].z * L[1] + L[1].z * L[0];
		L[2] = -L[2].z * L[1] + L[1].z * L[2];
	} else if ( config == 3 ) {
		n = 4;
		L[2] = -L[2].z * L[1] + L[1].z * L[2];
		L[3] = -L[3].z * L[0] + L[0].z * L[3];
	} else if ( config == 4 ) {
		n = 3;
		L[0] = -L[3].z * L[2] + L[2].z * L[3];
		L[1] = -L[1].z * L[2] + L[2].z * L[1];
	} else if ( config == 5 ) {
		n = 0;
	} else if ( config == 6 ) {
		n = 4;
		L[0] = -L[0].z * L[1] + L[1].z * L[0];
		L[3] = -L[3].z * L[2] + L[2].z * L[3];
	} else if ( config == 7 ) {
		n = 5;
		L[4] = -L[3].z * L[0] + L[0].z * L[3];
		L[3] = -L[3].z * L[2] + L[2].z * L[3];
	} else if ( config == 8 ) {
		n = 3;
		L[0] = -L[0].z * L[3] + L[3].z * L[0];
		L[1] = -L[2].z * L[3] + L[3].z * L[2];
		L[2] =  L[3];
	} else if ( config == 9 ) {
		n = 4;
		L[1] = -L[1].z * L[0] + L[0].z * L[1];
		L[2] = -L[2].z * L[3] + L[3].z * L[2];
	} else if ( config == 10 ) {
		n = 0;
	} else if ( config == 11 ) {
		n = 5;
		L[4] = L[3];
		L[3] = -L[2].z * L[3] + L[3].z * L[2];
		L[2] = -L[2].z * L[1] + L[1].z * L[2];
	} else if ( config == 12 ) {
		n = 4;
		L[1] = -L[1].z * L[2] + L[2].z * L[1];
		L[0] = -L[0].z * L[3] + L[3].z * L[0];
	} else if ( config == 13 ) {
		n = 5;
		L[4] = L[3];
		L[3] = L[2];
		L[2] = -L[1].z * L[2] + L[2].z * L[1];
		L[1] = -L[1].z * L[0] + L[0].z * L[1];
	} else if ( config == 14 ) {
		n = 5;
		L[4] = -L[0].z * L[3] + L[3].z * L[0];
		L[0] = -L[0].z * L[1] + L[1].z * L[0];
	} else if ( config == 15 ) {
		n = 4;
	}
	if ( n == 3 )
		L[3] = L[0];
	if ( n == 4 )
		L[4] = L[0];
}
float integrateLtcBrdfOverRectEdge( vec3 v1, vec3 v2 ) {
	float cosTheta = dot( v1, v2 );
	float theta = acos( cosTheta );
	float res = cross( v1, v2 ).z * ( ( theta > 0.001 ) ? theta / sin( theta ) : 1.0 );
	return res;
}
void initRectPoints( const in vec3 pos, const in vec3 halfWidth, const in vec3 halfHeight, out vec3 rectPoints[4] ) {
	rectPoints[0] = pos - halfWidth - halfHeight;
	rectPoints[1] = pos + halfWidth - halfHeight;
	rectPoints[2] = pos + halfWidth + halfHeight;
	rectPoints[3] = pos - halfWidth + halfHeight;
}
vec3 integrateLtcBrdfOverRect( const in GeometricContext geometry, const in mat3 brdfMat, const in vec3 rectPoints[4] ) {
	vec3 N = geometry.normal;
	vec3 V = geometry.viewDir;
	vec3 P = geometry.position;
	vec3 T1, T2;
	T1 = normalize(V - N * dot( V, N ));
	T2 = - cross( N, T1 );
	mat3 brdfWrtSurface = brdfMat * transpose( mat3( T1, T2, N ) );
	vec3 clippedRect[5];
	clippedRect[0] = brdfWrtSurface * ( rectPoints[0] - P );
	clippedRect[1] = brdfWrtSurface * ( rectPoints[1] - P );
	clippedRect[2] = brdfWrtSurface * ( rectPoints[2] - P );
	clippedRect[3] = brdfWrtSurface * ( rectPoints[3] - P );
	int n;
	clipQuadToHorizon(clippedRect, n);
	if ( n == 0 )
		return vec3( 0, 0, 0 );
	clippedRect[0] = normalize( clippedRect[0] );
	clippedRect[1] = normalize( clippedRect[1] );
	clippedRect[2] = normalize( clippedRect[2] );
	clippedRect[3] = normalize( clippedRect[3] );
	clippedRect[4] = normalize( clippedRect[4] );
	float sum = 0.0;
	sum += integrateLtcBrdfOverRectEdge( clippedRect[0], clippedRect[1] );
	sum += integrateLtcBrdfOverRectEdge( clippedRect[1], clippedRect[2] );
	sum += integrateLtcBrdfOverRectEdge( clippedRect[2], clippedRect[3] );
	if (n >= 4)
		sum += integrateLtcBrdfOverRectEdge( clippedRect[3], clippedRect[4] );
	if (n == 5)
		sum += integrateLtcBrdfOverRectEdge( clippedRect[4], clippedRect[0] );
	sum = max( 0.0, sum );
	vec3 Lo_i = vec3( sum, sum, sum );
	return Lo_i;
}
vec3 Rect_Area_Light_Specular_Reflectance(
		const in GeometricContext geometry,
		const in vec3 lightPos, const in vec3 lightHalfWidth, const in vec3 lightHalfHeight,
		const in float roughness,
		const in sampler2D ltcMat, const in sampler2D ltcMag ) {
	vec3 rectPoints[4];
	initRectPoints( lightPos, lightHalfWidth, lightHalfHeight, rectPoints );
	vec2 uv = ltcTextureCoords( geometry, roughness );
	vec4 brdfLtcApproxParams, t;
	brdfLtcApproxParams = texture2D( ltcMat, uv );
	t = texture2D( ltcMat, uv );
	float brdfLtcScalar = texture2D( ltcMag, uv ).a;
	mat3 brdfLtcApproxMat = mat3(
		vec3(   1,   0, t.y ),
		vec3(   0, t.z,   0 ),
		vec3( t.w,   0, t.x )
	);
	vec3 specularReflectance = integrateLtcBrdfOverRect( geometry, brdfLtcApproxMat, rectPoints );
	specularReflectance *= brdfLtcScalar;
	return specularReflectance;
}
vec3 Rect_Area_Light_Diffuse_Reflectance(
		const in GeometricContext geometry,
		const in vec3 lightPos, const in vec3 lightHalfWidth, const in vec3 lightHalfHeight ) {
	vec3 rectPoints[4];
	initRectPoints( lightPos, lightHalfWidth, lightHalfHeight, rectPoints );
	mat3 diffuseBrdfMat = mat3(1);
	vec3 diffuseReflectance = integrateLtcBrdfOverRect( geometry, diffuseBrdfMat, rectPoints );
	return diffuseReflectance;
}
vec3 BRDF_Specular_GGX_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness ) {
	float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 AB = vec2( -1.04, 1.04 ) * a004 + r.zw;
	return specularColor * AB.x + AB.y;
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );
	float dotNH = saturate( dot( geometry.normal, halfDir ) );
	float dotLH = saturate( dot( incidentLight.direction, halfDir ) );
	vec3 F = F_Schlick( specularColor, dotLH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
float GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {
	return ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );
}
float BlinnExponentToGGXRoughness( const in float blinnExponent ) {
	return sqrt( 2.0 / ( blinnExponent + 2.0 ) );
}
`,yU=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {
		vec3 vSigmaX = dFdx( surf_pos );
		vec3 vSigmaY = dFdy( surf_pos );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 );
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif
`,MU=`#if NUM_CLIPPING_PLANES > 0
	for ( int i = 0; i < UNION_CLIPPING_PLANES; ++ i ) {
		vec4 plane = clippingPlanes[ i ];
		if ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;
	}
		
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; ++ i ) {
			vec4 plane = clippingPlanes[ i ];
			clipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;
		}
		if ( clipped ) discard;
	
	#endif
#endif
`,EU=`#if NUM_CLIPPING_PLANES > 0
	#if ! defined( PHYSICAL ) && ! defined( PHONG )
		varying vec3 vViewPosition;
	#endif
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif
`,wU=`#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )
	varying vec3 vViewPosition;
#endif
`,SU=`#if NUM_CLIPPING_PLANES > 0 && ! defined( PHYSICAL ) && ! defined( PHONG )
	vViewPosition = - mvPosition.xyz;
#endif
`,bU=`#ifdef USE_COLOR
	diffuseColor.rgb *= vColor;
#endif`,TU=`#ifdef USE_COLOR
	varying vec3 vColor;
#endif
`,AU=`#ifdef USE_COLOR
	varying vec3 vColor;
#endif`,RU=`#ifdef USE_COLOR
	vColor.xyz = color.xyz;
#endif`,LU=`#define PI 3.14159265359
#define PI2 6.28318530718
#define PI_HALF 1.5707963267949
#define RECIPROCAL_PI 0.31830988618
#define RECIPROCAL_PI2 0.15915494
#define LOG2 1.442695
#define EPSILON 1e-6
#define saturate(a) clamp( a, 0.0, 1.0 )
#define whiteCompliment(a) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract(sin(sn) * c);
}
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
vec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	float distance = dot( planeNormal, point - pointOnPlane );
	return - distance * planeNormal + point;
}
float sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return sign( dot( point - pointOnPlane, planeNormal ) );
}
vec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {
	return lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;
}
mat3 transpose( const in mat3 v ) {
	mat3 tmp;
	tmp[0] = vec3(v[0].x, v[1].x, v[2].x);
	tmp[1] = vec3(v[0].y, v[1].y, v[2].y);
	tmp[2] = vec3(v[0].z, v[1].z, v[2].z);
	return tmp;
}
`,CU=`#ifdef ENVMAP_TYPE_CUBE_UV
#define cubeUV_textureSize (1024.0)
int getFaceFromDirection(vec3 direction) {
	vec3 absDirection = abs(direction);
	int face = -1;
	if( absDirection.x > absDirection.z ) {
		if(absDirection.x > absDirection.y )
			face = direction.x > 0.0 ? 0 : 3;
		else
			face = direction.y > 0.0 ? 1 : 4;
	}
	else {
		if(absDirection.z > absDirection.y )
			face = direction.z > 0.0 ? 2 : 5;
		else
			face = direction.y > 0.0 ? 1 : 4;
	}
	return face;
}
#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)
#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))
vec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {
	float scale = exp2(cubeUV_maxLods1 - roughnessLevel);
	float dxRoughness = dFdx(roughness);
	float dyRoughness = dFdy(roughness);
	vec3 dx = dFdx( vec * scale * dxRoughness );
	vec3 dy = dFdy( vec * scale * dyRoughness );
	float d = max( dot( dx, dx ), dot( dy, dy ) );
	d = clamp(d, 1.0, cubeUV_rangeClamp);
	float mipLevel = 0.5 * log2(d);
	return vec2(floor(mipLevel), fract(mipLevel));
}
#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)
#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)
vec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {
	mipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;
	float a = 16.0 * cubeUV_rcpTextureSize;
	vec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );
	vec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;
	float powScale = exp2_packed.x * exp2_packed.y;
	float scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;
	float mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;
	bool bRes = mipLevel == 0.0;
	scale =  bRes && (scale < a) ? a : scale;
	vec3 r;
	vec2 offset;
	int face = getFaceFromDirection(direction);
	float rcpPowScale = 1.0 / powScale;
	if( face == 0) {
		r = vec3(direction.x, -direction.z, direction.y);
		offset = vec2(0.0+mipOffset,0.75 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;
	}
	else if( face == 1) {
		r = vec3(direction.y, direction.x, direction.z);
		offset = vec2(scale+mipOffset, 0.75 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;
	}
	else if( face == 2) {
		r = vec3(direction.z, direction.x, direction.y);
		offset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ?  a : offset.y;
	}
	else if( face == 3) {
		r = vec3(direction.x, direction.z, direction.y);
		offset = vec2(0.0+mipOffset,0.5 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;
	}
	else if( face == 4) {
		r = vec3(direction.y, direction.x, -direction.z);
		offset = vec2(scale+mipOffset, 0.5 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;
	}
	else {
		r = vec3(direction.z, -direction.x, direction.y);
		offset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);
		offset.y = bRes && (offset.y < 2.0*a) ?  0.0 : offset.y;
	}
	r = normalize(r);
	float texelOffset = 0.5 * cubeUV_rcpTextureSize;
	vec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;
	vec2 base = offset + vec2( texelOffset );
	return base + s * ( scale - 2.0 * texelOffset );
}
#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)
vec4 textureCubeUV(vec3 reflectedDirection, float roughness ) {
	float roughnessVal = roughness* cubeUV_maxLods3;
	float r1 = floor(roughnessVal);
	float r2 = r1 + 1.0;
	float t = fract(roughnessVal);
	vec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);
	float s = mipInfo.y;
	float level0 = mipInfo.x;
	float level1 = level0 + 1.0;
	level1 = level1 > 5.0 ? 5.0 : level1;
	level0 += min( floor( s + 0.5 ), 5.0 );
	vec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);
	vec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));
	vec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);
	vec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));
	vec4 result = mix(color10, color20, t);
	return vec4(result.rgb, 1.0);
}
#endif
`,PU=`#ifdef FLIP_SIDED
	objectNormal = -objectNormal;
#endif
vec3 transformedNormal = normalMatrix * objectNormal;
`,UU=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif
`,DU=`#ifdef USE_DISPLACEMENTMAP
	transformed += normal * ( texture2D( displacementMap, uv ).x * displacementScale + displacementBias );
#endif
`,IU=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	emissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif
`,FU=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif
`,NU=`  gl_FragColor = linearToOutputTexel( gl_FragColor );
`,OU=`
vec4 LinearToLinear( in vec4 value ) {
  return value;
}
vec4 GammaToLinear( in vec4 value, in float gammaFactor ) {
  return vec4( pow( value.xyz, vec3( gammaFactor ) ), value.w );
}
vec4 LinearToGamma( in vec4 value, in float gammaFactor ) {
  return vec4( pow( value.xyz, vec3( 1.0 / gammaFactor ) ), value.w );
}
vec4 sRGBToLinear( in vec4 value ) {
  return vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.w );
}
vec4 LinearTosRGB( in vec4 value ) {
  return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.w );
}
vec4 RGBEToLinear( in vec4 value ) {
  return vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );
}
vec4 LinearToRGBE( in vec4 value ) {
  float maxComponent = max( max( value.r, value.g ), value.b );
  float fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );
  return vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );
}
vec4 RGBMToLinear( in vec4 value, in float maxRange ) {
  return vec4( value.xyz * value.w * maxRange, 1.0 );
}
vec4 LinearToRGBM( in vec4 value, in float maxRange ) {
  float maxRGB = max( value.x, max( value.g, value.b ) );
  float M      = clamp( maxRGB / maxRange, 0.0, 1.0 );
  M            = ceil( M * 255.0 ) / 255.0;
  return vec4( value.rgb / ( M * maxRange ), M );
}
vec4 RGBDToLinear( in vec4 value, in float maxRange ) {
    return vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );
}
vec4 LinearToRGBD( in vec4 value, in float maxRange ) {
    float maxRGB = max( value.x, max( value.g, value.b ) );
    float D      = max( maxRange / maxRGB, 1.0 );
    D            = min( floor( D ) / 255.0, 1.0 );
    return vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );
}
const mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );
vec4 LinearToLogLuv( in vec4 value )  {
  vec3 Xp_Y_XYZp = value.rgb * cLogLuvM;
  Xp_Y_XYZp = max(Xp_Y_XYZp, vec3(1e-6, 1e-6, 1e-6));
  vec4 vResult;
  vResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;
  float Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;
  vResult.w = fract(Le);
  vResult.z = (Le - (floor(vResult.w*255.0))/255.0)/255.0;
  return vResult;
}
const mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );
vec4 LogLuvToLinear( in vec4 value ) {
  float Le = value.z * 255.0 + value.w;
  vec3 Xp_Y_XYZp;
  Xp_Y_XYZp.y = exp2((Le - 127.0) / 2.0);
  Xp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;
  Xp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;
  vec3 vRGB = Xp_Y_XYZp.rgb * cLogLuvInverseM;
  return vec4( max(vRGB, 0.0), 1.0 );
}
`,BU=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		vec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToVertex, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_EQUIREC )
		vec2 sampleUV;
		sampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );
		sampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;
		vec4 envColor = texture2D( envMap, sampleUV );
	#elif defined( ENVMAP_TYPE_SPHERE )
		vec3 reflectView = flipNormal * normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );
		vec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	envColor = envMapTexelToLinear( envColor );
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif
`,zU=`#if defined( USE_ENVMAP ) || defined( PHYSICAL )
	uniform float reflectivity;
	uniform float envMapIntensity;
#endif
#ifdef USE_ENVMAP
	#if ! defined( PHYSICAL ) && ( defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) )
		varying vec3 vWorldPosition;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	uniform float flipEnvMap;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( PHYSICAL )
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif
`,GU=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif
`,HU=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif
`,VU=`#ifdef USE_FOG
	#ifdef USE_LOGDEPTHBUF_EXT
		float depth = gl_FragDepthEXT / gl_FragCoord.w;
	#else
		float depth = gl_FragCoord.z / gl_FragCoord.w;
	#endif
	#ifdef FOG_EXP2
		float fogFactor = whiteCompliment( exp2( - fogDensity * fogDensity * depth * depth * LOG2 ) );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, depth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif
`,kU=`#ifdef USE_FOG
	uniform vec3 fogColor;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,WU=`#ifdef TOON
	uniform sampler2D gradientMap;
	vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
		float dotNL = dot( normal, lightDirection );
		vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
		#ifdef USE_GRADIENTMAP
			return texture2D( gradientMap, coord ).rgb;
		#else
			return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
		#endif
	}
#endif
`,XU=`#ifdef USE_LIGHTMAP
	reflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;
#endif
`,YU=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,qU=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
#if NUM_POINT_LIGHTS > 0
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
	}
#endif
#if NUM_DIR_LIGHTS > 0
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = PI * directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( -dotNL ) * directLightColor_Diffuse;
		#endif
	}
#endif
#if NUM_HEMI_LIGHTS > 0
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vLightFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		#ifdef DOUBLE_SIDED
			vLightBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );
		#endif
	}
#endif
`,$U=`uniform vec3 ambientLightColor;
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	return irradiance;
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
		int shadow;
		float shadowBias;
		float shadowRadius;
		vec2 shadowMapSize;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		directLight.color = directionalLight.color;
		directLight.direction = directionalLight.direction;
		directLight.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
		int shadow;
		float shadowBias;
		float shadowRadius;
		vec2 shadowMapSize;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {
		vec3 lVector = pointLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		directLight.color = pointLight.color;
		directLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );
		directLight.visible = ( directLight.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
		int shadow;
		float shadowBias;
		float shadowRadius;
		vec2 shadowMapSize;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {
		vec3 lVector = spotLight.position - geometry.position;
		directLight.direction = normalize( lVector );
		float lightDistance = length( lVector );
		float angleCos = dot( directLight.direction, spotLight.direction );
		if ( angleCos > spotLight.coneCos ) {
			float spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );
			directLight.color = spotLight.color;
			directLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );
			directLight.visible = true;
		} else {
			directLight.color = vec3( 0.0 );
			directLight.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltcMat;	uniform sampler2D ltcMag;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {
		float dotNL = dot( geometry.normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			irradiance *= PI;
		#endif
		return irradiance;
	}
#endif
#if defined( USE_ENVMAP ) && defined( PHYSICAL )
	vec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {
		vec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );
			#else
				vec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );
			vec4 envMapColor = textureCubeUV( queryVec, 1.0 );
		#else
			vec4 envMapColor = vec4( 0.0 );
		#endif
		return PI * envMapColor.rgb * envMapIntensity;
	}
	float getSpecularMIPLevel( const in float blinnShininessExponent, const in int maxMIPLevel ) {
		float maxMIPLevelScalar = float( maxMIPLevel );
		float desiredMIPLevel = maxMIPLevelScalar - 0.79248 - 0.5 * log2( pow2( blinnShininessExponent ) + 1.0 );
		return clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );
	}
	vec3 getLightProbeIndirectRadiance( const in GeometricContext geometry, const in float blinnShininessExponent, const in int maxMIPLevel ) {
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( -geometry.viewDir, geometry.normal );
		#else
			vec3 reflectVec = refract( -geometry.viewDir, geometry.normal, refractionRatio );
		#endif
		reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
		float specularMIPLevel = getSpecularMIPLevel( blinnShininessExponent, maxMIPLevel );
		#ifdef ENVMAP_TYPE_CUBE
			vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );
			#else
				vec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_CUBE_UV )
			vec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );
			vec4 envMapColor = textureCubeUV(queryReflectVec, BlinnExponentToGGXRoughness(blinnShininessExponent));
		#elif defined( ENVMAP_TYPE_EQUIREC )
			vec2 sampleUV;
			sampleUV.y = saturate( reflectVec.y * 0.5 + 0.5 );
			sampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );
			#else
				vec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#elif defined( ENVMAP_TYPE_SPHERE )
			vec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );
			#ifdef TEXTURE_LOD_EXT
				vec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );
			#else
				vec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );
			#endif
			envMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;
		#endif
		return envMapColor.rgb * envMapIntensity;
	}
#endif
`,jU=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;
`,ZU=`varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
struct BlinnPhongMaterial {
	vec3	diffuseColor;
	vec3	specularColor;
	float	specularShininess;
	float	specularStrength;
};
#if NUM_RECT_AREA_LIGHTS > 0
    void RE_Direct_RectArea_BlinnPhong( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
        vec3 matDiffColor = material.diffuseColor;
        vec3 matSpecColor = material.specularColor;
        vec3 lightColor   = rectAreaLight.color;
        float roughness = BlinnExponentToGGXRoughness( material.specularShininess );
        vec3 spec = Rect_Area_Light_Specular_Reflectance(
                geometry,
                rectAreaLight.position, rectAreaLight.halfWidth, rectAreaLight.halfHeight,
                roughness,
                ltcMat, ltcMag );
        vec3 diff = Rect_Area_Light_Diffuse_Reflectance(
                geometry,
                rectAreaLight.position, rectAreaLight.halfWidth, rectAreaLight.halfHeight );
        reflectedLight.directSpecular += lightColor * matSpecColor * spec / PI2;
        reflectedLight.directDiffuse  += lightColor * matDiffColor * diff / PI2;
    }
#endif
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	#ifdef TOON
		vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	#else
		float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
		vec3 irradiance = dotNL * directLight.color;
	#endif
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_Direct_RectArea		RE_Direct_RectArea_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)
`,KU=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
material.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );
#ifdef STANDARD
	material.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );
	material.clearCoat = saturate( clearCoat );	material.clearCoatRoughness = clamp( clearCoatRoughness, 0.04, 1.0 );
#endif
`,JU=`struct PhysicalMaterial {
	vec3	diffuseColor;
	float	specularRoughness;
	vec3	specularColor;
	#ifndef STANDARD
		float clearCoat;
		float clearCoatRoughness;
	#endif
};
#define MAXIMUM_SPECULAR_COEFFICIENT 0.16
#define DEFAULT_SPECULAR_COEFFICIENT 0.04
float clearCoatDHRApprox( const in float roughness, const in float dotNL ) {
	return DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );
}
#if NUM_RECT_AREA_LIGHTS > 0
    void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
        vec3 matDiffColor = material.diffuseColor;
        vec3 matSpecColor = material.specularColor;
        vec3 lightColor   = rectAreaLight.color;
        float roughness = material.specularRoughness;
        vec3 spec = Rect_Area_Light_Specular_Reflectance(
                geometry,
                rectAreaLight.position, rectAreaLight.halfWidth, rectAreaLight.halfHeight,
                roughness,
                ltcMat, ltcMag );
        vec3 diff = Rect_Area_Light_Diffuse_Reflectance(
                geometry,
                rectAreaLight.position, rectAreaLight.halfWidth, rectAreaLight.halfHeight );
        reflectedLight.directSpecular += lightColor * matSpecColor * spec;
        reflectedLight.directDiffuse  += lightColor * matDiffColor * diff;
    }
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifndef PHYSICALLY_CORRECT_LIGHTS
		irradiance *= PI;
	#endif
	#ifndef STANDARD
		float clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );
	#else
		float clearCoatDHR = 0.0;
	#endif
	reflectedLight.directSpecular += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry, material.specularColor, material.specularRoughness );
	reflectedLight.directDiffuse += ( 1.0 - clearCoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
	#ifndef STANDARD
		reflectedLight.directSpecular += irradiance * material.clearCoat * BRDF_Specular_GGX( directLight, geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );
	#endif
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 clearCoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	#ifndef STANDARD
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		float dotNL = dotNV;
		float clearCoatDHR = material.clearCoat * clearCoatDHRApprox( material.clearCoatRoughness, dotNL );
	#else
		float clearCoatDHR = 0.0;
	#endif
	reflectedLight.indirectSpecular += ( 1.0 - clearCoatDHR ) * radiance * BRDF_Specular_GGX_Environment( geometry, material.specularColor, material.specularRoughness );
	#ifndef STANDARD
		reflectedLight.indirectSpecular += clearCoatRadiance * material.clearCoat * BRDF_Specular_GGX_Environment( geometry, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearCoatRoughness );
	#endif
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
#define Material_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.specularRoughness )
#define Material_ClearCoat_BlinnShininessExponent( material )   GGXRoughnessToBlinnExponent( material.clearCoatRoughness )
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}
`,QU=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = normalize( vViewPosition );
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointDirectLightIrradiance( pointLight, geometry, directLight );
		#ifdef USE_SHADOWMAP
		directLight.color *= all( bvec2( pointLight.shadow, directLight.visible ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotDirectLightIrradiance( spotLight, geometry, directLight );
		#ifdef USE_SHADOWMAP
		directLight.color *= all( bvec2( spotLight.shadow, directLight.visible ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );
		#ifdef USE_SHADOWMAP
		directLight.color *= all( bvec2( directionalLight.shadow, directLight.visible ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
#endif
#if defined( RE_IndirectDiffuse )
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#ifdef USE_LIGHTMAP
		vec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;
		#ifndef PHYSICALLY_CORRECT_LIGHTS
			lightMapIrradiance *= PI;
		#endif
		irradiance += lightMapIrradiance;
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );
		}
	#endif
	#if defined( USE_ENVMAP ) && defined( PHYSICAL ) && defined( ENVMAP_TYPE_CUBE_UV )
	 	irradiance += getLightProbeIndirectIrradiance( geometry, 8 );
	#endif
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	vec3 radiance = getLightProbeIndirectRadiance( geometry, Material_BlinnShininessExponent( material ), 8 );
	#ifndef STANDARD
		vec3 clearCoatRadiance = getLightProbeIndirectRadiance( geometry, Material_ClearCoat_BlinnShininessExponent( material ), 8 );
	#else
		vec3 clearCoatRadiance = vec3( 0.0 );
	#endif
		
	RE_IndirectSpecular( radiance, clearCoatRadiance, geometry, material, reflectedLight );
#endif
`,eD=`#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)
	gl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;
#endif`,tD=`#ifdef USE_LOGDEPTHBUF
	uniform float logDepthBufFC;
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
	#endif
#endif
`,nD=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
	#endif
	uniform float logDepthBufFC;
#endif`,iD=`#ifdef USE_LOGDEPTHBUF
	gl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
	#else
		gl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;
	#endif
#endif
`,rD=`#ifdef USE_MAP
	vec4 texelColor = texture2D( map, vUv );
	texelColor = mapTexelToLinear( texelColor );
	diffuseColor *= texelColor;
#endif
`,aD=`#ifdef USE_MAP
	uniform sampler2D map;
#endif
`,sD=`#ifdef USE_MAP
	vec4 mapTexel = texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );
	diffuseColor *= mapTexelToLinear( mapTexel );
#endif
`,oD=`#ifdef USE_MAP
	uniform vec4 offsetRepeat;
	uniform sampler2D map;
#endif
`,lD=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.r;
#endif
`,cD=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,uD=`#ifdef USE_MORPHNORMALS
	objectNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];
	objectNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];
	objectNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];
	objectNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];
#endif
`,hD=`#ifdef USE_MORPHTARGETS
	#ifndef USE_MORPHNORMALS
	uniform float morphTargetInfluences[ 8 ];
	#else
	uniform float morphTargetInfluences[ 4 ];
	#endif
#endif`,fD=`#ifdef USE_MORPHTARGETS
	transformed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];
	transformed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];
	transformed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];
	transformed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];
	#ifndef USE_MORPHNORMALS
	transformed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];
	transformed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];
	transformed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];
	transformed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];
	#endif
#endif
`,dD=`#ifdef DOUBLE_SIDED
	float flipNormal = ( float( gl_FrontFacing ) * 2.0 - 1.0 );
#else
	float flipNormal = 1.0;
#endif
`,pD=`#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal ) * flipNormal;
#endif
#ifdef USE_NORMALMAP
	normal = perturbNormal2Arb( -vViewPosition, normal );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );
#endif
`,mD=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 S = normalize( q0 * st1.t - q1 * st0.t );
		vec3 T = normalize( -q0 * st1.s + q1 * st0.s );
		vec3 N = normalize( surf_norm );
		vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
		mapN.xy = normalScale * mapN.xy;
		mat3 tsn = mat3( S, T, N );
		return normalize( tsn * mapN );
	}
#endif
`,vD=`vec3 packNormalToRGB( const in vec3 normal ) {
  return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
  return 1.0 - 2.0 * rgb.xyz;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
  return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
  return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
  return (( near + viewZ ) * far ) / (( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
  return ( near * far ) / ( ( far - near ) * invClipZ - far );
}
`,gD=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif
`,_D=`#ifdef USE_SKINNING
	vec4 mvPosition = modelViewMatrix * skinned;
#else
	vec4 mvPosition = modelViewMatrix * vec4( transformed, 1.0 );
#endif
gl_Position = projectionMatrix * mvPosition;
`,xD=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.r;
#endif
`,yD=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,MD=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHTS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHTS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];
	#endif
	#if NUM_SPOT_LIGHTS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHTS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];
	#endif
	#if NUM_POINT_LIGHTS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHTS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];
	#endif
    #if NUM_RECT_AREA_LIGHTS > 0
    #endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	float texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {
		const vec2 offset = vec2( 0.0, 1.0 );
		vec2 texelSize = vec2( 1.0 ) / size;
		vec2 centroidUV = floor( uv * size + 0.5 ) / size;
		float lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );
		float lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );
		float rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );
		float rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );
		vec2 f = fract( uv * size + 0.5 );
		float a = mix( lb, lt, f.y );
		float b = mix( rb, rt, f.y );
		float c = mix( a, b, f.x );
		return c;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			return (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			return (
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return 1.0;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		vec3 bd3D = normalize( lightToPosition );
		float dp = ( length( lightToPosition ) - shadowBias ) / 1000.0;
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif
`,ED=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHTS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHTS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHTS ];
	#endif
	#if NUM_SPOT_LIGHTS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHTS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHTS ];
	#endif
	#if NUM_POINT_LIGHTS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHTS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHTS ];
	#endif
    #if NUM_RECT_AREA_LIGHTS > 0
    #endif
#endif
`,wD=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHTS > 0
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;
	}
	#endif
	#if NUM_SPOT_LIGHTS > 0
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;
	}
	#endif
	#if NUM_POINT_LIGHTS > 0
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;
	}
	#endif
    #if NUM_RECT_AREA_LIGHTS > 0
    #endif
#endif
`,SD=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHTS > 0
	DirectionalLight directionalLight;
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		shadow *= bool( directionalLight.shadow ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#endif
	#if NUM_SPOT_LIGHTS > 0
	SpotLight spotLight;
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		shadow *= bool( spotLight.shadow ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#endif
	#if NUM_POINT_LIGHTS > 0
	PointLight pointLight;
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		shadow *= bool( pointLight.shadow ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ] ) : 1.0;
	}
	#endif
	#if NUM_RECT_AREA_LIGHTS > 0
	#endif
	#endif
	return shadow;
}
`,bD=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,TD=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	#ifdef BONE_TEXTURE
		uniform sampler2D boneTexture;
		uniform int boneTextureWidth;
		uniform int boneTextureHeight;
		mat4 getBoneMatrix( const in float i ) {
			float j = i * 4.0;
			float x = mod( j, float( boneTextureWidth ) );
			float y = floor( j / float( boneTextureWidth ) );
			float dx = 1.0 / float( boneTextureWidth );
			float dy = 1.0 / float( boneTextureHeight );
			y = dy * ( y + 0.5 );
			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
			mat4 bone = mat4( v1, v2, v3, v4 );
			return bone;
		}
	#else
		uniform mat4 boneMatrices[ MAX_BONES ];
		mat4 getBoneMatrix( const in float i ) {
			mat4 bone = boneMatrices[ int(i) ];
			return bone;
		}
	#endif
#endif
`,AD=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	skinned  = bindMatrixInverse * skinned;
#endif
`,RD=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
#endif
`,LD=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,CD=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,PD=`#if defined( TONE_MAPPING )
  gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif
`,UD=`#define saturate(a) clamp( a, 0.0, 1.0 )
uniform float toneMappingExposure;
uniform float toneMappingWhitePoint;
vec3 LinearToneMapping( vec3 color ) {
  return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
  color *= toneMappingExposure;
  return saturate( color / ( vec3( 1.0 ) + color ) );
}
#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )
vec3 Uncharted2ToneMapping( vec3 color ) {
  color *= toneMappingExposure;
  return saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
  color *= toneMappingExposure;
  color = max( vec3( 0.0 ), color - 0.004 );
  return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
`,DD=`#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )
	varying vec2 vUv;
#endif`,ID=`#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )
	varying vec2 vUv;
	uniform vec4 offsetRepeat;
#endif
`,FD=`#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP ) || defined( USE_EMISSIVEMAP ) || defined( USE_ROUGHNESSMAP ) || defined( USE_METALNESSMAP )
	vUv = uv * offsetRepeat.zw + offsetRepeat.xy;
#endif`,ND=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,OD=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
#endif`,BD=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = uv2;
#endif`,zD=`#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( PHYSICAL ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )
	#ifdef USE_SKINNING
		vec4 worldPosition = modelMatrix * skinned;
	#else
		vec4 worldPosition = modelMatrix * vec4( transformed, 1.0 );
	#endif
#endif
`,GD=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldPosition;
#include <common>
void main() {
	gl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );
	gl_FragColor.a *= opacity;
}
`,HD=`varying vec3 vWorldPosition;
#include <common>
void main() {
	vWorldPosition = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}
`,VD=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( gl_FragCoord.z ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( gl_FragCoord.z );
	#endif
}
`,kD=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#include <begin_vertex>
	#include <displacementmap_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
}
`,WD=`uniform vec3 lightPos;
varying vec4 vWorldPosition;
#include <common>
#include <packing>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	gl_FragColor = packDepthToRGBA( length( vWorldPosition.xyz - lightPos.xyz ) / 1000.0 );
}
`,XD=`varying vec4 vWorldPosition;
#include <common>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <skinbase_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition;
}
`,YD=`uniform sampler2D tEquirect;
uniform float tFlip;
varying vec3 vWorldPosition;
#include <common>
void main() {
	vec3 direction = normalize( vWorldPosition );
	vec2 sampleUV;
	sampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );
	sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;
	gl_FragColor = texture2D( tEquirect, sampleUV );
}
`,qD=`varying vec3 vWorldPosition;
#include <common>
void main() {
	vWorldPosition = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}
`,$D=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <premultiplied_alpha_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}
`,jD=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	vLineDistance = scale * lineDistance;
	vec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
}
`,ZD=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		reflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <normal_flip>
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <premultiplied_alpha_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}
`,KD=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <skinbase_vertex>
	#ifdef USE_ENVMAP
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	#include <envmap_vertex>
}
`,JD=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
#endif
#include <common>
#include <packing>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_pars_fragment>
#include <bsdfs>
#include <lights_pars>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	reflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <normal_flip>
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <premultiplied_alpha_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}
`,QD=`#define LAMBERT
varying vec3 vLightFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars>
#include <color_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
}
`,eI=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_flip>
	#include <normal_fragment>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_template>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <premultiplied_alpha_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}
`,tI=`#define PHONG
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <displacementmap_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
}
`,nI=`#define PHYSICAL
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifndef STANDARD
	uniform float clearCoat;
	uniform float clearCoatRoughness;
#endif
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <packing>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <lights_pars>
#include <lights_physical_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_flip>
	#include <normal_fragment>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_template>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <premultiplied_alpha_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}
`,iI=`#define PHYSICAL
varying vec3 vViewPosition;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <displacementmap_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
}
`,rI=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED  ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	#include <normal_flip>
	#include <normal_fragment>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#include <premultiplied_alpha_fragment>
	#include <encodings_fragment>
}
`,aI=`#define NORMAL
#if defined( FLAT_SHADED  ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
#endif
	#include <begin_vertex>
	#include <displacementmap_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
#if defined( FLAT_SHADED  ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}
`,sI=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <packing>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	gl_FragColor = vec4( outgoingLight, diffuseColor.a );
	#include <premultiplied_alpha_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}
`,oI=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <begin_vertex>
	#include <project_vertex>
	#ifdef USE_SIZEATTENUATION
		gl_PointSize = size * ( scale / - mvPosition.z );
	#else
		gl_PointSize = size;
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
}
`,lI=`uniform float opacity;
#include <common>
#include <packing>
#include <bsdfs>
#include <lights_pars>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( 0.0, 0.0, 0.0, opacity * ( 1.0  - getShadowMask() ) );
}
`,cI=`#include <shadowmap_pars_vertex>
void main() {
	#include <begin_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
}
`,kt={alphamap_fragment:fU,alphamap_pars_fragment:dU,alphatest_fragment:pU,aomap_fragment:mU,aomap_pars_fragment:vU,begin_vertex:gU,beginnormal_vertex:_U,bsdfs:xU,bumpmap_pars_fragment:yU,clipping_planes_fragment:MU,clipping_planes_pars_fragment:EU,clipping_planes_pars_vertex:wU,clipping_planes_vertex:SU,color_fragment:bU,color_pars_fragment:TU,color_pars_vertex:AU,color_vertex:RU,common:LU,cube_uv_reflection_fragment:CU,defaultnormal_vertex:PU,displacementmap_pars_vertex:UU,displacementmap_vertex:DU,emissivemap_fragment:IU,emissivemap_pars_fragment:FU,encodings_fragment:NU,encodings_pars_fragment:OU,envmap_fragment:BU,envmap_pars_fragment:zU,envmap_pars_vertex:GU,envmap_vertex:HU,fog_fragment:VU,fog_pars_fragment:kU,gradientmap_pars_fragment:WU,lightmap_fragment:XU,lightmap_pars_fragment:YU,lights_lambert_vertex:qU,lights_pars:$U,lights_phong_fragment:jU,lights_phong_pars_fragment:ZU,lights_physical_fragment:KU,lights_physical_pars_fragment:JU,lights_template:QU,logdepthbuf_fragment:eD,logdepthbuf_pars_fragment:tD,logdepthbuf_pars_vertex:nD,logdepthbuf_vertex:iD,map_fragment:rD,map_pars_fragment:aD,map_particle_fragment:sD,map_particle_pars_fragment:oD,metalnessmap_fragment:lD,metalnessmap_pars_fragment:cD,morphnormal_vertex:uD,morphtarget_pars_vertex:hD,morphtarget_vertex:fD,normal_flip:dD,normal_fragment:pD,normalmap_pars_fragment:mD,packing:vD,premultiplied_alpha_fragment:gD,project_vertex:_D,roughnessmap_fragment:xD,roughnessmap_pars_fragment:yD,shadowmap_pars_fragment:MD,shadowmap_pars_vertex:ED,shadowmap_vertex:wD,shadowmask_pars_fragment:SD,skinbase_vertex:bD,skinning_pars_vertex:TD,skinning_vertex:AD,skinnormal_vertex:RD,specularmap_fragment:LD,specularmap_pars_fragment:CD,tonemapping_fragment:PD,tonemapping_pars_fragment:UD,uv_pars_fragment:DD,uv_pars_vertex:ID,uv_vertex:FD,uv2_pars_fragment:ND,uv2_pars_vertex:OD,uv2_vertex:BD,worldpos_vertex:zD,cube_frag:GD,cube_vert:HD,depth_frag:VD,depth_vert:kD,distanceRGBA_frag:WD,distanceRGBA_vert:XD,equirect_frag:YD,equirect_vert:qD,linedashed_frag:$D,linedashed_vert:jD,meshbasic_frag:ZD,meshbasic_vert:KD,meshlambert_frag:JD,meshlambert_vert:QD,meshphong_frag:eI,meshphong_vert:tI,meshphysical_frag:nI,meshphysical_vert:iI,normal_frag:rI,normal_vert:aI,points_frag:sI,points_vert:oI,shadow_frag:lI,shadow_vert:cI};function dt(e,t,n){return t===void 0&&n===void 0?this.set(e):this.setRGB(e,t,n)}dt.prototype={constructor:dt,isColor:!0,r:1,g:1,b:1,set:function(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this},setScalar:function(e){return this.r=e,this.g=e,this.b=e,this},setHex:function(e){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,this},setRGB:function(e,t,n){return this.r=e,this.g=t,this.b=n,this},setHSL:function(){function e(t,n,i){return i<0&&(i+=1),i>1&&(i-=1),i<1/6?t+(n-t)*6*i:i<1/2?n:i<2/3?t+(n-t)*6*(2/3-i):t}return function(n,i,r){if(n=St.euclideanModulo(n,1),i=St.clamp(i,0,1),r=St.clamp(r,0,1),i===0)this.r=this.g=this.b=r;else{var a=r<=.5?r*(1+i):r+i-r*i,o=2*r-a;this.r=e(o,a,n+1/3),this.g=e(o,a,n),this.b=e(o,a,n-1/3)}return this}}(),setStyle:function(e){function t(d){d!==void 0&&parseFloat(d)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}var n;if(n=/^((?:rgb|hsl)a?)\(\s*([^\)]*)\)/.exec(e)){var i,r=n[1],a=n[2];switch(r){case"rgb":case"rgba":if(i=/^(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(i[1],10))/255,this.g=Math.min(255,parseInt(i[2],10))/255,this.b=Math.min(255,parseInt(i[3],10))/255,t(i[5]),this;if(i=/^(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(i[1],10))/100,this.g=Math.min(100,parseInt(i[2],10))/100,this.b=Math.min(100,parseInt(i[3],10))/100,t(i[5]),this;break;case"hsl":case"hsla":if(i=/^([0-9]*\.?[0-9]+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(,\s*([0-9]*\.?[0-9]+)\s*)?$/.exec(a)){var o=parseFloat(i[1])/360,l=parseInt(i[2],10)/100,h=parseInt(i[3],10)/100;return t(i[5]),this.setHSL(o,l,h)}break}}else if(n=/^\#([A-Fa-f0-9]+)$/.exec(e)){var u=n[1],f=u.length;if(f===3)return this.r=parseInt(u.charAt(0)+u.charAt(0),16)/255,this.g=parseInt(u.charAt(1)+u.charAt(1),16)/255,this.b=parseInt(u.charAt(2)+u.charAt(2),16)/255,this;if(f===6)return this.r=parseInt(u.charAt(0)+u.charAt(1),16)/255,this.g=parseInt(u.charAt(2)+u.charAt(3),16)/255,this.b=parseInt(u.charAt(4)+u.charAt(5),16)/255,this}if(e&&e.length>0){var u=uI[e];u!==void 0?this.setHex(u):console.warn("THREE.Color: Unknown color "+e)}return this},clone:function(){return new this.constructor(this.r,this.g,this.b)},copy:function(e){return this.r=e.r,this.g=e.g,this.b=e.b,this},copyGammaToLinear:function(e,t){return t===void 0&&(t=2),this.r=Math.pow(e.r,t),this.g=Math.pow(e.g,t),this.b=Math.pow(e.b,t),this},copyLinearToGamma:function(e,t){t===void 0&&(t=2);var n=t>0?1/t:1;return this.r=Math.pow(e.r,n),this.g=Math.pow(e.g,n),this.b=Math.pow(e.b,n),this},convertGammaToLinear:function(){var e=this.r,t=this.g,n=this.b;return this.r=e*e,this.g=t*t,this.b=n*n,this},convertLinearToGamma:function(){return this.r=Math.sqrt(this.r),this.g=Math.sqrt(this.g),this.b=Math.sqrt(this.b),this},getHex:function(){return this.r*255<<16^this.g*255<<8^this.b*255<<0},getHexString:function(){return("000000"+this.getHex().toString(16)).slice(-6)},getHSL:function(e){var t=e||{h:0,s:0,l:0},n=this.r,i=this.g,r=this.b,a=Math.max(n,i,r),o=Math.min(n,i,r),l,h,u=(o+a)/2;if(o===a)l=0,h=0;else{var f=a-o;switch(h=u<=.5?f/(a+o):f/(2-a-o),a){case n:l=(i-r)/f+(i<r?6:0);break;case i:l=(r-n)/f+2;break;case r:l=(n-i)/f+4;break}l/=6}return t.h=l,t.s=h,t.l=u,t},getStyle:function(){return"rgb("+(this.r*255|0)+","+(this.g*255|0)+","+(this.b*255|0)+")"},offsetHSL:function(e,t,n){var i=this.getHSL();return i.h+=e,i.s+=t,i.l+=n,this.setHSL(i.h,i.s,i.l),this},add:function(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this},addColors:function(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this},addScalar:function(e){return this.r+=e,this.g+=e,this.b+=e,this},sub:function(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this},multiply:function(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this},multiplyScalar:function(e){return this.r*=e,this.g*=e,this.b*=e,this},lerp:function(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this},equals:function(e){return e.r===this.r&&e.g===this.g&&e.b===this.b},fromArray:function(e,t){return t===void 0&&(t=0),this.r=e[t],this.g=e[t+1],this.b=e[t+2],this},toArray:function(e,t){return e===void 0&&(e=[]),t===void 0&&(t=0),e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e},toJSON:function(){return this.getHex()}};var uI={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074};function es(e,t,n,i,r,a,o,l,h,u,f,d){nn.call(this,null,a,o,l,h,u,i,r,f,d),this.image={data:e,width:t,height:n},this.magFilter=h!==void 0?h:Ai,this.minFilter=u!==void 0?u:Ai,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}es.prototype=Object.create(nn.prototype);es.prototype.constructor=es;es.prototype.isDataTexture=!0;var Tt={common:{diffuse:{value:new dt(15658734)},opacity:{value:1},map:{value:null},offsetRepeat:{value:new Kt(0,0,1,1)},specularMap:{value:null},alphaMap:{value:null},envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new Ke(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new dt(16777215)}},lights:{ambientLightColor:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{},shadow:{},shadowBias:{},shadowRadius:{},shadowMapSize:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}}},points:{diffuse:{value:new dt(15658734)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},offsetRepeat:{value:new Kt(0,0,1,1)}}},go={basic:{uniforms:ci.merge([Tt.common,Tt.aomap,Tt.lightmap,Tt.fog]),vertexShader:kt.meshbasic_vert,fragmentShader:kt.meshbasic_frag},lambert:{uniforms:ci.merge([Tt.common,Tt.aomap,Tt.lightmap,Tt.emissivemap,Tt.fog,Tt.lights,{emissive:{value:new dt(0)}}]),vertexShader:kt.meshlambert_vert,fragmentShader:kt.meshlambert_frag},phong:{uniforms:ci.merge([Tt.common,Tt.aomap,Tt.lightmap,Tt.emissivemap,Tt.bumpmap,Tt.normalmap,Tt.displacementmap,Tt.gradientmap,Tt.fog,Tt.lights,{emissive:{value:new dt(0)},specular:{value:new dt(1118481)},shininess:{value:30}}]),vertexShader:kt.meshphong_vert,fragmentShader:kt.meshphong_frag},standard:{uniforms:ci.merge([Tt.common,Tt.aomap,Tt.lightmap,Tt.emissivemap,Tt.bumpmap,Tt.normalmap,Tt.displacementmap,Tt.roughnessmap,Tt.metalnessmap,Tt.fog,Tt.lights,{emissive:{value:new dt(0)},roughness:{value:.5},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:kt.meshphysical_vert,fragmentShader:kt.meshphysical_frag},points:{uniforms:ci.merge([Tt.points,Tt.fog]),vertexShader:kt.points_vert,fragmentShader:kt.points_frag},dashed:{uniforms:ci.merge([Tt.common,Tt.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:kt.linedashed_vert,fragmentShader:kt.linedashed_frag},depth:{uniforms:ci.merge([Tt.common,Tt.displacementmap]),vertexShader:kt.depth_vert,fragmentShader:kt.depth_frag},normal:{uniforms:ci.merge([Tt.common,Tt.bumpmap,Tt.normalmap,Tt.displacementmap,{opacity:{value:1}}]),vertexShader:kt.normal_vert,fragmentShader:kt.normal_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:kt.cube_vert,fragmentShader:kt.cube_frag},equirect:{uniforms:{tEquirect:{value:null},tFlip:{value:-1}},vertexShader:kt.equirect_vert,fragmentShader:kt.equirect_frag},distanceRGBA:{uniforms:{lightPos:{value:new k}},vertexShader:kt.distanceRGBA_vert,fragmentShader:kt.distanceRGBA_frag}};go.physical={uniforms:ci.merge([go.standard.uniforms,{clearCoat:{value:0},clearCoatRoughness:{value:0}}]),vertexShader:kt.meshphysical_vert,fragmentShader:kt.meshphysical_frag};function $l(e,t){this.min=e!==void 0?e:new Ke(1/0,1/0),this.max=t!==void 0?t:new Ke(-1/0,-1/0)}$l.prototype={constructor:$l,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromPoints:function(e){this.makeEmpty();for(var t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(){var e=new Ke;return function(n,i){var r=e.copy(i).multiplyScalar(.5);return this.min.copy(n).sub(r),this.max.copy(n).add(r),this}}(),clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y},getCenter:function(e){var t=e||new Ke;return this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(e){var t=e||new Ke;return this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y},getParameter:function(e,t){var n=t||new Ke;return n.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))},intersectsBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)},clampPoint:function(e,t){var n=t||new Ke;return n.copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new Ke;return function(n){var i=e.copy(n).clamp(this.min,this.max);return i.sub(n).length()}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}};function hI(e,t){var n=e.context,i=e.state,r,a,o,l,h,u,f,d;function p(){var x=new Float32Array([-1,-1,0,0,1,-1,1,0,1,1,1,1,-1,1,0,1]),y=new Uint16Array([0,1,2,0,2,3]);r=n.createBuffer(),a=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,r),n.bufferData(n.ARRAY_BUFFER,x,n.STATIC_DRAW),n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,a),n.bufferData(n.ELEMENT_ARRAY_BUFFER,y,n.STATIC_DRAW),f=n.createTexture(),d=n.createTexture(),i.bindTexture(n.TEXTURE_2D,f),n.texImage2D(n.TEXTURE_2D,0,n.RGB,16,16,0,n.RGB,n.UNSIGNED_BYTE,null),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MAG_FILTER,n.NEAREST),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,n.NEAREST),i.bindTexture(n.TEXTURE_2D,d),n.texImage2D(n.TEXTURE_2D,0,n.RGBA,16,16,0,n.RGBA,n.UNSIGNED_BYTE,null),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_S,n.CLAMP_TO_EDGE),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_WRAP_T,n.CLAMP_TO_EDGE),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MAG_FILTER,n.NEAREST),n.texParameteri(n.TEXTURE_2D,n.TEXTURE_MIN_FILTER,n.NEAREST),o={vertexShader:["uniform lowp int renderType;","uniform vec3 screenPosition;","uniform vec2 scale;","uniform float rotation;","uniform sampler2D occlusionMap;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","varying float vVisibility;","void main() {","vUV = uv;","vec2 pos = position;","if ( renderType == 2 ) {","vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );","visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );","visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );","vVisibility =        visibility.r / 9.0;","vVisibility *= 1.0 - visibility.g / 9.0;","vVisibility *=       visibility.b / 9.0;","vVisibility *= 1.0 - visibility.a / 9.0;","pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;","pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;","}","gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );","}"].join(`
`),fragmentShader:["uniform lowp int renderType;","uniform sampler2D map;","uniform float opacity;","uniform vec3 color;","varying vec2 vUV;","varying float vVisibility;","void main() {","if ( renderType == 0 ) {","gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );","} else if ( renderType == 1 ) {","gl_FragColor = texture2D( map, vUV );","} else {","vec4 texture = texture2D( map, vUV );","texture.a *= opacity * vVisibility;","gl_FragColor = texture;","gl_FragColor.rgb *= color;","}","}"].join(`
`)},l=g(o),h={vertex:n.getAttribLocation(l,"position"),uv:n.getAttribLocation(l,"uv")},u={renderType:n.getUniformLocation(l,"renderType"),map:n.getUniformLocation(l,"map"),occlusionMap:n.getUniformLocation(l,"occlusionMap"),opacity:n.getUniformLocation(l,"opacity"),color:n.getUniformLocation(l,"color"),scale:n.getUniformLocation(l,"scale"),rotation:n.getUniformLocation(l,"rotation"),screenPosition:n.getUniformLocation(l,"screenPosition")}}this.render=function(x,y,_){if(t.length!==0){var v=new k,w=_.w/_.z,M=_.z*.5,T=_.w*.5,A=16/_.w,P=new Ke(A*w,A),b=new k(1,1,0),U=new Ke(1,1),S=new $l;S.min.set(_.x,_.y),S.max.set(_.x+(_.z-16),_.y+(_.w-16)),l===void 0&&p(),n.useProgram(l),i.initAttributes(),i.enableAttribute(h.vertex),i.enableAttribute(h.uv),i.disableUnusedAttributes(),n.uniform1i(u.occlusionMap,0),n.uniform1i(u.map,1),n.bindBuffer(n.ARRAY_BUFFER,r),n.vertexAttribPointer(h.vertex,2,n.FLOAT,!1,2*8,0),n.vertexAttribPointer(h.uv,2,n.FLOAT,!1,2*8,8),n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,a),i.disable(n.CULL_FACE),i.setDepthWrite(!1);for(var R=0,V=t.length;R<V;R++){A=16/_.w,P.set(A*w,A);var W=t[R];if(v.set(W.matrixWorld.elements[12],W.matrixWorld.elements[13],W.matrixWorld.elements[14]),v.applyMatrix4(y.matrixWorldInverse),v.applyProjection(y.projectionMatrix),b.copy(v),U.x=_.x+b.x*M+M-8,U.y=_.y+b.y*T+T-8,S.containsPoint(U)===!0){i.activeTexture(n.TEXTURE0),i.bindTexture(n.TEXTURE_2D,null),i.activeTexture(n.TEXTURE1),i.bindTexture(n.TEXTURE_2D,f),n.copyTexImage2D(n.TEXTURE_2D,0,n.RGB,U.x,U.y,16,16,0),n.uniform1i(u.renderType,0),n.uniform2f(u.scale,P.x,P.y),n.uniform3f(u.screenPosition,b.x,b.y,b.z),i.disable(n.BLEND),i.enable(n.DEPTH_TEST),n.drawElements(n.TRIANGLES,6,n.UNSIGNED_SHORT,0),i.activeTexture(n.TEXTURE0),i.bindTexture(n.TEXTURE_2D,d),n.copyTexImage2D(n.TEXTURE_2D,0,n.RGBA,U.x,U.y,16,16,0),n.uniform1i(u.renderType,1),i.disable(n.DEPTH_TEST),i.activeTexture(n.TEXTURE1),i.bindTexture(n.TEXTURE_2D,f),n.drawElements(n.TRIANGLES,6,n.UNSIGNED_SHORT,0),W.positionScreen.copy(b),W.customUpdateCallback?W.customUpdateCallback(W):W.updateLensFlares(),n.uniform1i(u.renderType,2),i.enable(n.BLEND);for(var L=0,I=W.lensFlares.length;L<I;L++){var z=W.lensFlares[L];z.opacity>.001&&z.scale>.001&&(b.x=z.x,b.y=z.y,b.z=z.z,A=z.size*z.scale/_.w,P.x=A*w,P.y=A,n.uniform3f(u.screenPosition,b.x,b.y,b.z),n.uniform2f(u.scale,P.x,P.y),n.uniform1f(u.rotation,z.rotation),n.uniform1f(u.opacity,z.opacity),n.uniform3f(u.color,z.color.r,z.color.g,z.color.b),i.setBlending(z.blending,z.blendEquation,z.blendSrc,z.blendDst),e.setTexture2D(z.texture,1),n.drawElements(n.TRIANGLES,6,n.UNSIGNED_SHORT,0))}}}i.enable(n.CULL_FACE),i.enable(n.DEPTH_TEST),i.setDepthWrite(!0),e.resetGLState()}};function g(x){var y=n.createProgram(),_=n.createShader(n.FRAGMENT_SHADER),v=n.createShader(n.VERTEX_SHADER),w="precision "+e.getPrecision()+` float;
`;return n.shaderSource(_,w+x.fragmentShader),n.shaderSource(v,w+x.vertexShader),n.compileShader(_),n.compileShader(v),n.attachShader(y,_),n.attachShader(y,v),n.linkProgram(y),y}}function fI(e,t){var n=e.context,i=e.state,r,a,o,l,h,u,f=new k,d=new bn,p=new k;function g(){var _=new Float32Array([-.5,-.5,0,0,.5,-.5,1,0,.5,.5,1,1,-.5,.5,0,1]),v=new Uint16Array([0,1,2,0,2,3]);r=n.createBuffer(),a=n.createBuffer(),n.bindBuffer(n.ARRAY_BUFFER,r),n.bufferData(n.ARRAY_BUFFER,_,n.STATIC_DRAW),n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,a),n.bufferData(n.ELEMENT_ARRAY_BUFFER,v,n.STATIC_DRAW),o=x(),l={position:n.getAttribLocation(o,"position"),uv:n.getAttribLocation(o,"uv")},h={uvOffset:n.getUniformLocation(o,"uvOffset"),uvScale:n.getUniformLocation(o,"uvScale"),rotation:n.getUniformLocation(o,"rotation"),scale:n.getUniformLocation(o,"scale"),color:n.getUniformLocation(o,"color"),map:n.getUniformLocation(o,"map"),opacity:n.getUniformLocation(o,"opacity"),modelViewMatrix:n.getUniformLocation(o,"modelViewMatrix"),projectionMatrix:n.getUniformLocation(o,"projectionMatrix"),fogType:n.getUniformLocation(o,"fogType"),fogDensity:n.getUniformLocation(o,"fogDensity"),fogNear:n.getUniformLocation(o,"fogNear"),fogFar:n.getUniformLocation(o,"fogFar"),fogColor:n.getUniformLocation(o,"fogColor"),alphaTest:n.getUniformLocation(o,"alphaTest")};var w=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");w.width=8,w.height=8;var M=w.getContext("2d");M.fillStyle="white",M.fillRect(0,0,8,8),u=new nn(w),u.needsUpdate=!0}this.render=function(_,v){if(t.length!==0){o===void 0&&g(),n.useProgram(o),i.initAttributes(),i.enableAttribute(l.position),i.enableAttribute(l.uv),i.disableUnusedAttributes(),i.disable(n.CULL_FACE),i.enable(n.BLEND),n.bindBuffer(n.ARRAY_BUFFER,r),n.vertexAttribPointer(l.position,2,n.FLOAT,!1,2*8,0),n.vertexAttribPointer(l.uv,2,n.FLOAT,!1,2*8,8),n.bindBuffer(n.ELEMENT_ARRAY_BUFFER,a),n.uniformMatrix4fv(h.projectionMatrix,!1,v.projectionMatrix.elements),i.activeTexture(n.TEXTURE0),n.uniform1i(h.map,0);var w=0,M=0,T=_.fog;T?(n.uniform3f(h.fogColor,T.color.r,T.color.g,T.color.b),T.isFog?(n.uniform1f(h.fogNear,T.near),n.uniform1f(h.fogFar,T.far),n.uniform1i(h.fogType,1),w=1,M=1):T.isFogExp2&&(n.uniform1f(h.fogDensity,T.density),n.uniform1i(h.fogType,2),w=2,M=2)):(n.uniform1i(h.fogType,0),w=0,M=0);for(var A=0,P=t.length;A<P;A++){var b=t[A];b.modelViewMatrix.multiplyMatrices(v.matrixWorldInverse,b.matrixWorld),b.z=-b.modelViewMatrix.elements[14]}t.sort(y);for(var U=[],A=0,P=t.length;A<P;A++){var b=t[A],S=b.material;if(S.visible!==!1){n.uniform1f(h.alphaTest,S.alphaTest),n.uniformMatrix4fv(h.modelViewMatrix,!1,b.modelViewMatrix.elements),b.matrixWorld.decompose(f,d,p),U[0]=p.x,U[1]=p.y;var R=0;_.fog&&S.fog&&(R=M),w!==R&&(n.uniform1i(h.fogType,R),w=R),S.map!==null?(n.uniform2f(h.uvOffset,S.map.offset.x,S.map.offset.y),n.uniform2f(h.uvScale,S.map.repeat.x,S.map.repeat.y)):(n.uniform2f(h.uvOffset,0,0),n.uniform2f(h.uvScale,1,1)),n.uniform1f(h.opacity,S.opacity),n.uniform3f(h.color,S.color.r,S.color.g,S.color.b),n.uniform1f(h.rotation,S.rotation),n.uniform2fv(h.scale,U),i.setBlending(S.blending,S.blendEquation,S.blendSrc,S.blendDst),i.setDepthTest(S.depthTest),i.setDepthWrite(S.depthWrite),S.map?e.setTexture2D(S.map,0):e.setTexture2D(u,0),n.drawElements(n.TRIANGLES,6,n.UNSIGNED_SHORT,0)}}i.enable(n.CULL_FACE),e.resetGLState()}};function x(){var _=n.createProgram(),v=n.createShader(n.VERTEX_SHADER),w=n.createShader(n.FRAGMENT_SHADER);return n.shaderSource(v,["precision "+e.getPrecision()+" float;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform float rotation;","uniform vec2 scale;","uniform vec2 uvOffset;","uniform vec2 uvScale;","attribute vec2 position;","attribute vec2 uv;","varying vec2 vUV;","void main() {","vUV = uvOffset + uv * uvScale;","vec2 alignedPosition = position * scale;","vec2 rotatedPosition;","rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;","rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;","vec4 finalPosition;","finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );","finalPosition.xy += rotatedPosition;","finalPosition = projectionMatrix * finalPosition;","gl_Position = finalPosition;","}"].join(`
`)),n.shaderSource(w,["precision "+e.getPrecision()+" float;","uniform vec3 color;","uniform sampler2D map;","uniform float opacity;","uniform int fogType;","uniform vec3 fogColor;","uniform float fogDensity;","uniform float fogNear;","uniform float fogFar;","uniform float alphaTest;","varying vec2 vUV;","void main() {","vec4 texture = texture2D( map, vUV );","if ( texture.a < alphaTest ) discard;","gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );","if ( fogType > 0 ) {","float depth = gl_FragCoord.z / gl_FragCoord.w;","float fogFactor = 0.0;","if ( fogType == 1 ) {","fogFactor = smoothstep( fogNear, fogFar, depth );","} else {","const float LOG2 = 1.442695;","fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );","fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );","}","gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );","}","}"].join(`
`)),n.compileShader(v),n.compileShader(w),n.attachShader(_,v),n.attachShader(_,w),n.linkProgram(_),_}function y(_,v){return _.renderOrder!==v.renderOrder?_.renderOrder-v.renderOrder:_.z!==v.z?v.z-_.z:v.id-_.id}}var dI=0;function Ct(){Object.defineProperty(this,"id",{value:dI++}),this.uuid=St.generateUUID(),this.name="",this.type="Material",this.fog=!0,this.lights=!0,this.blending=rl,this.side=oo,this.shading=Ip,this.vertexColors=Bh,this.opacity=1,this.transparent=!1,this.blendSrc=Hp,this.blendDst=Vp,this.blendEquation=Gp,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=th,this.depthTest=!0,this.depthWrite=!0,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.alphaTest=0,this.premultipliedAlpha=!1,this.overdraw=0,this.visible=!0,this._needsUpdate=!0}Ct.prototype={constructor:Ct,isMaterial:!0,get needsUpdate(){return this._needsUpdate},set needsUpdate(e){e===!0&&this.update(),this._needsUpdate=e},setValues:function(e){if(e!==void 0)for(var t in e){var n=e[t];if(n===void 0){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}var i=this[t];if(i===void 0){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):t==="overdraw"?this[t]=Number(n):this[t]=n}},toJSON:function(e){var t=e===void 0;t&&(e={textures:{},images:{}});var n={metadata:{version:4.4,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearCoat!==void 0&&(n.clearCoat=this.clearCoat),this.clearCoatRoughness!==void 0&&(n.clearCoatRoughness=this.clearCoatRoughness),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,n.reflectivity=this.reflectivity),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.size!==void 0&&(n.size=this.size),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==rl&&(n.blending=this.blending),this.shading!==Ip&&(n.shading=this.shading),this.side!==oo&&(n.side=this.side),this.vertexColors!==Bh&&(n.vertexColors=this.vertexColors),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),n.skinning=this.skinning,n.morphTargets=this.morphTargets;function i(o){var l=[];for(var h in o){var u=o[h];delete u.metadata,l.push(u)}return l}if(t){var r=i(e.textures),a=i(e.images);r.length>0&&(n.textures=r),a.length>0&&(n.images=a)}return n},clone:function(){return new this.constructor().copy(this)},copy:function(e){this.name=e.name,this.fog=e.fog,this.lights=e.lights,this.blending=e.blending,this.side=e.side,this.shading=e.shading,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.alphaTest=e.alphaTest,this.premultipliedAlpha=e.premultipliedAlpha,this.overdraw=e.overdraw,this.visible=e.visible,this.clipShadows=e.clipShadows,this.clipIntersection=e.clipIntersection;var t=e.clippingPlanes,n=null;if(t!==null){var i=t.length;n=new Array(i);for(var r=0;r!==i;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this},update:function(){this.dispatchEvent({type:"update"})},dispose:function(){this.dispatchEvent({type:"dispose"})}};Object.assign(Ct.prototype,Hi.prototype);function ii(e){Ct.call(this),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,this.fragmentShader=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,e!==void 0&&(e.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}ii.prototype=Object.create(Ct.prototype);ii.prototype.constructor=ii;ii.prototype.isShaderMaterial=!0;ii.prototype.copy=function(e){return Ct.prototype.copy.call(this,e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=ci.clone(e.uniforms),this.defines=e.defines,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this.extensions=e.extensions,this};ii.prototype.toJSON=function(e){var t=Ct.prototype.toJSON.call(this,e);return t.uniforms=this.uniforms,t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t};function ga(e){Ct.call(this),this.type="MeshDepthMaterial",this.depthPacking=Wx,this.skinning=!1,this.morphTargets=!1,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.setValues(e)}ga.prototype=Object.create(Ct.prototype);ga.prototype.constructor=ga;ga.prototype.isMeshDepthMaterial=!0;ga.prototype.copy=function(e){return Ct.prototype.copy.call(this,e),this.depthPacking=e.depthPacking,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this};function dr(e,t){this.min=e!==void 0?e:new k(1/0,1/0,1/0),this.max=t!==void 0?t:new k(-1/0,-1/0,-1/0)}dr.prototype={constructor:dr,isBox3:!0,set:function(e,t){return this.min.copy(e),this.max.copy(t),this},setFromArray:function(e){for(var t=1/0,n=1/0,i=1/0,r=-1/0,a=-1/0,o=-1/0,l=0,h=e.length;l<h;l+=3){var u=e[l],f=e[l+1],d=e[l+2];u<t&&(t=u),f<n&&(n=f),d<i&&(i=d),u>r&&(r=u),f>a&&(a=f),d>o&&(o=d)}this.min.set(t,n,i),this.max.set(r,a,o)},setFromBufferAttribute:function(e){for(var t=1/0,n=1/0,i=1/0,r=-1/0,a=-1/0,o=-1/0,l=0,h=e.count;l<h;l++){var u=e.getX(l),f=e.getY(l),d=e.getZ(l);u<t&&(t=u),f<n&&(n=f),d<i&&(i=d),u>r&&(r=u),f>a&&(a=f),d>o&&(o=d)}this.min.set(t,n,i),this.max.set(r,a,o)},setFromPoints:function(e){this.makeEmpty();for(var t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this},setFromCenterAndSize:function(){var e=new k;return function(n,i){var r=e.copy(i).multiplyScalar(.5);return this.min.copy(n).sub(r),this.max.copy(n).add(r),this}}(),setFromObject:function(){var e=new k;return function(n){var i=this;return n.updateMatrixWorld(!0),this.makeEmpty(),n.traverse(function(r){var a,o,l=r.geometry;if(l!==void 0){if(l.isGeometry){var h=l.vertices;for(a=0,o=h.length;a<o;a++)e.copy(h[a]),e.applyMatrix4(r.matrixWorld),i.expandByPoint(e)}else if(l.isBufferGeometry){var u=l.attributes.position;if(u!==void 0)for(a=0,o=u.count;a<o;a++)e.fromAttribute(u,a).applyMatrix4(r.matrixWorld),i.expandByPoint(e)}}}),this}}(),clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.min.copy(e.min),this.max.copy(e.max),this},makeEmpty:function(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this},isEmpty:function(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z},getCenter:function(e){var t=e||new k;return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)},getSize:function(e){var t=e||new k;return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)},expandByPoint:function(e){return this.min.min(e),this.max.max(e),this},expandByVector:function(e){return this.min.sub(e),this.max.add(e),this},expandByScalar:function(e){return this.min.addScalar(-e),this.max.addScalar(e),this},containsPoint:function(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)},containsBox:function(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z},getParameter:function(e,t){var n=t||new k;return n.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))},intersectsBox:function(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)},intersectsSphere:function(){var e;return function(n){return e===void 0&&(e=new k),this.clampPoint(n.center,e),e.distanceToSquared(n.center)<=n.radius*n.radius}}(),intersectsPlane:function(e){var t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=e.constant&&n>=e.constant},clampPoint:function(e,t){var n=t||new k;return n.copy(e).clamp(this.min,this.max)},distanceToPoint:function(){var e=new k;return function(n){var i=e.copy(n).clamp(this.min,this.max);return i.sub(n).length()}}(),getBoundingSphere:function(){var e=new k;return function(n){var i=n||new Yn;return this.getCenter(i.center),i.radius=this.getSize(e).length()*.5,i}}(),intersect:function(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this},union:function(e){return this.min.min(e.min),this.max.max(e.max),this},applyMatrix4:function(){var e=[new k,new k,new k,new k,new k,new k,new k,new k];return function(n){return this.isEmpty()?this:(e[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(n),e[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(n),e[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(n),e[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(n),e[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(n),e[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(n),e[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(n),e[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(n),this.setFromPoints(e),this)}}(),translate:function(e){return this.min.add(e),this.max.add(e),this},equals:function(e){return e.min.equals(this.min)&&e.max.equals(this.max)}};function Yn(e,t){this.center=e!==void 0?e:new k,this.radius=t!==void 0?t:0}Yn.prototype={constructor:Yn,set:function(e,t){return this.center.copy(e),this.radius=t,this},setFromPoints:function(){var e=new dr;return function(n,i){var r=this.center;i!==void 0?r.copy(i):e.setFromPoints(n).getCenter(r);for(var a=0,o=0,l=n.length;o<l;o++)a=Math.max(a,r.distanceToSquared(n[o]));return this.radius=Math.sqrt(a),this}}(),clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.center.copy(e.center),this.radius=e.radius,this},empty:function(){return this.radius<=0},containsPoint:function(e){return e.distanceToSquared(this.center)<=this.radius*this.radius},distanceToPoint:function(e){return e.distanceTo(this.center)-this.radius},intersectsSphere:function(e){var t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t},intersectsBox:function(e){return e.intersectsSphere(this)},intersectsPlane:function(e){return Math.abs(this.center.dot(e.normal)-e.constant)<=this.radius},clampPoint:function(e,t){var n=this.center.distanceToSquared(e),i=t||new k;return i.copy(e),n>this.radius*this.radius&&(i.sub(this.center).normalize(),i.multiplyScalar(this.radius).add(this.center)),i},getBoundingBox:function(e){var t=e||new dr;return t.set(this.center,this.center),t.expandByScalar(this.radius),t},applyMatrix4:function(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this},translate:function(e){return this.center.add(e),this},equals:function(e){return e.center.equals(this.center)&&e.radius===this.radius}};function Vi(){this.elements=new Float32Array([1,0,0,0,1,0,0,0,1]),arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}Vi.prototype={constructor:Vi,isMatrix3:!0,set:function(e,t,n,i,r,a,o,l,h){var u=this.elements;return u[0]=e,u[1]=i,u[2]=o,u[3]=t,u[4]=r,u[5]=l,u[6]=n,u[7]=a,u[8]=h,this},identity:function(){return this.set(1,0,0,0,1,0,0,0,1),this},clone:function(){return new this.constructor().fromArray(this.elements)},copy:function(e){var t=e.elements;return this.set(t[0],t[3],t[6],t[1],t[4],t[7],t[2],t[5],t[8]),this},setFromMatrix4:function(e){var t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this},applyToVector3Array:function(){var e;return function(n,i,r){e===void 0&&(e=new k),i===void 0&&(i=0),r===void 0&&(r=n.length);for(var a=0,o=i;a<r;a+=3,o+=3)e.fromArray(n,o),e.applyMatrix3(this),e.toArray(n,o);return n}}(),applyToBufferAttribute:function(){var e;return function(n){e===void 0&&(e=new k);for(var i=0,r=n.count;i<r;i++)e.x=n.getX(i),e.y=n.getY(i),e.z=n.getZ(i),e.applyMatrix3(this),n.setXYZ(i,e.x,e.y,e.z);return n}}(),multiplyScalar:function(e){var t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this},determinant:function(){var e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],o=e[5],l=e[6],h=e[7],u=e[8];return t*a*u-t*o*h-n*r*u+n*o*l+i*r*h-i*a*l},getInverse:function(e,t){e&&e.isMatrix4&&console.error("THREE.Matrix3.getInverse no longer takes a Matrix4 argument.");var n=e.elements,i=this.elements,r=n[0],a=n[1],o=n[2],l=n[3],h=n[4],u=n[5],f=n[6],d=n[7],p=n[8],g=p*h-u*d,x=u*f-p*l,y=d*l-h*f,_=r*g+a*x+o*y;if(_===0){var v="THREE.Matrix3.getInverse(): can't invert matrix, determinant is 0";if(t===!0)throw new Error(v);return console.warn(v),this.identity()}var w=1/_;return i[0]=g*w,i[1]=(o*d-p*a)*w,i[2]=(u*a-o*h)*w,i[3]=x*w,i[4]=(p*r-o*f)*w,i[5]=(o*l-u*r)*w,i[6]=y*w,i[7]=(a*f-d*r)*w,i[8]=(h*r-a*l)*w,this},transpose:function(){var e,t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this},getNormalMatrix:function(e){return this.setFromMatrix4(e).getInverse(this).transpose()},transposeIntoArray:function(e){var t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this},fromArray:function(e,t){t===void 0&&(t=0);for(var n=0;n<9;n++)this.elements[n]=e[n+t];return this},toArray:function(e,t){e===void 0&&(e=[]),t===void 0&&(t=0);var n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}};function wi(e,t){this.normal=e!==void 0?e:new k(1,0,0),this.constant=t!==void 0?t:0}wi.prototype={constructor:wi,set:function(e,t){return this.normal.copy(e),this.constant=t,this},setComponents:function(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this},setFromNormalAndCoplanarPoint:function(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this},setFromCoplanarPoints:function(){var e=new k,t=new k;return function(i,r,a){var o=e.subVectors(a,r).cross(t.subVectors(i,r)).normalize();return this.setFromNormalAndCoplanarPoint(o,i),this}}(),clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.normal.copy(e.normal),this.constant=e.constant,this},normalize:function(){var e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this},negate:function(){return this.constant*=-1,this.normal.negate(),this},distanceToPoint:function(e){return this.normal.dot(e)+this.constant},distanceToSphere:function(e){return this.distanceToPoint(e.center)-e.radius},projectPoint:function(e,t){return this.orthoPoint(e,t).sub(e).negate()},orthoPoint:function(e,t){var n=this.distanceToPoint(e),i=t||new k;return i.copy(this.normal).multiplyScalar(n)},intersectLine:function(){var e=new k;return function(n,i){var r=i||new k,a=n.delta(e),o=this.normal.dot(a);if(o===0)return this.distanceToPoint(n.start)===0?r.copy(n.start):void 0;var l=-(n.start.dot(this.normal)+this.constant)/o;if(!(l<0||l>1))return r.copy(a).multiplyScalar(l).add(n.start)}}(),intersectsLine:function(e){var t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0},intersectsBox:function(e){return e.intersectsPlane(this)},intersectsSphere:function(e){return e.intersectsPlane(this)},coplanarPoint:function(e){var t=e||new k;return t.copy(this.normal).multiplyScalar(-this.constant)},applyMatrix4:function(){var e=new k,t=new Vi;return function(i,r){var a=this.coplanarPoint(e).applyMatrix4(i),o=r||t.getNormalMatrix(i),l=this.normal.applyMatrix3(o).normalize();return this.constant=-a.dot(l),this}}(),translate:function(e){return this.constant=this.constant-e.dot(this.normal),this},equals:function(e){return e.normal.equals(this.normal)&&e.constant===this.constant}};function jl(e,t,n,i,r,a){this.planes=[e!==void 0?e:new wi,t!==void 0?t:new wi,n!==void 0?n:new wi,i!==void 0?i:new wi,r!==void 0?r:new wi,a!==void 0?a:new wi]}jl.prototype={constructor:jl,set:function(e,t,n,i,r,a){var o=this.planes;return o[0].copy(e),o[1].copy(t),o[2].copy(n),o[3].copy(i),o[4].copy(r),o[5].copy(a),this},clone:function(){return new this.constructor().copy(this)},copy:function(e){for(var t=this.planes,n=0;n<6;n++)t[n].copy(e.planes[n]);return this},setFromMatrix:function(e){var t=this.planes,n=e.elements,i=n[0],r=n[1],a=n[2],o=n[3],l=n[4],h=n[5],u=n[6],f=n[7],d=n[8],p=n[9],g=n[10],x=n[11],y=n[12],_=n[13],v=n[14],w=n[15];return t[0].setComponents(o-i,f-l,x-d,w-y).normalize(),t[1].setComponents(o+i,f+l,x+d,w+y).normalize(),t[2].setComponents(o+r,f+h,x+p,w+_).normalize(),t[3].setComponents(o-r,f-h,x-p,w-_).normalize(),t[4].setComponents(o-a,f-u,x-g,w-v).normalize(),t[5].setComponents(o+a,f+u,x+g,w+v).normalize(),this},intersectsObject:function(){var e=new Yn;return function(n){var i=n.geometry;return i.boundingSphere===null&&i.computeBoundingSphere(),e.copy(i.boundingSphere).applyMatrix4(n.matrixWorld),this.intersectsSphere(e)}}(),intersectsSprite:function(){var e=new Yn;return function(n){return e.center.set(0,0,0),e.radius=.7071067811865476,e.applyMatrix4(n.matrixWorld),this.intersectsSphere(e)}}(),intersectsSphere:function(e){for(var t=this.planes,n=e.center,i=-e.radius,r=0;r<6;r++){var a=t[r].distanceToPoint(n);if(a<i)return!1}return!0},intersectsBox:function(){var e=new k,t=new k;return function(i){for(var r=this.planes,a=0;a<6;a++){var o=r[a];e.x=o.normal.x>0?i.min.x:i.max.x,t.x=o.normal.x>0?i.max.x:i.min.x,e.y=o.normal.y>0?i.min.y:i.max.y,t.y=o.normal.y>0?i.max.y:i.min.y,e.z=o.normal.z>0?i.min.z:i.max.z,t.z=o.normal.z>0?i.max.z:i.min.z;var l=o.distanceToPoint(e),h=o.distanceToPoint(t);if(l<0&&h<0)return!1}return!0}}(),containsPoint:function(e){for(var t=this.planes,n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}};function ey(e,t,n,i){var r=e.context,a=e.state,o=new jl,l=new xt,h=t.shadows,u=new Ke,f=new Ke(i.maxTextureSize,i.maxTextureSize),d=new k,p=new k,g=[],x=1,y=2,_=(x|y)+1,v=new Array(_),w=new Array(_),M={},T=[new k(1,0,0),new k(-1,0,0),new k(0,0,1),new k(0,0,-1),new k(0,1,0),new k(0,-1,0)],A=[new k(0,1,0),new k(0,1,0),new k(0,1,0),new k(0,1,0),new k(0,0,1),new k(0,0,-1)],P=[new Kt,new Kt,new Kt,new Kt,new Kt,new Kt],b=new ga;b.depthPacking=Xx,b.clipping=!0;for(var U=go.distanceRGBA,S=ci.clone(U.uniforms),R=0;R!==_;++R){var V=(R&x)!==0,W=(R&y)!==0,L=b.clone();L.morphTargets=V,L.skinning=W,v[R]=L;var I=new ii({defines:{USE_SHADOWMAP:""},uniforms:S,vertexShader:U.vertexShader,fragmentShader:U.fragmentShader,morphTargets:V,skinning:W,clipping:!0});w[R]=I}var z=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=Up,this.renderReverseSided=!0,this.renderSingleSided=!0,this.render=function($,ne){if(z.enabled!==!1&&!(z.autoUpdate===!1&&z.needsUpdate===!1)&&h.length!==0){a.buffers.color.setClear(1,1,1,1),a.disable(r.BLEND),a.setDepthTest(!0),a.setScissorTest(!1);for(var ae,j,K=0,Q=h.length;K<Q;K++){var he=h[K],me=he.shadow;if(me===void 0){console.warn("THREE.WebGLShadowMap:",he,"has no shadow.");continue}var ge=me.camera;if(u.copy(me.mapSize),u.min(f),he&&he.isPointLight){ae=6,j=!0;var Pe=u.x,we=u.y;P[0].set(Pe*2,we,Pe,we),P[1].set(0,we,Pe,we),P[2].set(Pe*3,we,Pe,we),P[3].set(Pe,we,Pe,we),P[4].set(Pe*3,0,Pe,we),P[5].set(Pe,0,Pe,we),u.x*=4,u.y*=2}else ae=1,j=!1;if(me.map===null){var Se={minFilter:Ai,magFilter:Ai,format:fr};me.map=new al(u.x,u.y,Se),ge.updateProjectionMatrix()}me.isSpotLightShadow&&me.update(he),me&&me.isRectAreaLightShadow&&me.update(he);var ht=me.map,J=me.matrix;p.setFromMatrixPosition(he.matrixWorld),ge.position.copy(p),e.setRenderTarget(ht),e.clear();for(var se=0;se<ae;se++){if(j){d.copy(ge.position),d.add(T[se]),ge.up.copy(A[se]),ge.lookAt(d);var Qe=P[se];a.viewport(Qe)}else d.setFromMatrixPosition(he.target.matrixWorld),ge.lookAt(d);ge.updateMatrixWorld(),ge.matrixWorldInverse.getInverse(ge.matrixWorld),J.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),J.multiply(ge.projectionMatrix),J.multiply(ge.matrixWorldInverse),l.multiplyMatrices(ge.projectionMatrix,ge.matrixWorldInverse),o.setFromMatrix(l),g.length=0,Y($,ne,ge);for(var ze=0,Re=g.length;ze<Re;ze++){var et=g[ze],qe=n.update(et),We=et.material;if(We&&We.isMultiMaterial)for(var tt=qe.groups,ot=We.materials,pt=0,Dt=tt.length;pt<Dt;pt++){var G=tt[pt],N=ot[G.materialIndex];if(N.visible===!0){var ue=X(et,N,j,p);e.renderBufferDirect(ge,null,qe,ue,et,G)}}else{var ue=X(et,We,j,p);e.renderBufferDirect(ge,null,qe,ue,et,null)}}}}var Ce=e.getClearColor(),be=e.getClearAlpha();e.setClearColor(Ce,be),z.needsUpdate=!1}};function X($,ne,ae,j){var K=$.geometry,Q=null,he=v,me=$.customDepthMaterial;if(ae&&(he=w,me=$.customDistanceMaterial),me)Q=me;else{var ge=!1;ne.morphTargets&&(K&&K.isBufferGeometry?ge=K.morphAttributes&&K.morphAttributes.position&&K.morphAttributes.position.length>0:K&&K.isGeometry&&(ge=K.morphTargets&&K.morphTargets.length>0));var Pe=$.isSkinnedMesh&&ne.skinning,we=0;ge&&(we|=x),Pe&&(we|=y),Q=he[we]}if(e.localClippingEnabled&&ne.clipShadows===!0&&ne.clippingPlanes.length!==0){var Se=Q.uuid,ht=ne.uuid,J=M[Se];J===void 0&&(J={},M[Se]=J);var se=J[ht];se===void 0&&(se=Q.clone(),J[ht]=se),Q=se}Q.visible=ne.visible,Q.wireframe=ne.wireframe;var Qe=ne.side;return z.renderSingleSided&&Qe==il&&(Qe=oo),z.renderReverseSided&&(Qe===oo?Qe=pa:Qe===pa&&(Qe=oo)),Q.side=Qe,Q.clipShadows=ne.clipShadows,Q.clippingPlanes=ne.clippingPlanes,Q.wireframeLinewidth=ne.wireframeLinewidth,Q.linewidth=ne.linewidth,ae&&Q.uniforms.lightPos!==void 0&&Q.uniforms.lightPos.value.copy(j),Q}function Y($,ne,ae){if($.visible!==!1){var j=($.layers.mask&ne.layers.mask)!==0;if(j&&($.isMesh||$.isLine||$.isPoints)&&$.castShadow&&($.frustumCulled===!1||o.intersectsObject($)===!0)){var K=$.material;K.visible===!0&&($.modelViewMatrix.multiplyMatrices(ae.matrixWorldInverse,$.matrixWorld),g.push($))}for(var Q=$.children,he=0,me=Q.length;he<me;he++)Y(Q[he],ne,ae)}}}function _a(e,t){this.origin=e!==void 0?e:new k,this.direction=t!==void 0?t:new k}_a.prototype={constructor:_a,set:function(e,t){return this.origin.copy(e),this.direction.copy(t),this},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this},at:function(e,t){var n=t||new k;return n.copy(this.direction).multiplyScalar(e).add(this.origin)},lookAt:function(e){return this.direction.copy(e).sub(this.origin).normalize(),this},recast:function(){var e=new k;return function(n){return this.origin.copy(this.at(n,e)),this}}(),closestPointToPoint:function(e,t){var n=t||new k;n.subVectors(e,this.origin);var i=n.dot(this.direction);return i<0?n.copy(this.origin):n.copy(this.direction).multiplyScalar(i).add(this.origin)},distanceToPoint:function(e){return Math.sqrt(this.distanceSqToPoint(e))},distanceSqToPoint:function(){var e=new k;return function(n){var i=e.subVectors(n,this.origin).dot(this.direction);return i<0?this.origin.distanceToSquared(n):(e.copy(this.direction).multiplyScalar(i).add(this.origin),e.distanceToSquared(n))}}(),distanceSqToSegment:function(){var e=new k,t=new k,n=new k;return function(r,a,o,l){e.copy(r).add(a).multiplyScalar(.5),t.copy(a).sub(r).normalize(),n.copy(this.origin).sub(e);var h=r.distanceTo(a)*.5,u=-this.direction.dot(t),f=n.dot(this.direction),d=-n.dot(t),p=n.lengthSq(),g=Math.abs(1-u*u),x,y,_,v;if(g>0)if(x=u*d-f,y=u*f-d,v=h*g,x>=0)if(y>=-v)if(y<=v){var w=1/g;x*=w,y*=w,_=x*(x+u*y+2*f)+y*(u*x+y+2*d)+p}else y=h,x=Math.max(0,-(u*y+f)),_=-x*x+y*(y+2*d)+p;else y=-h,x=Math.max(0,-(u*y+f)),_=-x*x+y*(y+2*d)+p;else y<=-v?(x=Math.max(0,-(-u*h+f)),y=x>0?-h:Math.min(Math.max(-h,-d),h),_=-x*x+y*(y+2*d)+p):y<=v?(x=0,y=Math.min(Math.max(-h,-d),h),_=y*(y+2*d)+p):(x=Math.max(0,-(u*h+f)),y=x>0?h:Math.min(Math.max(-h,-d),h),_=-x*x+y*(y+2*d)+p);else y=u>0?-h:h,x=Math.max(0,-(u*y+f)),_=-x*x+y*(y+2*d)+p;return o&&o.copy(this.direction).multiplyScalar(x).add(this.origin),l&&l.copy(t).multiplyScalar(y).add(e),_}}(),intersectSphere:function(){var e=new k;return function(n,i){e.subVectors(n.center,this.origin);var r=e.dot(this.direction),a=e.dot(e)-r*r,o=n.radius*n.radius;if(a>o)return null;var l=Math.sqrt(o-a),h=r-l,u=r+l;return h<0&&u<0?null:h<0?this.at(u,i):this.at(h,i)}}(),intersectsSphere:function(e){return this.distanceToPoint(e.center)<=e.radius},distanceToPlane:function(e){var t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;var n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null},intersectPlane:function(e,t){var n=this.distanceToPlane(e);return n===null?null:this.at(n,t)},intersectsPlane:function(e){var t=e.distanceToPoint(this.origin);if(t===0)return!0;var n=e.normal.dot(this.direction);return n*t<0},intersectBox:function(e,t){var n,i,r,a,o,l,h=1/this.direction.x,u=1/this.direction.y,f=1/this.direction.z,d=this.origin;return h>=0?(n=(e.min.x-d.x)*h,i=(e.max.x-d.x)*h):(n=(e.max.x-d.x)*h,i=(e.min.x-d.x)*h),u>=0?(r=(e.min.y-d.y)*u,a=(e.max.y-d.y)*u):(r=(e.max.y-d.y)*u,a=(e.min.y-d.y)*u),n>a||r>i||((r>n||n!==n)&&(n=r),(a<i||i!==i)&&(i=a),f>=0?(o=(e.min.z-d.z)*f,l=(e.max.z-d.z)*f):(o=(e.max.z-d.z)*f,l=(e.min.z-d.z)*f),n>l||o>i)||((o>n||n!==n)&&(n=o),(l<i||i!==i)&&(i=l),i<0)?null:this.at(n>=0?n:i,t)},intersectsBox:function(){var e=new k;return function(n){return this.intersectBox(n,e)!==null}}(),intersectTriangle:function(){var e=new k,t=new k,n=new k,i=new k;return function(a,o,l,h,u){t.subVectors(o,a),n.subVectors(l,a),i.crossVectors(t,n);var f=this.direction.dot(i),d;if(f>0){if(h)return null;d=1}else if(f<0)d=-1,f=-f;else return null;e.subVectors(this.origin,a);var p=d*this.direction.dot(n.crossVectors(e,n));if(p<0)return null;var g=d*this.direction.dot(t.cross(e));if(g<0||p+g>f)return null;var x=-d*e.dot(i);return x<0?null:this.at(x/f,u)}}(),applyMatrix4:function(e){return this.direction.add(this.origin).applyMatrix4(e),this.origin.applyMatrix4(e),this.direction.sub(this.origin),this.direction.normalize(),this},equals:function(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}};function xa(e,t,n,i){this._x=e||0,this._y=t||0,this._z=n||0,this._order=i||xa.DefaultOrder}xa.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];xa.DefaultOrder="XYZ";xa.prototype={constructor:xa,isEuler:!0,get x(){return this._x},set x(e){this._x=e,this.onChangeCallback()},get y(){return this._y},set y(e){this._y=e,this.onChangeCallback()},get z(){return this._z},set z(e){this._z=e,this.onChangeCallback()},get order(){return this._order},set order(e){this._order=e,this.onChangeCallback()},set:function(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._order=i||this._order,this.onChangeCallback(),this},clone:function(){return new this.constructor(this._x,this._y,this._z,this._order)},copy:function(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this.onChangeCallback(),this},setFromRotationMatrix:function(e,t,n){var i=St.clamp,r=e.elements,a=r[0],o=r[4],l=r[8],h=r[1],u=r[5],f=r[9],d=r[2],p=r[6],g=r[10];return t=t||this._order,t==="XYZ"?(this._y=Math.asin(i(l,-1,1)),Math.abs(l)<.99999?(this._x=Math.atan2(-f,g),this._z=Math.atan2(-o,a)):(this._x=Math.atan2(p,u),this._z=0)):t==="YXZ"?(this._x=Math.asin(-i(f,-1,1)),Math.abs(f)<.99999?(this._y=Math.atan2(l,g),this._z=Math.atan2(h,u)):(this._y=Math.atan2(-d,a),this._z=0)):t==="ZXY"?(this._x=Math.asin(i(p,-1,1)),Math.abs(p)<.99999?(this._y=Math.atan2(-d,g),this._z=Math.atan2(-o,u)):(this._y=0,this._z=Math.atan2(h,a))):t==="ZYX"?(this._y=Math.asin(-i(d,-1,1)),Math.abs(d)<.99999?(this._x=Math.atan2(p,g),this._z=Math.atan2(h,a)):(this._x=0,this._z=Math.atan2(-o,u))):t==="YZX"?(this._z=Math.asin(i(h,-1,1)),Math.abs(h)<.99999?(this._x=Math.atan2(-f,u),this._y=Math.atan2(-d,a)):(this._x=0,this._y=Math.atan2(l,g))):t==="XZY"?(this._z=Math.asin(-i(o,-1,1)),Math.abs(o)<.99999?(this._x=Math.atan2(p,u),this._y=Math.atan2(l,a)):(this._x=Math.atan2(-f,g),this._y=0)):console.warn("THREE.Euler: .setFromRotationMatrix() given unsupported order: "+t),this._order=t,n!==!1&&this.onChangeCallback(),this},setFromQuaternion:function(){var e;return function(n,i,r){return e===void 0&&(e=new xt),e.makeRotationFromQuaternion(n),this.setFromRotationMatrix(e,i,r)}}(),setFromVector3:function(e,t){return this.set(e.x,e.y,e.z,t||this._order)},reorder:function(){var e=new bn;return function(n){return e.setFromEuler(this),this.setFromQuaternion(e,n)}}(),equals:function(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order},fromArray:function(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this.onChangeCallback(),this},toArray:function(e,t){return e===void 0&&(e=[]),t===void 0&&(t=0),e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e},toVector3:function(e){return e?e.set(this._x,this._y,this._z):new k(this._x,this._y,this._z)},onChange:function(e){return this.onChangeCallback=e,this},onChangeCallback:function(){}};function sh(){this.mask=1}sh.prototype={constructor:sh,set:function(e){this.mask=1<<e},enable:function(e){this.mask|=1<<e},toggle:function(e){this.mask^=1<<e},disable:function(e){this.mask&=~(1<<e)},test:function(e){return(this.mask&e.mask)!==0}};var pI=0;function it(){Object.defineProperty(this,"id",{value:pI++}),this.uuid=St.generateUUID(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=it.DefaultUp.clone();var e=new k,t=new xa,n=new bn,i=new k(1,1,1);function r(){n.setFromEuler(t,!1)}function a(){t.setFromQuaternion(n,void 0,!1)}t.onChange(r),n.onChange(a),Object.defineProperties(this,{position:{enumerable:!0,value:e},rotation:{enumerable:!0,value:t},quaternion:{enumerable:!0,value:n},scale:{enumerable:!0,value:i},modelViewMatrix:{value:new xt},normalMatrix:{value:new Vi}}),this.matrix=new xt,this.matrixWorld=new xt,this.matrixAutoUpdate=it.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new sh,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.userData={},this.onBeforeRender=function(){},this.onAfterRender=function(){}}it.DefaultUp=new k(0,1,0);it.DefaultMatrixAutoUpdate=!0;Object.assign(it.prototype,Hi.prototype,{isObject3D:!0,applyMatrix:function(e){this.matrix.multiplyMatrices(e,this.matrix),this.matrix.decompose(this.position,this.quaternion,this.scale)},setRotationFromAxisAngle:function(e,t){this.quaternion.setFromAxisAngle(e,t)},setRotationFromEuler:function(e){this.quaternion.setFromEuler(e,!0)},setRotationFromMatrix:function(e){this.quaternion.setFromRotationMatrix(e)},setRotationFromQuaternion:function(e){this.quaternion.copy(e)},rotateOnAxis:function(){var e=new bn;return function(n,i){return e.setFromAxisAngle(n,i),this.quaternion.multiply(e),this}}(),rotateX:function(){var e=new k(1,0,0);return function(n){return this.rotateOnAxis(e,n)}}(),rotateY:function(){var e=new k(0,1,0);return function(n){return this.rotateOnAxis(e,n)}}(),rotateZ:function(){var e=new k(0,0,1);return function(n){return this.rotateOnAxis(e,n)}}(),translateOnAxis:function(){var e=new k;return function(n,i){return e.copy(n).applyQuaternion(this.quaternion),this.position.add(e.multiplyScalar(i)),this}}(),translateX:function(){var e=new k(1,0,0);return function(n){return this.translateOnAxis(e,n)}}(),translateY:function(){var e=new k(0,1,0);return function(n){return this.translateOnAxis(e,n)}}(),translateZ:function(){var e=new k(0,0,1);return function(n){return this.translateOnAxis(e,n)}}(),localToWorld:function(e){return e.applyMatrix4(this.matrixWorld)},worldToLocal:function(){var e=new xt;return function(n){return n.applyMatrix4(e.getInverse(this.matrixWorld))}}(),lookAt:function(){var e=new xt;return function(n){e.lookAt(n,this.position,this.up),this.quaternion.setFromRotationMatrix(e)}}(),add:function(e){if(arguments.length>1){for(var t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,e.dispatchEvent({type:"added"}),this.children.push(e)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)},remove:function(e){if(arguments.length>1)for(var t=0;t<arguments.length;t++)this.remove(arguments[t]);var n=this.children.indexOf(e);n!==-1&&(e.parent=null,e.dispatchEvent({type:"removed"}),this.children.splice(n,1))},getObjectById:function(e){return this.getObjectByProperty("id",e)},getObjectByName:function(e){return this.getObjectByProperty("name",e)},getObjectByProperty:function(e,t){if(this[e]===t)return this;for(var n=0,i=this.children.length;n<i;n++){var r=this.children[n],a=r.getObjectByProperty(e,t);if(a!==void 0)return a}},getWorldPosition:function(e){var t=e||new k;return this.updateMatrixWorld(!0),t.setFromMatrixPosition(this.matrixWorld)},getWorldQuaternion:function(){var e=new k,t=new k;return function(i){var r=i||new bn;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(e,r,t),r}}(),getWorldRotation:function(){var e=new bn;return function(n){var i=n||new xa;return this.getWorldQuaternion(e),i.setFromQuaternion(e,this.rotation.order,!1)}}(),getWorldScale:function(){var e=new k,t=new bn;return function(i){var r=i||new k;return this.updateMatrixWorld(!0),this.matrixWorld.decompose(e,t,r),r}}(),getWorldDirection:function(){var e=new bn;return function(n){var i=n||new k;return this.getWorldQuaternion(e),i.set(0,0,1).applyQuaternion(e)}}(),raycast:function(){},traverse:function(e){e(this);for(var t=this.children,n=0,i=t.length;n<i;n++)t[n].traverse(e)},traverseVisible:function(e){if(this.visible!==!1){e(this);for(var t=this.children,n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}},traverseAncestors:function(e){var t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))},updateMatrix:function(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0},updateMatrixWorld:function(e){this.matrixAutoUpdate===!0&&this.updateMatrix(),(this.matrixWorldNeedsUpdate===!0||e===!0)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);for(var t=this.children,n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)},toJSON:function(e){var t=e===void 0||e==="",n={};t&&(e={geometries:{},materials:{},textures:{},images:{}},n.metadata={version:4.4,type:"Object",generator:"Object3D.toJSON"});var i={};if(i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),i.matrix=this.matrix.toArray(),this.geometry!==void 0&&(e.geometries[this.geometry.uuid]===void 0&&(e.geometries[this.geometry.uuid]=this.geometry.toJSON(e)),i.geometry=this.geometry.uuid),this.material!==void 0&&(e.materials[this.material.uuid]===void 0&&(e.materials[this.material.uuid]=this.material.toJSON(e)),i.material=this.material.uuid),this.children.length>0){i.children=[];for(var r=0;r<this.children.length;r++)i.children.push(this.children[r].toJSON(e).object)}if(t){var a=u(e.geometries),o=u(e.materials),l=u(e.textures),h=u(e.images);a.length>0&&(n.geometries=a),o.length>0&&(n.materials=o),l.length>0&&(n.textures=l),h.length>0&&(n.images=h)}return n.object=i,n;function u(f){var d=[];for(var p in f){var g=f[p];delete g.metadata,d.push(g)}return d}},clone:function(e){return new this.constructor().copy(this,e)},copy:function(e,t){if(t===void 0&&(t=!0),this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(var n=0;n<e.children.length;n++){var i=e.children[n];this.add(i.clone())}return this}});function qa(e,t){this.start=e!==void 0?e:new k,this.end=t!==void 0?t:new k}qa.prototype={constructor:qa,set:function(e,t){return this.start.copy(e),this.end.copy(t),this},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.start.copy(e.start),this.end.copy(e.end),this},getCenter:function(e){var t=e||new k;return t.addVectors(this.start,this.end).multiplyScalar(.5)},delta:function(e){var t=e||new k;return t.subVectors(this.end,this.start)},distanceSq:function(){return this.start.distanceToSquared(this.end)},distance:function(){return this.start.distanceTo(this.end)},at:function(e,t){var n=t||new k;return this.delta(n).multiplyScalar(e).add(this.start)},closestPointToPointParameter:function(){var e=new k,t=new k;return function(i,r){e.subVectors(i,this.start),t.subVectors(this.end,this.start);var a=t.dot(t),o=t.dot(e),l=o/a;return r&&(l=St.clamp(l,0,1)),l}}(),closestPointToPoint:function(e,t,n){var i=this.closestPointToPointParameter(e,t),r=n||new k;return this.delta(r).multiplyScalar(i).add(this.start)},applyMatrix4:function(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this},equals:function(e){return e.start.equals(this.start)&&e.end.equals(this.end)}};function Gi(e,t,n){this.a=e!==void 0?e:new k,this.b=t!==void 0?t:new k,this.c=n!==void 0?n:new k}Gi.normal=function(){var e=new k;return function(n,i,r,a){var o=a||new k;o.subVectors(r,i),e.subVectors(n,i),o.cross(e);var l=o.lengthSq();return l>0?o.multiplyScalar(1/Math.sqrt(l)):o.set(0,0,0)}}();Gi.barycoordFromPoint=function(){var e=new k,t=new k,n=new k;return function(r,a,o,l,h){e.subVectors(l,a),t.subVectors(o,a),n.subVectors(r,a);var u=e.dot(e),f=e.dot(t),d=e.dot(n),p=t.dot(t),g=t.dot(n),x=u*p-f*f,y=h||new k;if(x===0)return y.set(-2,-1,-1);var _=1/x,v=(p*d-f*g)*_,w=(u*g-f*d)*_;return y.set(1-v-w,w,v)}}();Gi.containsPoint=function(){var e=new k;return function(n,i,r,a){var o=Gi.barycoordFromPoint(n,i,r,a,e);return o.x>=0&&o.y>=0&&o.x+o.y<=1}}();Gi.prototype={constructor:Gi,set:function(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this},setFromPointsAndIndices:function(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this},area:function(){var e=new k,t=new k;return function(){return e.subVectors(this.c,this.b),t.subVectors(this.a,this.b),e.cross(t).length()*.5}}(),midpoint:function(e){var t=e||new k;return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)},normal:function(e){return Gi.normal(this.a,this.b,this.c,e)},plane:function(e){var t=e||new wi;return t.setFromCoplanarPoints(this.a,this.b,this.c)},barycoordFromPoint:function(e,t){return Gi.barycoordFromPoint(e,this.a,this.b,this.c,t)},containsPoint:function(e){return Gi.containsPoint(e,this.a,this.b,this.c)},closestPointToPoint:function(){var e,t,n,i;return function(a,o){e===void 0&&(e=new wi,t=[new qa,new qa,new qa],n=new k,i=new k);var l=o||new k,h=1/0;if(e.setFromCoplanarPoints(this.a,this.b,this.c),e.projectPoint(a,n),this.containsPoint(n)===!0)l.copy(n);else{t[0].set(this.a,this.b),t[1].set(this.b,this.c),t[2].set(this.c,this.a);for(var u=0;u<t.length;u++){t[u].closestPointToPoint(n,!0,i);var f=n.distanceToSquared(i);f<h&&(h=f,l.copy(i))}}return l}}(),equals:function(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}};function Ri(e,t,n,i,r,a){this.a=e,this.b=t,this.c=n,this.normal=i&&i.isVector3?i:new k,this.vertexNormals=Array.isArray(i)?i:[],this.color=r&&r.isColor?r:new dt,this.vertexColors=Array.isArray(r)?r:[],this.materialIndex=a!==void 0?a:0}Ri.prototype={constructor:Ri,clone:function(){return new this.constructor().copy(this)},copy:function(e){this.a=e.a,this.b=e.b,this.c=e.c,this.normal.copy(e.normal),this.color.copy(e.color),this.materialIndex=e.materialIndex;for(var t=0,n=e.vertexNormals.length;t<n;t++)this.vertexNormals[t]=e.vertexNormals[t].clone();for(var t=0,n=e.vertexColors.length;t<n;t++)this.vertexColors[t]=e.vertexColors[t].clone();return this}};function di(e){Ct.call(this),this.type="MeshBasicMaterial",this.color=new dt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Fc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.lights=!1,this.setValues(e)}di.prototype=Object.create(Ct.prototype);di.prototype.constructor=di;di.prototype.isMeshBasicMaterial=!0;di.prototype.copy=function(e){return Ct.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this};function je(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.uuid=St.generateUUID(),this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n===!0,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.onUploadCallback=function(){},this.version=0}je.prototype={constructor:je,isBufferAttribute:!0,set needsUpdate(e){e===!0&&this.version++},setArray:function(e){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.count=e!==void 0?e.length/this.itemSize:0,this.array=e},setDynamic:function(e){return this.dynamic=e,this},copy:function(e){return this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.dynamic=e.dynamic,this},copyAt:function(e,t,n){e*=this.itemSize,n*=t.itemSize;for(var i=0,r=this.itemSize;i<r;i++)this.array[e+i]=t.array[n+i];return this},copyArray:function(e){return this.array.set(e),this},copyColorsArray:function(e){for(var t=this.array,n=0,i=0,r=e.length;i<r;i++){var a=e[i];a===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),a=new dt),t[n++]=a.r,t[n++]=a.g,t[n++]=a.b}return this},copyIndicesArray:function(e){for(var t=this.array,n=0,i=0,r=e.length;i<r;i++){var a=e[i];t[n++]=a.a,t[n++]=a.b,t[n++]=a.c}return this},copyVector2sArray:function(e){for(var t=this.array,n=0,i=0,r=e.length;i<r;i++){var a=e[i];a===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),a=new Ke),t[n++]=a.x,t[n++]=a.y}return this},copyVector3sArray:function(e){for(var t=this.array,n=0,i=0,r=e.length;i<r;i++){var a=e[i];a===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),a=new k),t[n++]=a.x,t[n++]=a.y,t[n++]=a.z}return this},copyVector4sArray:function(e){for(var t=this.array,n=0,i=0,r=e.length;i<r;i++){var a=e[i];a===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),a=new Kt),t[n++]=a.x,t[n++]=a.y,t[n++]=a.z,t[n++]=a.w}return this},set:function(e,t){return t===void 0&&(t=0),this.array.set(e,t),this},getX:function(e){return this.array[e*this.itemSize]},setX:function(e,t){return this.array[e*this.itemSize]=t,this},getY:function(e){return this.array[e*this.itemSize+1]},setY:function(e,t){return this.array[e*this.itemSize+1]=t,this},getZ:function(e){return this.array[e*this.itemSize+2]},setZ:function(e,t){return this.array[e*this.itemSize+2]=t,this},getW:function(e){return this.array[e*this.itemSize+3]},setW:function(e,t){return this.array[e*this.itemSize+3]=t,this},setXY:function(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this},setXYZ:function(e,t,n,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this},setXYZW:function(e,t,n,i,r){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=r,this},onUpload:function(e){return this.onUploadCallback=e,this},clone:function(){return new this.constructor().copy(this)}};function Zl(e,t){je.call(this,new Int8Array(e),t)}Zl.prototype=Object.create(je.prototype);Zl.prototype.constructor=Zl;function Kl(e,t){je.call(this,new Uint8Array(e),t)}Kl.prototype=Object.create(je.prototype);Kl.prototype.constructor=Kl;function Jl(e,t){je.call(this,new Uint8ClampedArray(e),t)}Jl.prototype=Object.create(je.prototype);Jl.prototype.constructor=Jl;function Ql(e,t){je.call(this,new Int16Array(e),t)}Ql.prototype=Object.create(je.prototype);Ql.prototype.constructor=Ql;function Nr(e,t){je.call(this,new Uint16Array(e),t)}Nr.prototype=Object.create(je.prototype);Nr.prototype.constructor=Nr;function ec(e,t){je.call(this,new Int32Array(e),t)}ec.prototype=Object.create(je.prototype);ec.prototype.constructor=ec;function Or(e,t){je.call(this,new Uint32Array(e),t)}Or.prototype=Object.create(je.prototype);Or.prototype.constructor=Or;function Ut(e,t){je.call(this,new Float32Array(e),t)}Ut.prototype=Object.create(je.prototype);Ut.prototype.constructor=Ut;function tc(e,t){je.call(this,new Float64Array(e),t)}tc.prototype=Object.create(je.prototype);tc.prototype.constructor=tc;function ty(){this.indices=[],this.vertices=[],this.normals=[],this.colors=[],this.uvs=[],this.uvs2=[],this.groups=[],this.morphTargets={},this.skinWeights=[],this.skinIndices=[],this.boundingBox=null,this.boundingSphere=null,this.verticesNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.uvsNeedUpdate=!1,this.groupsNeedUpdate=!1}Object.assign(ty.prototype,{computeGroups:function(e){for(var t,n=[],i=void 0,r=e.faces,a=0;a<r.length;a++){var o=r[a];o.materialIndex!==i&&(i=o.materialIndex,t!==void 0&&(t.count=a*3-t.start,n.push(t)),t={start:a*3,materialIndex:i})}t!==void 0&&(t.count=a*3-t.start,n.push(t)),this.groups=n},fromGeometry:function(e){var t=e.faces,n=e.vertices,i=e.faceVertexUvs,r=i[0]&&i[0].length>0,a=i[1]&&i[1].length>0,o=e.morphTargets,l=o.length,h;if(l>0){h=[];for(var u=0;u<l;u++)h[u]=[];this.morphTargets.position=h}var f=e.morphNormals,d=f.length,p;if(d>0){p=[];for(var u=0;u<d;u++)p[u]=[];this.morphTargets.normal=p}for(var g=e.skinIndices,x=e.skinWeights,y=g.length===n.length,_=x.length===n.length,u=0;u<t.length;u++){var v=t[u];this.vertices.push(n[v.a],n[v.b],n[v.c]);var w=v.vertexNormals;if(w.length===3)this.normals.push(w[0],w[1],w[2]);else{var M=v.normal;this.normals.push(M,M,M)}var T=v.vertexColors;if(T.length===3)this.colors.push(T[0],T[1],T[2]);else{var A=v.color;this.colors.push(A,A,A)}if(r===!0){var P=i[0][u];P!==void 0?this.uvs.push(P[0],P[1],P[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ",u),this.uvs.push(new Ke,new Ke,new Ke))}if(a===!0){var P=i[1][u];P!==void 0?this.uvs2.push(P[0],P[1],P[2]):(console.warn("THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ",u),this.uvs2.push(new Ke,new Ke,new Ke))}for(var b=0;b<l;b++){var U=o[b].vertices;h[b].push(U[v.a],U[v.b],U[v.c])}for(var b=0;b<d;b++){var S=f[b].vertexNormals[u];p[b].push(S.a,S.b,S.c)}y&&this.skinIndices.push(g[v.a],g[v.b],g[v.c]),_&&this.skinWeights.push(x[v.a],x[v.b],x[v.c])}return this.computeGroups(e),this.verticesNeedUpdate=e.verticesNeedUpdate,this.normalsNeedUpdate=e.normalsNeedUpdate,this.colorsNeedUpdate=e.colorsNeedUpdate,this.uvsNeedUpdate=e.uvsNeedUpdate,this.groupsNeedUpdate=e.groupsNeedUpdate,this}});function Mt(){Object.defineProperty(this,"id",{value:Zp()}),this.uuid=St.generateUUID(),this.name="",this.type="Geometry",this.vertices=[],this.colors=[],this.faces=[],this.faceVertexUvs=[[]],this.morphTargets=[],this.morphNormals=[],this.skinWeights=[],this.skinIndices=[],this.lineDistances=[],this.boundingBox=null,this.boundingSphere=null,this.elementsNeedUpdate=!1,this.verticesNeedUpdate=!1,this.uvsNeedUpdate=!1,this.normalsNeedUpdate=!1,this.colorsNeedUpdate=!1,this.lineDistancesNeedUpdate=!1,this.groupsNeedUpdate=!1}Object.assign(Mt.prototype,Hi.prototype,{isGeometry:!0,applyMatrix:function(e){for(var t=new Vi().getNormalMatrix(e),n=0,i=this.vertices.length;n<i;n++){var r=this.vertices[n];r.applyMatrix4(e)}for(var n=0,i=this.faces.length;n<i;n++){var a=this.faces[n];a.normal.applyMatrix3(t).normalize();for(var o=0,l=a.vertexNormals.length;o<l;o++)a.vertexNormals[o].applyMatrix3(t).normalize()}return this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this.verticesNeedUpdate=!0,this.normalsNeedUpdate=!0,this},rotateX:function(){var e;return function(n){return e===void 0&&(e=new xt),e.makeRotationX(n),this.applyMatrix(e),this}}(),rotateY:function(){var e;return function(n){return e===void 0&&(e=new xt),e.makeRotationY(n),this.applyMatrix(e),this}}(),rotateZ:function(){var e;return function(n){return e===void 0&&(e=new xt),e.makeRotationZ(n),this.applyMatrix(e),this}}(),translate:function(){var e;return function(n,i,r){return e===void 0&&(e=new xt),e.makeTranslation(n,i,r),this.applyMatrix(e),this}}(),scale:function(){var e;return function(n,i,r){return e===void 0&&(e=new xt),e.makeScale(n,i,r),this.applyMatrix(e),this}}(),lookAt:function(){var e;return function(n){e===void 0&&(e=new it),e.lookAt(n),e.updateMatrix(),this.applyMatrix(e.matrix)}}(),fromBufferGeometry:function(e){var t=this,n=e.index!==null?e.index.array:void 0,i=e.attributes,r=i.position.array,a=i.normal!==void 0?i.normal.array:void 0,o=i.color!==void 0?i.color.array:void 0,l=i.uv!==void 0?i.uv.array:void 0,h=i.uv2!==void 0?i.uv2.array:void 0;h!==void 0&&(this.faceVertexUvs[1]=[]);for(var u=[],f=[],d=[],p=0,g=0;p<r.length;p+=3,g+=2)t.vertices.push(new k(r[p],r[p+1],r[p+2])),a!==void 0&&u.push(new k(a[p],a[p+1],a[p+2])),o!==void 0&&t.colors.push(new dt(o[p],o[p+1],o[p+2])),l!==void 0&&f.push(new Ke(l[g],l[g+1])),h!==void 0&&d.push(new Ke(h[g],h[g+1]));function x(T,A,P,b){var U=a!==void 0?[u[T].clone(),u[A].clone(),u[P].clone()]:[],S=o!==void 0?[t.colors[T].clone(),t.colors[A].clone(),t.colors[P].clone()]:[],R=new Ri(T,A,P,U,S,b);t.faces.push(R),l!==void 0&&t.faceVertexUvs[0].push([f[T].clone(),f[A].clone(),f[P].clone()]),h!==void 0&&t.faceVertexUvs[1].push([d[T].clone(),d[A].clone(),d[P].clone()])}if(n!==void 0){var y=e.groups;if(y.length>0)for(var p=0;p<y.length;p++)for(var _=y[p],v=_.start,w=_.count,g=v,M=v+w;g<M;g+=3)x(n[g],n[g+1],n[g+2],_.materialIndex);else for(var p=0;p<n.length;p+=3)x(n[p],n[p+1],n[p+2])}else for(var p=0;p<r.length/3;p+=3)x(p,p+1,p+2);return this.computeFaceNormals(),e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),this},center:function(){this.computeBoundingBox();var e=this.boundingBox.getCenter().negate();return this.translate(e.x,e.y,e.z),e},normalize:function(){this.computeBoundingSphere();var e=this.boundingSphere.center,t=this.boundingSphere.radius,n=t===0?1:1/t,i=new xt;return i.set(n,0,0,-n*e.x,0,n,0,-n*e.y,0,0,n,-n*e.z,0,0,0,1),this.applyMatrix(i),this},computeFaceNormals:function(){for(var e=new k,t=new k,n=0,i=this.faces.length;n<i;n++){var r=this.faces[n],a=this.vertices[r.a],o=this.vertices[r.b],l=this.vertices[r.c];e.subVectors(l,o),t.subVectors(a,o),e.cross(t),e.normalize(),r.normal.copy(e)}},computeVertexNormals:function(e){e===void 0&&(e=!0);var t,n,i,r,a,o;for(o=new Array(this.vertices.length),t=0,n=this.vertices.length;t<n;t++)o[t]=new k;if(e){var l,h,u,f=new k,d=new k;for(i=0,r=this.faces.length;i<r;i++)a=this.faces[i],l=this.vertices[a.a],h=this.vertices[a.b],u=this.vertices[a.c],f.subVectors(u,h),d.subVectors(l,h),f.cross(d),o[a.a].add(f),o[a.b].add(f),o[a.c].add(f)}else for(this.computeFaceNormals(),i=0,r=this.faces.length;i<r;i++)a=this.faces[i],o[a.a].add(a.normal),o[a.b].add(a.normal),o[a.c].add(a.normal);for(t=0,n=this.vertices.length;t<n;t++)o[t].normalize();for(i=0,r=this.faces.length;i<r;i++){a=this.faces[i];var p=a.vertexNormals;p.length===3?(p[0].copy(o[a.a]),p[1].copy(o[a.b]),p[2].copy(o[a.c])):(p[0]=o[a.a].clone(),p[1]=o[a.b].clone(),p[2]=o[a.c].clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeFlatVertexNormals:function(){var e,t,n;for(this.computeFaceNormals(),e=0,t=this.faces.length;e<t;e++){n=this.faces[e];var i=n.vertexNormals;i.length===3?(i[0].copy(n.normal),i[1].copy(n.normal),i[2].copy(n.normal)):(i[0]=n.normal.clone(),i[1]=n.normal.clone(),i[2]=n.normal.clone())}this.faces.length>0&&(this.normalsNeedUpdate=!0)},computeMorphNormals:function(){var e,t,n,i,r;for(n=0,i=this.faces.length;n<i;n++)for(r=this.faces[n],r.__originalFaceNormal?r.__originalFaceNormal.copy(r.normal):r.__originalFaceNormal=r.normal.clone(),r.__originalVertexNormals||(r.__originalVertexNormals=[]),e=0,t=r.vertexNormals.length;e<t;e++)r.__originalVertexNormals[e]?r.__originalVertexNormals[e].copy(r.vertexNormals[e]):r.__originalVertexNormals[e]=r.vertexNormals[e].clone();var a=new Mt;for(a.faces=this.faces,e=0,t=this.morphTargets.length;e<t;e++){if(!this.morphNormals[e]){this.morphNormals[e]={},this.morphNormals[e].faceNormals=[],this.morphNormals[e].vertexNormals=[];var o=this.morphNormals[e].faceNormals,l=this.morphNormals[e].vertexNormals,u,f;for(n=0,i=this.faces.length;n<i;n++)u=new k,f={a:new k,b:new k,c:new k},o.push(u),l.push(f)}var h=this.morphNormals[e];a.vertices=this.morphTargets[e].vertices,a.computeFaceNormals(),a.computeVertexNormals();var u,f;for(n=0,i=this.faces.length;n<i;n++)r=this.faces[n],u=h.faceNormals[n],f=h.vertexNormals[n],u.copy(r.normal),f.a.copy(r.vertexNormals[0]),f.b.copy(r.vertexNormals[1]),f.c.copy(r.vertexNormals[2])}for(n=0,i=this.faces.length;n<i;n++)r=this.faces[n],r.normal=r.__originalFaceNormal,r.vertexNormals=r.__originalVertexNormals},computeLineDistances:function(){for(var e=0,t=this.vertices,n=0,i=t.length;n<i;n++)n>0&&(e+=t[n].distanceTo(t[n-1])),this.lineDistances[n]=e},computeBoundingBox:function(){this.boundingBox===null&&(this.boundingBox=new dr),this.boundingBox.setFromPoints(this.vertices)},computeBoundingSphere:function(){this.boundingSphere===null&&(this.boundingSphere=new Yn),this.boundingSphere.setFromPoints(this.vertices)},merge:function(e,t,n){if((e&&e.isGeometry)===!1){console.error("THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.",e);return}var i,r=this.vertices.length,a=this.vertices,o=e.vertices,l=this.faces,h=e.faces,u=this.faceVertexUvs[0],f=e.faceVertexUvs[0],d=this.colors,p=e.colors;n===void 0&&(n=0),t!==void 0&&(i=new Vi().getNormalMatrix(t));for(var g=0,x=o.length;g<x;g++){var y=o[g],_=y.clone();t!==void 0&&_.applyMatrix4(t),a.push(_)}for(var g=0,x=p.length;g<x;g++)d.push(p[g].clone());for(g=0,x=h.length;g<x;g++){var v=h[g],w,M,T,A=v.vertexNormals,P=v.vertexColors;w=new Ri(v.a+r,v.b+r,v.c+r),w.normal.copy(v.normal),i!==void 0&&w.normal.applyMatrix3(i).normalize();for(var b=0,U=A.length;b<U;b++)M=A[b].clone(),i!==void 0&&M.applyMatrix3(i).normalize(),w.vertexNormals.push(M);w.color.copy(v.color);for(var b=0,U=P.length;b<U;b++)T=P[b],w.vertexColors.push(T.clone());w.materialIndex=v.materialIndex+n,l.push(w)}for(g=0,x=f.length;g<x;g++){var S=f[g],R=[];if(S!==void 0){for(var b=0,U=S.length;b<U;b++)R.push(S[b].clone());u.push(R)}}},mergeMesh:function(e){if((e&&e.isMesh)===!1){console.error("THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.",e);return}e.matrixAutoUpdate&&e.updateMatrix(),this.merge(e.geometry,e.matrix)},mergeVertices:function(){var e={},t=[],n=[],i,r,a=4,o=Math.pow(10,a),l,h,u,f,d,p;for(l=0,h=this.vertices.length;l<h;l++)i=this.vertices[l],r=Math.round(i.x*o)+"_"+Math.round(i.y*o)+"_"+Math.round(i.z*o),e[r]===void 0?(e[r]=l,t.push(this.vertices[l]),n[l]=t.length-1):n[l]=n[e[r]];var g=[];for(l=0,h=this.faces.length;l<h;l++){u=this.faces[l],u.a=n[u.a],u.b=n[u.b],u.c=n[u.c],f=[u.a,u.b,u.c];for(var x=0;x<3;x++)if(f[x]===f[(x+1)%3]){g.push(l);break}}for(l=g.length-1;l>=0;l--){var y=g[l];for(this.faces.splice(y,1),d=0,p=this.faceVertexUvs.length;d<p;d++)this.faceVertexUvs[d].splice(y,1)}var _=this.vertices.length-t.length;return this.vertices=t,_},sortFacesByMaterialIndex:function(){for(var e=this.faces,t=e.length,n=0;n<t;n++)e[n]._id=n;function i(u,f){return u.materialIndex-f.materialIndex}e.sort(i);var r=this.faceVertexUvs[0],a=this.faceVertexUvs[1],o,l;r&&r.length===t&&(o=[]),a&&a.length===t&&(l=[]);for(var n=0;n<t;n++){var h=e[n]._id;o&&o.push(r[h]),l&&l.push(a[h])}o&&(this.faceVertexUvs[0]=o),l&&(this.faceVertexUvs[1]=l)},toJSON:function(){var e={metadata:{version:4.4,type:"Geometry",generator:"Geometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),this.parameters!==void 0){var t=this.parameters;for(var n in t)t[n]!==void 0&&(e[n]=t[n]);return e}for(var i=[],r=0;r<this.vertices.length;r++){var a=this.vertices[r];i.push(a.x,a.y,a.z)}for(var o=[],l=[],h={},u=[],f={},d=[],p={},r=0;r<this.faces.length;r++){var g=this.faces[r],x=!0,y=!1,_=this.faceVertexUvs[0][r]!==void 0,v=g.normal.length()>0,w=g.vertexNormals.length>0,M=g.color.r!==1||g.color.g!==1||g.color.b!==1,T=g.vertexColors.length>0,A=0;if(A=S(A,0,0),A=S(A,1,x),A=S(A,2,y),A=S(A,3,_),A=S(A,4,v),A=S(A,5,w),A=S(A,6,M),A=S(A,7,T),o.push(A),o.push(g.a,g.b,g.c),o.push(g.materialIndex),_){var P=this.faceVertexUvs[0][r];o.push(W(P[0]),W(P[1]),W(P[2]))}if(v&&o.push(R(g.normal)),w){var b=g.vertexNormals;o.push(R(b[0]),R(b[1]),R(b[2]))}if(M&&o.push(V(g.color)),T){var U=g.vertexColors;o.push(V(U[0]),V(U[1]),V(U[2]))}}function S(L,I,z){return z?L|1<<I:L&~(1<<I)}function R(L){var I=L.x.toString()+L.y.toString()+L.z.toString();return h[I]!==void 0||(h[I]=l.length/3,l.push(L.x,L.y,L.z)),h[I]}function V(L){var I=L.r.toString()+L.g.toString()+L.b.toString();return f[I]!==void 0||(f[I]=u.length,u.push(L.getHex())),f[I]}function W(L){var I=L.x.toString()+L.y.toString();return p[I]!==void 0||(p[I]=d.length/2,d.push(L.x,L.y)),p[I]}return e.data={},e.data.vertices=i,e.data.normals=l,u.length>0&&(e.data.colors=u),d.length>0&&(e.data.uvs=[d]),e.data.faces=o,e},clone:function(){return new Mt().copy(this)},copy:function(e){this.vertices=[],this.faces=[],this.faceVertexUvs=[[]],this.colors=[];for(var t=e.vertices,n=0,i=t.length;n<i;n++)this.vertices.push(t[n].clone());for(var r=e.colors,n=0,i=r.length;n<i;n++)this.colors.push(r[n].clone());for(var a=e.faces,n=0,i=a.length;n<i;n++)this.faces.push(a[n].clone());for(var n=0,i=e.faceVertexUvs.length;n<i;n++){var o=e.faceVertexUvs[n];this.faceVertexUvs[n]===void 0&&(this.faceVertexUvs[n]=[]);for(var l=0,h=o.length;l<h;l++){for(var u=o[l],f=[],d=0,p=u.length;d<p;d++){var g=u[d];f.push(g.clone())}this.faceVertexUvs[n].push(f)}}return this},dispose:function(){this.dispatchEvent({type:"dispose"})}});var mI=0;function Zp(){return mI++}function ft(){Object.defineProperty(this,"id",{value:Zp()}),this.uuid=St.generateUUID(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0}}Object.assign(ft.prototype,Hi.prototype,{isBufferGeometry:!0,getIndex:function(){return this.index},setIndex:function(e){this.index=e},addAttribute:function(e,t){if((t&&t.isBufferAttribute)===!1&&(t&&t.isInterleavedBufferAttribute)===!1){console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.addAttribute(e,new je(arguments[1],arguments[2]));return}if(e==="index"){console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(t);return}return this.attributes[e]=t,this},getAttribute:function(e){return this.attributes[e]},removeAttribute:function(e){return delete this.attributes[e],this},addGroup:function(e,t,n){this.groups.push({start:e,count:t,materialIndex:n!==void 0?n:0})},clearGroups:function(){this.groups=[]},setDrawRange:function(e,t){this.drawRange.start=e,this.drawRange.count=t},applyMatrix:function(e){var t=this.attributes.position;t!==void 0&&(e.applyToVector3Array(t.array),t.needsUpdate=!0);var n=this.attributes.normal;if(n!==void 0){var i=new Vi().getNormalMatrix(e);i.applyToVector3Array(n.array),n.needsUpdate=!0}return this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this},rotateX:function(){var e;return function(n){return e===void 0&&(e=new xt),e.makeRotationX(n),this.applyMatrix(e),this}}(),rotateY:function(){var e;return function(n){return e===void 0&&(e=new xt),e.makeRotationY(n),this.applyMatrix(e),this}}(),rotateZ:function(){var e;return function(n){return e===void 0&&(e=new xt),e.makeRotationZ(n),this.applyMatrix(e),this}}(),translate:function(){var e;return function(n,i,r){return e===void 0&&(e=new xt),e.makeTranslation(n,i,r),this.applyMatrix(e),this}}(),scale:function(){var e;return function(n,i,r){return e===void 0&&(e=new xt),e.makeScale(n,i,r),this.applyMatrix(e),this}}(),lookAt:function(){var e;return function(n){e===void 0&&(e=new it),e.lookAt(n),e.updateMatrix(),this.applyMatrix(e.matrix)}}(),center:function(){this.computeBoundingBox();var e=this.boundingBox.getCenter().negate();return this.translate(e.x,e.y,e.z),e},setFromObject:function(e){var t=e.geometry;if(e.isPoints||e.isLine){var n=new Ut(t.vertices.length*3,3),i=new Ut(t.colors.length*3,3);if(this.addAttribute("position",n.copyVector3sArray(t.vertices)),this.addAttribute("color",i.copyColorsArray(t.colors)),t.lineDistances&&t.lineDistances.length===t.vertices.length){var r=new Ut(t.lineDistances.length,1);this.addAttribute("lineDistance",r.copyArray(t.lineDistances))}t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone())}else e.isMesh&&t&&t.isGeometry&&this.fromGeometry(t);return this},updateFromObject:function(e){var t=e.geometry;if(e.isMesh){var n=t.__directGeometry;if(t.elementsNeedUpdate===!0&&(n=void 0,t.elementsNeedUpdate=!1),n===void 0)return this.fromGeometry(t);n.verticesNeedUpdate=t.verticesNeedUpdate,n.normalsNeedUpdate=t.normalsNeedUpdate,n.colorsNeedUpdate=t.colorsNeedUpdate,n.uvsNeedUpdate=t.uvsNeedUpdate,n.groupsNeedUpdate=t.groupsNeedUpdate,t.verticesNeedUpdate=!1,t.normalsNeedUpdate=!1,t.colorsNeedUpdate=!1,t.uvsNeedUpdate=!1,t.groupsNeedUpdate=!1,t=n}var i;return t.verticesNeedUpdate===!0&&(i=this.attributes.position,i!==void 0&&(i.copyVector3sArray(t.vertices),i.needsUpdate=!0),t.verticesNeedUpdate=!1),t.normalsNeedUpdate===!0&&(i=this.attributes.normal,i!==void 0&&(i.copyVector3sArray(t.normals),i.needsUpdate=!0),t.normalsNeedUpdate=!1),t.colorsNeedUpdate===!0&&(i=this.attributes.color,i!==void 0&&(i.copyColorsArray(t.colors),i.needsUpdate=!0),t.colorsNeedUpdate=!1),t.uvsNeedUpdate&&(i=this.attributes.uv,i!==void 0&&(i.copyVector2sArray(t.uvs),i.needsUpdate=!0),t.uvsNeedUpdate=!1),t.lineDistancesNeedUpdate&&(i=this.attributes.lineDistance,i!==void 0&&(i.copyArray(t.lineDistances),i.needsUpdate=!0),t.lineDistancesNeedUpdate=!1),t.groupsNeedUpdate&&(t.computeGroups(e.geometry),this.groups=t.groups,t.groupsNeedUpdate=!1),this},fromGeometry:function(e){return e.__directGeometry=new ty().fromGeometry(e),this.fromDirectGeometry(e.__directGeometry)},fromDirectGeometry:function(e){var t=new Float32Array(e.vertices.length*3);if(this.addAttribute("position",new je(t,3).copyVector3sArray(e.vertices)),e.normals.length>0){var n=new Float32Array(e.normals.length*3);this.addAttribute("normal",new je(n,3).copyVector3sArray(e.normals))}if(e.colors.length>0){var i=new Float32Array(e.colors.length*3);this.addAttribute("color",new je(i,3).copyColorsArray(e.colors))}if(e.uvs.length>0){var r=new Float32Array(e.uvs.length*2);this.addAttribute("uv",new je(r,2).copyVector2sArray(e.uvs))}if(e.uvs2.length>0){var a=new Float32Array(e.uvs2.length*2);this.addAttribute("uv2",new je(a,2).copyVector2sArray(e.uvs2))}if(e.indices.length>0){var o=e.vertices.length>65535?Uint32Array:Uint16Array,l=new o(e.indices.length*3);this.setIndex(new je(l,1).copyIndicesArray(e.indices))}this.groups=e.groups;for(var h in e.morphTargets){for(var u=[],f=e.morphTargets[h],d=0,p=f.length;d<p;d++){var g=f[d],x=new Ut(g.length*3,3);u.push(x.copyVector3sArray(g))}this.morphAttributes[h]=u}if(e.skinIndices.length>0){var y=new Ut(e.skinIndices.length*4,4);this.addAttribute("skinIndex",y.copyVector4sArray(e.skinIndices))}if(e.skinWeights.length>0){var _=new Ut(e.skinWeights.length*4,4);this.addAttribute("skinWeight",_.copyVector4sArray(e.skinWeights))}return e.boundingSphere!==null&&(this.boundingSphere=e.boundingSphere.clone()),e.boundingBox!==null&&(this.boundingBox=e.boundingBox.clone()),this},computeBoundingBox:function(){this.boundingBox===null&&(this.boundingBox=new dr);var e=this.attributes.position;e!==void 0?this.boundingBox.setFromBufferAttribute(e):this.boundingBox.makeEmpty(),(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)},computeBoundingSphere:function(){var e=new dr,t=new k;return function(){this.boundingSphere===null&&(this.boundingSphere=new Yn);var i=this.attributes.position;if(i){var r=this.boundingSphere.center;e.setFromBufferAttribute(i),e.getCenter(r);for(var a=0,o=0,l=i.count;o<l;o++)t.x=i.getX(o),t.y=i.getY(o),t.z=i.getZ(o),a=Math.max(a,r.distanceToSquared(t));this.boundingSphere.radius=Math.sqrt(a),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}}(),computeFaceNormals:function(){},computeVertexNormals:function(){var e=this.index,t=this.attributes,n=this.groups;if(t.position){var i=t.position.array;if(t.normal===void 0)this.addAttribute("normal",new je(new Float32Array(i.length),3));else for(var r=t.normal.array,a=0,o=r.length;a<o;a++)r[a]=0;var l=t.normal.array,h,u,f,d=new k,p=new k,g=new k,x=new k,y=new k;if(e){var _=e.array;n.length===0&&this.addGroup(0,_.length);for(var v=0,w=n.length;v<w;++v)for(var M=n[v],T=M.start,A=M.count,a=T,o=T+A;a<o;a+=3)h=_[a+0]*3,u=_[a+1]*3,f=_[a+2]*3,d.fromArray(i,h),p.fromArray(i,u),g.fromArray(i,f),x.subVectors(g,p),y.subVectors(d,p),x.cross(y),l[h]+=x.x,l[h+1]+=x.y,l[h+2]+=x.z,l[u]+=x.x,l[u+1]+=x.y,l[u+2]+=x.z,l[f]+=x.x,l[f+1]+=x.y,l[f+2]+=x.z}else for(var a=0,o=i.length;a<o;a+=9)d.fromArray(i,a),p.fromArray(i,a+3),g.fromArray(i,a+6),x.subVectors(g,p),y.subVectors(d,p),x.cross(y),l[a]=x.x,l[a+1]=x.y,l[a+2]=x.z,l[a+3]=x.x,l[a+4]=x.y,l[a+5]=x.z,l[a+6]=x.x,l[a+7]=x.y,l[a+8]=x.z;this.normalizeNormals(),t.normal.needsUpdate=!0}},merge:function(e,t){if((e&&e.isBufferGeometry)===!1){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);return}t===void 0&&(t=0);var n=this.attributes;for(var i in n)if(e.attributes[i]!==void 0)for(var r=n[i],a=r.array,o=e.attributes[i],l=o.array,h=o.itemSize,u=0,f=h*t;u<l.length;u++,f++)a[f]=l[u];return this},normalizeNormals:function(){for(var e=this.attributes.normal.array,t,n,i,r,a=0,o=e.length;a<o;a+=3)t=e[a],n=e[a+1],i=e[a+2],r=1/Math.sqrt(t*t+n*n+i*i),e[a]*=r,e[a+1]*=r,e[a+2]*=r},toNonIndexed:function(){if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed."),this;var e=new ft,t=this.index.array,n=this.attributes;for(var i in n){for(var r=n[i],a=r.array,o=r.itemSize,l=new a.constructor(t.length*o),h=0,u=0,f=0,d=t.length;f<d;f++){h=t[f]*o;for(var p=0;p<o;p++)l[u++]=a[h++]}e.addAttribute(i,new je(l,o))}return e},toJSON:function(){var e={metadata:{version:4.4,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),this.parameters!==void 0){var t=this.parameters;for(var n in t)t[n]!==void 0&&(e[n]=t[n]);return e}e.data={attributes:{}};var i=this.index;if(i!==null){var r=Array.prototype.slice.call(i.array);e.data.index={type:i.array.constructor.name,array:r}}var a=this.attributes;for(var n in a){var o=a[n],r=Array.prototype.slice.call(o.array);e.data.attributes[n]={itemSize:o.itemSize,type:o.array.constructor.name,array:r,normalized:o.normalized}}var l=this.groups;l.length>0&&(e.data.groups=JSON.parse(JSON.stringify(l)));var h=this.boundingSphere;return h!==null&&(e.data.boundingSphere={center:h.center.toArray(),radius:h.radius}),e},clone:function(){return new ft().copy(this)},copy:function(e){var t=e.index;t!==null&&this.setIndex(t.clone());var n=e.attributes;for(var i in n){var r=n[i];this.addAttribute(i,r.clone())}for(var a=e.groups,o=0,l=a.length;o<l;o++){var h=a[o];this.addGroup(h.start,h.count,h.materialIndex)}return this},dispose:function(){this.dispatchEvent({type:"dispose"})}});ft.MaxIndex=65535;function Pn(e,t){it.call(this),this.type="Mesh",this.geometry=e!==void 0?e:new ft,this.material=t!==void 0?t:new di({color:Math.random()*16777215}),this.drawMode=$p,this.updateMorphTargets()}Pn.prototype=Object.assign(Object.create(it.prototype),{constructor:Pn,isMesh:!0,setDrawMode:function(e){this.drawMode=e},copy:function(e){return it.prototype.copy.call(this,e),this.drawMode=e.drawMode,this},updateMorphTargets:function(){var e=this.geometry.morphTargets;if(e!==void 0&&e.length>0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(var t=0,n=e.length;t<n;t++)this.morphTargetInfluences.push(0),this.morphTargetDictionary[e[t].name]=t}},raycast:function(){var e=new xt,t=new _a,n=new Yn,i=new k,r=new k,a=new k,o=new k,l=new k,h=new k,u=new Ke,f=new Ke,d=new Ke,p=new k,g=new k,x=new k;function y(w,M,T,A,P,b,U){return Gi.barycoordFromPoint(w,M,T,A,p),P.multiplyScalar(p.x),b.multiplyScalar(p.y),U.multiplyScalar(p.z),P.add(b).add(U),P.clone()}function _(w,M,T,A,P,b,U){var S,R=w.material;if(R.side===pa?S=T.intersectTriangle(b,P,A,!0,U):S=T.intersectTriangle(A,P,b,R.side!==il,U),S===null)return null;x.copy(U),x.applyMatrix4(w.matrixWorld);var V=M.ray.origin.distanceTo(x);return V<M.near||V>M.far?null:{distance:V,point:x.clone(),object:w}}function v(w,M,T,A,P,b,U,S){i.fromArray(A,b*3),r.fromArray(A,U*3),a.fromArray(A,S*3);var R=_(w,M,T,i,r,a,g);return R&&(P&&(u.fromArray(P,b*2),f.fromArray(P,U*2),d.fromArray(P,S*2),R.uv=y(g,i,r,a,u,f,d)),R.face=new Ri(b,U,S,Gi.normal(i,r,a)),R.faceIndex=b),R}return function(M,T){var A=this.geometry,P=this.material,b=this.matrixWorld;if(P!==void 0&&(A.boundingSphere===null&&A.computeBoundingSphere(),n.copy(A.boundingSphere),n.applyMatrix4(b),M.ray.intersectsSphere(n)!==!1&&(e.getInverse(b),t.copy(M.ray).applyMatrix4(e),!(A.boundingBox!==null&&t.intersectsBox(A.boundingBox)===!1)))){var U,S;if(A.isBufferGeometry){var R,V,W,L=A.index,I=A.attributes,z=I.position.array;if(I.uv!==void 0&&(U=I.uv.array),L!==null)for(var X=L.array,Y=0,$=X.length;Y<$;Y+=3)R=X[Y],V=X[Y+1],W=X[Y+2],S=v(this,M,t,z,U,R,V,W),S&&(S.faceIndex=Math.floor(Y/3),T.push(S));else for(var Y=0,$=z.length;Y<$;Y+=9)R=Y/3,V=R+1,W=R+2,S=v(this,M,t,z,U,R,V,W),S&&(S.index=R,T.push(S))}else if(A.isGeometry){var ne,ae,j,K=P&&P.isMultiMaterial,Q=K===!0?P.materials:null,he=A.vertices,me=A.faces,ge=A.faceVertexUvs[0];ge.length>0&&(U=ge);for(var Pe=0,we=me.length;Pe<we;Pe++){var Se=me[Pe],ht=K===!0?Q[Se.materialIndex]:P;if(ht!==void 0){if(ne=he[Se.a],ae=he[Se.b],j=he[Se.c],ht.morphTargets===!0){var J=A.morphTargets,se=this.morphTargetInfluences;i.set(0,0,0),r.set(0,0,0),a.set(0,0,0);for(var Qe=0,ze=J.length;Qe<ze;Qe++){var Re=se[Qe];if(Re!==0){var et=J[Qe].vertices;i.addScaledVector(o.subVectors(et[Se.a],ne),Re),r.addScaledVector(l.subVectors(et[Se.b],ae),Re),a.addScaledVector(h.subVectors(et[Se.c],j),Re)}}i.add(ne),r.add(ae),a.add(j),ne=i,ae=r,j=a}if(S=_(this,M,t,ne,ae,j,g),S){if(U){var qe=U[Pe];u.copy(qe[0]),f.copy(qe[1]),d.copy(qe[2]),S.uv=y(g,ne,ae,j,u,f,d)}S.face=Se,S.faceIndex=Pe,T.push(S)}}}}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});function ts(e,t,n,i,r,a){ft.call(this),this.type="BoxBufferGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:r,depthSegments:a};var o=this;i=Math.floor(i)||1,r=Math.floor(r)||1,a=Math.floor(a)||1;var l=w(i,r,a),h=M(i,r,a),u=new(h>65535?Uint32Array:Uint16Array)(h),f=new Float32Array(l*3),d=new Float32Array(l*3),p=new Float32Array(l*2),g=0,x=0,y=0,_=0,v=0;T("z","y","x",-1,-1,n,t,e,a,r,0),T("z","y","x",1,-1,n,t,-e,a,r,1),T("x","z","y",1,1,e,n,t,i,a,2),T("x","z","y",1,-1,e,n,-t,i,a,3),T("x","y","z",1,-1,e,t,n,i,r,4),T("x","y","z",-1,-1,e,t,-n,i,r,5),this.setIndex(new je(u,1)),this.addAttribute("position",new je(f,3)),this.addAttribute("normal",new je(d,3)),this.addAttribute("uv",new je(p,2));function w(A,P,b){var U=0;return U+=(A+1)*(P+1)*2,U+=(A+1)*(b+1)*2,U+=(b+1)*(P+1)*2,U}function M(A,P,b){var U=0;return U+=A*P*2,U+=A*b*2,U+=b*P*2,U*6}function T(A,P,b,U,S,R,V,W,L,I,z){for(var X=R/L,Y=V/I,$=R/2,ne=V/2,ae=W/2,j=L+1,K=I+1,Q=0,he=0,me=new k,ge=0;ge<K;ge++)for(var Pe=ge*Y-ne,we=0;we<j;we++){var Se=we*X-$;me[A]=Se*U,me[P]=Pe*S,me[b]=ae,f[g]=me.x,f[g+1]=me.y,f[g+2]=me.z,me[A]=0,me[P]=0,me[b]=W>0?1:-1,d[g]=me.x,d[g+1]=me.y,d[g+2]=me.z,p[x]=we/L,p[x+1]=1-ge/I,g+=3,x+=2,Q+=1}for(ge=0;ge<I;ge++)for(we=0;we<L;we++){var ht=_+we+j*ge,J=_+we+j*(ge+1),se=_+(we+1)+j*(ge+1),Qe=_+(we+1)+j*ge;u[y]=ht,u[y+1]=J,u[y+2]=Qe,u[y+3]=J,u[y+4]=se,u[y+5]=Qe,y+=6,he+=6}o.addGroup(v,he,z),v+=he,_+=Q}}ts.prototype=Object.create(ft.prototype);ts.prototype.constructor=ts;function ns(e,t,n,i){ft.call(this),this.type="PlaneBufferGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};for(var r=e/2,a=t/2,o=Math.floor(n)||1,l=Math.floor(i)||1,h=o+1,u=l+1,f=e/o,d=t/l,p=new Float32Array(h*u*3),g=new Float32Array(h*u*3),x=new Float32Array(h*u*2),y=0,_=0,v=0;v<u;v++)for(var w=v*d-a,M=0;M<h;M++){var T=M*f-r;p[y]=T,p[y+1]=-w,g[y+2]=1,x[_]=M/o,x[_+1]=1-v/l,y+=3,_+=2}y=0;for(var A=new(p.length/3>65535?Uint32Array:Uint16Array)(o*l*6),v=0;v<l;v++)for(var M=0;M<o;M++){var P=M+h*v,b=M+h*(v+1),U=M+1+h*(v+1),S=M+1+h*v;A[y]=P,A[y+1]=b,A[y+2]=S,A[y+3]=b,A[y+4]=U,A[y+5]=S,y+=6}this.setIndex(new je(A,1)),this.addAttribute("position",new je(p,3)),this.addAttribute("normal",new je(g,3)),this.addAttribute("uv",new je(x,2))}ns.prototype=Object.create(ft.prototype);ns.prototype.constructor=ns;function qn(){it.call(this),this.type="Camera",this.matrixWorldInverse=new xt,this.projectionMatrix=new xt}qn.prototype=Object.create(it.prototype);qn.prototype.constructor=qn;qn.prototype.isCamera=!0;qn.prototype.getWorldDirection=function(){var e=new bn;return function(n){var i=n||new k;return this.getWorldQuaternion(e),i.set(0,0,-1).applyQuaternion(e)}}();qn.prototype.lookAt=function(){var e=new xt;return function(n){e.lookAt(this.position,n,this.up),this.quaternion.setFromRotationMatrix(e)}}();qn.prototype.clone=function(){return new this.constructor().copy(this)};qn.prototype.copy=function(e){return it.prototype.copy.call(this,e),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this};function Wn(e,t,n,i){qn.call(this),this.type="PerspectiveCamera",this.fov=e!==void 0?e:50,this.zoom=1,this.near=n!==void 0?n:.1,this.far=i!==void 0?i:2e3,this.focus=10,this.aspect=t!==void 0?t:1,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}Wn.prototype=Object.assign(Object.create(qn.prototype),{constructor:Wn,isPerspectiveCamera:!0,copy:function(e){return qn.prototype.copy.call(this,e),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this},setFocalLength:function(e){var t=.5*this.getFilmHeight()/e;this.fov=St.RAD2DEG*2*Math.atan(t),this.updateProjectionMatrix()},getFocalLength:function(){var e=Math.tan(St.DEG2RAD*.5*this.fov);return .5*this.getFilmHeight()/e},getEffectiveFOV:function(){return St.RAD2DEG*2*Math.atan(Math.tan(St.DEG2RAD*.5*this.fov)/this.zoom)},getFilmWidth:function(){return this.filmGauge*Math.min(this.aspect,1)},getFilmHeight:function(){return this.filmGauge/Math.max(this.aspect,1)},setViewOffset:function(e,t,n,i,r,a){this.aspect=e/t,this.view={fullWidth:e,fullHeight:t,offsetX:n,offsetY:i,width:r,height:a},this.updateProjectionMatrix()},clearViewOffset:function(){this.view=null,this.updateProjectionMatrix()},updateProjectionMatrix:function(){var e=this.near,t=e*Math.tan(St.DEG2RAD*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,r=-.5*i,a=this.view;if(a!==null){var o=a.fullWidth,l=a.fullHeight;r+=a.offsetX*i/o,t-=a.offsetY*n/l,i*=a.width/o,n*=a.height/l}var h=this.filmOffset;h!==0&&(r+=e*h/this.getFilmWidth()),this.projectionMatrix.makeFrustum(r,r+i,t-n,t,e,this.far)},toJSON:function(e){var t=it.prototype.toJSON.call(this,e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}});function _o(e,t,n,i,r,a){qn.call(this),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=r!==void 0?r:.1,this.far=a!==void 0?a:2e3,this.updateProjectionMatrix()}_o.prototype=Object.assign(Object.create(qn.prototype),{constructor:_o,isOrthographicCamera:!0,copy:function(e){return qn.prototype.copy.call(this,e),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this},setViewOffset:function(e,t,n,i,r,a){this.view={fullWidth:e,fullHeight:t,offsetX:n,offsetY:i,width:r,height:a},this.updateProjectionMatrix()},clearViewOffset:function(){this.view=null,this.updateProjectionMatrix()},updateProjectionMatrix:function(){var e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2,r=n-e,a=n+e,o=i+t,l=i-t;if(this.view!==null){var h=this.zoom/(this.view.width/this.view.fullWidth),u=this.zoom/(this.view.height/this.view.fullHeight),f=(this.right-this.left)/this.view.width,d=(this.top-this.bottom)/this.view.height;r+=f*(this.view.offsetX/h),a=r+f*(this.view.width/h),o-=d*(this.view.offsetY/u),l=o-d*(this.view.height/u)}this.projectionMatrix.makeOrthographic(r,a,o,l,this.near,this.far)},toJSON:function(e){var t=it.prototype.toJSON.call(this,e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}});function vI(e,t,n){var i;function r(f){i=f}var a,o;function l(f){f.array instanceof Uint32Array&&t.get("OES_element_index_uint")?(a=e.UNSIGNED_INT,o=4):f.array instanceof Uint16Array?(a=e.UNSIGNED_SHORT,o=2):(a=e.UNSIGNED_BYTE,o=1)}function h(f,d){e.drawElements(i,d,a,f*o),n.calls++,n.vertices+=d,i===e.TRIANGLES&&(n.faces+=d/3)}function u(f,d,p){var g=t.get("ANGLE_instanced_arrays");if(g===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}g.drawElementsInstancedANGLE(i,p,a,d*o,f.maxInstancedCount),n.calls++,n.vertices+=p*f.maxInstancedCount,i===e.TRIANGLES&&(n.faces+=f.maxInstancedCount*p/3)}return{setMode:r,setIndex:l,render:h,renderInstances:u}}function gI(e,t,n){var i;function r(l){i=l}function a(l,h){e.drawArrays(i,l,h),n.calls++,n.vertices+=h,i===e.TRIANGLES&&(n.faces+=h/3)}function o(l){var h=t.get("ANGLE_instanced_arrays");if(h===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}var u=l.attributes.position,f=0;u.isInterleavedBufferAttribute?(f=u.data.count,h.drawArraysInstancedANGLE(i,0,f,l.maxInstancedCount)):(f=u.count,h.drawArraysInstancedANGLE(i,0,f,l.maxInstancedCount)),n.calls++,n.vertices+=f*l.maxInstancedCount,i===e.TRIANGLES&&(n.faces+=l.maxInstancedCount*f/3)}return{setMode:r,render:a,renderInstances:o}}function _I(){var e={};return{get:function(t){if(e[t.id]!==void 0)return e[t.id];var n;switch(t.type){case"DirectionalLight":n={direction:new k,color:new dt,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Ke};break;case"SpotLight":n={position:new k,direction:new k,color:new dt,distance:0,coneCos:0,penumbraCos:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Ke};break;case"PointLight":n={position:new k,color:new dt,distance:0,decay:0,shadow:!1,shadowBias:0,shadowRadius:1,shadowMapSize:new Ke};break;case"HemisphereLight":n={direction:new k,skyColor:new dt,groundColor:new dt};break;case"RectAreaLight":n={color:new dt,position:new k,halfWidth:new k,halfHeight:new k};break}return e[t.id]=n,n}}}function xI(e){for(var t=e.split(`
`),n=0;n<t.length;n++)t[n]=n+1+": "+t[n];return t.join(`
`)}function e0(e,t,n){var i=e.createShader(t);return e.shaderSource(i,n),e.compileShader(i),e.getShaderParameter(i,e.COMPILE_STATUS)===!1&&console.error("THREE.WebGLShader: Shader couldn't compile."),e.getShaderInfoLog(i)!==""&&console.warn("THREE.WebGLShader: gl.getShaderInfoLog()",t===e.VERTEX_SHADER?"vertex":"fragment",e.getShaderInfoLog(i),xI(n)),i}var yI=0;function ny(e){switch(e){case ql:return["Linear","( value )"];case zx:return["sRGB","( value )"];case Gx:return["RGBE","( value )"];case Hx:return["RGBM","( value, 7.0 )"];case Vx:return["RGBM","( value, 16.0 )"];case kx:return["RGBD","( value, 256.0 )"];case jp:return["Gamma","( value, float( GAMMA_FACTOR ) )"];default:throw new Error("unsupported encoding: "+e)}}function Od(e,t){var n=ny(t);return"vec4 "+e+"( vec4 value ) { return "+n[0]+"ToLinear"+n[1]+"; }"}function MI(e,t){var n=ny(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function EI(e,t){var n;switch(t){case kp:n="Linear";break;case yx:n="Reinhard";break;case Mx:n="Uncharted2";break;case Ex:n="OptimizedCineon";break;default:throw new Error("unsupported toneMapping: "+t)}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function wI(e,t,n){e=e||{};var i=[e.derivatives||t.envMapCubeUV||t.bumpMap||t.normalMap||t.flatShading?"#extension GL_OES_standard_derivatives : enable":"",(e.fragDepth||t.logarithmicDepthBuffer)&&n.get("EXT_frag_depth")?"#extension GL_EXT_frag_depth : enable":"",e.drawBuffers&&n.get("WEBGL_draw_buffers")?"#extension GL_EXT_draw_buffers : require":"",(e.shaderTextureLOD||t.envMap)&&n.get("EXT_shader_texture_lod")?"#extension GL_EXT_shader_texture_lod : enable":""];return i.filter(Il).join(`
`)}function SI(e){var t=[];for(var n in e){var i=e[n];i!==!1&&t.push("#define "+n+" "+i)}return t.join(`
`)}function bI(e,t,n){for(var i={},r=e.getProgramParameter(t,e.ACTIVE_ATTRIBUTES),a=0;a<r;a++){var o=e.getActiveAttrib(t,a),l=o.name;i[l]=e.getAttribLocation(t,l)}return i}function Il(e){return e!==""}function t0(e,t){return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights)}function lp(e){var t=/#include +<([\w\d.]+)>/g;function n(i,r){var a=kt[r];if(a===void 0)throw new Error("Can not resolve #include <"+r+">");return lp(a)}return e.replace(t,n)}function n0(e){var t=/for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g;function n(i,r,a,o){for(var l="",h=parseInt(r);h<parseInt(a);h++)l+=o.replace(/\[ i \]/g,"[ "+h+" ]");return l}return e.replace(t,n)}function TI(e,t,n,i){var r=e.context,a=n.extensions,o=n.defines,l=n.__webglShader.vertexShader,h=n.__webglShader.fragmentShader,u="SHADOWMAP_TYPE_BASIC";i.shadowMapType===Up?u="SHADOWMAP_TYPE_PCF":i.shadowMapType===J0&&(u="SHADOWMAP_TYPE_PCF_SOFT");var f="ENVMAP_TYPE_CUBE",d="ENVMAP_MODE_REFLECTION",p="ENVMAP_BLENDING_MULTIPLY";if(i.envMap){switch(n.envMap.mapping){case Gh:case nh:f="ENVMAP_TYPE_CUBE";break;case Hh:case Vh:f="ENVMAP_TYPE_CUBE_UV";break;case Wp:case ih:f="ENVMAP_TYPE_EQUIREC";break;case Xp:f="ENVMAP_TYPE_SPHERE";break}switch(n.envMap.mapping){case nh:case ih:d="ENVMAP_MODE_REFRACTION";break}switch(n.combine){case Fc:p="ENVMAP_BLENDING_MULTIPLY";break;case _x:p="ENVMAP_BLENDING_MIX";break;case xx:p="ENVMAP_BLENDING_ADD";break}}var g=e.gammaFactor>0?e.gammaFactor:1,x=wI(a,i,e.extensions),y=SI(o),_=r.createProgram(),v,w;n.isRawShaderMaterial?(v=[y,`
`].filter(Il).join(`
`),w=[x,y,`
`].filter(Il).join(`
`)):(v=["precision "+i.precision+" float;","precision "+i.precision+" int;","#define SHADER_NAME "+n.__webglShader.name,y,i.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define GAMMA_FACTOR "+g,"#define MAX_BONES "+i.maxBones,i.map?"#define USE_MAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+d:"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.displacementMap&&i.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.vertexColors?"#define USE_COLOR":"",i.flatShading?"#define FLAT_SHADED":"",i.skinning?"#define USE_SKINNING":"",i.useVertexTexture?"#define BONE_TEXTURE":"",i.morphTargets?"#define USE_MORPHTARGETS":"",i.morphNormals&&i.flatShading===!1?"#define USE_MORPHNORMALS":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"","#define NUM_CLIPPING_PLANES "+i.numClippingPlanes,i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+u:"",i.sizeAttenuation?"#define USE_SIZEATTENUATION":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",i.logarithmicDepthBuffer&&e.extensions.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_COLOR","	attribute vec3 color;","#endif","#ifdef USE_MORPHTARGETS","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Il).join(`
`),w=[x,"precision "+i.precision+" float;","precision "+i.precision+" int;","#define SHADER_NAME "+n.__webglShader.name,y,i.alphaTest?"#define ALPHATEST "+i.alphaTest:"","#define GAMMA_FACTOR "+g,i.useFog&&i.fog?"#define USE_FOG":"",i.useFog&&i.fogExp?"#define FOG_EXP2":"",i.map?"#define USE_MAP":"",i.envMap?"#define USE_ENVMAP":"",i.envMap?"#define "+f:"",i.envMap?"#define "+d:"",i.envMap?"#define "+p:"",i.lightMap?"#define USE_LIGHTMAP":"",i.aoMap?"#define USE_AOMAP":"",i.emissiveMap?"#define USE_EMISSIVEMAP":"",i.bumpMap?"#define USE_BUMPMAP":"",i.normalMap?"#define USE_NORMALMAP":"",i.specularMap?"#define USE_SPECULARMAP":"",i.roughnessMap?"#define USE_ROUGHNESSMAP":"",i.metalnessMap?"#define USE_METALNESSMAP":"",i.alphaMap?"#define USE_ALPHAMAP":"",i.vertexColors?"#define USE_COLOR":"",i.gradientMap?"#define USE_GRADIENTMAP":"",i.flatShading?"#define FLAT_SHADED":"",i.doubleSided?"#define DOUBLE_SIDED":"",i.flipSided?"#define FLIP_SIDED":"","#define NUM_CLIPPING_PLANES "+i.numClippingPlanes,"#define UNION_CLIPPING_PLANES "+(i.numClippingPlanes-i.numClipIntersection),i.shadowMapEnabled?"#define USE_SHADOWMAP":"",i.shadowMapEnabled?"#define "+u:"",i.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",i.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",i.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",i.logarithmicDepthBuffer&&e.extensions.get("EXT_frag_depth")?"#define USE_LOGDEPTHBUF_EXT":"",i.envMap&&e.extensions.get("EXT_shader_texture_lod")?"#define TEXTURE_LOD_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;",i.toneMapping!==Ju?"#define TONE_MAPPING":"",i.toneMapping!==Ju?kt.tonemapping_pars_fragment:"",i.toneMapping!==Ju?EI("toneMapping",i.toneMapping):"",i.outputEncoding||i.mapEncoding||i.envMapEncoding||i.emissiveMapEncoding?kt.encodings_pars_fragment:"",i.mapEncoding?Od("mapTexelToLinear",i.mapEncoding):"",i.envMapEncoding?Od("envMapTexelToLinear",i.envMapEncoding):"",i.emissiveMapEncoding?Od("emissiveMapTexelToLinear",i.emissiveMapEncoding):"",i.outputEncoding?MI("linearToOutputTexel",i.outputEncoding):"",i.depthPacking?"#define DEPTH_PACKING "+n.depthPacking:"",`
`].filter(Il).join(`
`)),l=lp(l),l=t0(l,i),h=lp(h),h=t0(h,i),n.isShaderMaterial||(l=n0(l),h=n0(h));var M=v+l,T=w+h,A=e0(r,r.VERTEX_SHADER,M),P=e0(r,r.FRAGMENT_SHADER,T);r.attachShader(_,A),r.attachShader(_,P),n.index0AttributeName!==void 0?r.bindAttribLocation(_,0,n.index0AttributeName):i.morphTargets===!0&&r.bindAttribLocation(_,0,"position"),r.linkProgram(_);var b=r.getProgramInfoLog(_),U=r.getShaderInfoLog(A),S=r.getShaderInfoLog(P),R=!0,V=!0;r.getProgramParameter(_,r.LINK_STATUS)===!1?(R=!1,console.error("THREE.WebGLProgram: shader error: ",r.getError(),"gl.VALIDATE_STATUS",r.getProgramParameter(_,r.VALIDATE_STATUS),"gl.getProgramInfoLog",b,U,S)):b!==""?console.warn("THREE.WebGLProgram: gl.getProgramInfoLog()",b):(U===""||S==="")&&(V=!1),V&&(this.diagnostics={runnable:R,material:n,programLog:b,vertexShader:{log:U,prefix:v},fragmentShader:{log:S,prefix:w}}),r.deleteShader(A),r.deleteShader(P);var W;this.getUniforms=function(){return W===void 0&&(W=new va(r,_,e)),W};var L;return this.getAttributes=function(){return L===void 0&&(L=bI(r,_)),L},this.destroy=function(){r.deleteProgram(_),this.program=void 0},Object.defineProperties(this,{uniforms:{get:function(){return console.warn("THREE.WebGLProgram: .uniforms is now .getUniforms()."),this.getUniforms()}},attributes:{get:function(){return console.warn("THREE.WebGLProgram: .attributes is now .getAttributes()."),this.getAttributes()}}}),this.id=yI++,this.code=t,this.usedTimes=1,this.program=_,this.vertexShader=A,this.fragmentShader=P,this}function AI(e,t){var n=[],i={MeshDepthMaterial:"depth",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"phong",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points"},r=["precision","supportsVertexTextures","map","mapEncoding","envMap","envMapMode","envMapEncoding","lightMap","aoMap","emissiveMap","emissiveMapEncoding","bumpMap","normalMap","displacementMap","specularMap","roughnessMap","metalnessMap","gradientMap","alphaMap","combine","vertexColors","fog","useFog","fogExp","flatShading","sizeAttenuation","logarithmicDepthBuffer","skinning","maxBones","useVertexTexture","morphTargets","morphNormals","maxMorphTargets","maxMorphNormals","premultipliedAlpha","numDirLights","numPointLights","numSpotLights","numHemiLights","numRectAreaLights","shadowMapEnabled","shadowMapType","toneMapping","physicallyCorrectLights","alphaTest","doubleSided","flipSided","numClippingPlanes","numClipIntersection","depthPacking"];function a(l){if(t.floatVertexTextures&&l&&l.skeleton&&l.skeleton.useVertexTexture)return 1024;var h=t.maxVertexUniforms,u=Math.floor((h-20)/4),f=u;return l!==void 0&&l&&l.isSkinnedMesh&&(f=Math.min(l.skeleton.bones.length,f),f<l.skeleton.bones.length&&console.warn("WebGLRenderer: too many bones - "+l.skeleton.bones.length+", this GPU supports just "+f+" (try OpenGL instead of ANGLE)")),f}function o(l,h){var u;return l?l.isTexture?u=l.encoding:l.isWebGLRenderTarget&&(console.warn("THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead."),u=l.texture.encoding):u=ql,u===ql&&h&&(u=jp),u}this.getParameters=function(l,h,u,f,d,p){var g=i[l.type],x=a(p),y=e.getPrecision();l.precision!==null&&(y=t.getMaxPrecision(l.precision),y!==l.precision&&console.warn("THREE.WebGLProgram.getParameters:",l.precision,"not supported, using",y,"instead."));var _=e.getCurrentRenderTarget(),v={shaderID:g,precision:y,supportsVertexTextures:t.vertexTextures,outputEncoding:o(_?_.texture:null,e.gammaOutput),map:!!l.map,mapEncoding:o(l.map,e.gammaInput),envMap:!!l.envMap,envMapMode:l.envMap&&l.envMap.mapping,envMapEncoding:o(l.envMap,e.gammaInput),envMapCubeUV:!!l.envMap&&(l.envMap.mapping===Hh||l.envMap.mapping===Vh),lightMap:!!l.lightMap,aoMap:!!l.aoMap,emissiveMap:!!l.emissiveMap,emissiveMapEncoding:o(l.emissiveMap,e.gammaInput),bumpMap:!!l.bumpMap,normalMap:!!l.normalMap,displacementMap:!!l.displacementMap,roughnessMap:!!l.roughnessMap,metalnessMap:!!l.metalnessMap,specularMap:!!l.specularMap,alphaMap:!!l.alphaMap,gradientMap:!!l.gradientMap,combine:l.combine,vertexColors:l.vertexColors,fog:!!u,useFog:l.fog,fogExp:u&&u.isFogExp2,flatShading:l.shading===Dp,sizeAttenuation:l.sizeAttenuation,logarithmicDepthBuffer:t.logarithmicDepthBuffer,skinning:l.skinning,maxBones:x,useVertexTexture:t.floatVertexTextures&&p&&p.skeleton&&p.skeleton.useVertexTexture,morphTargets:l.morphTargets,morphNormals:l.morphNormals,maxMorphTargets:e.maxMorphTargets,maxMorphNormals:e.maxMorphNormals,numDirLights:h.directional.length,numPointLights:h.point.length,numSpotLights:h.spot.length,numRectAreaLights:h.rectArea.length,numHemiLights:h.hemi.length,numClippingPlanes:f,numClipIntersection:d,shadowMapEnabled:e.shadowMap.enabled&&p.receiveShadow&&h.shadows.length>0,shadowMapType:e.shadowMap.type,toneMapping:e.toneMapping,physicallyCorrectLights:e.physicallyCorrectLights,premultipliedAlpha:l.premultipliedAlpha,alphaTest:l.alphaTest,doubleSided:l.side===il,flipSided:l.side===pa,depthPacking:l.depthPacking!==void 0?l.depthPacking:!1};return v},this.getProgramCode=function(l,h){var u=[];if(h.shaderID?u.push(h.shaderID):(u.push(l.fragmentShader),u.push(l.vertexShader)),l.defines!==void 0)for(var f in l.defines)u.push(f),u.push(l.defines[f]);for(var d=0;d<r.length;d++)u.push(h[r[d]]);return u.join()},this.acquireProgram=function(l,h,u){for(var f,d=0,p=n.length;d<p;d++){var g=n[d];if(g.code===u){f=g,++f.usedTimes;break}}return f===void 0&&(f=new TI(e,u,l,h),n.push(f)),f},this.releaseProgram=function(l){if(--l.usedTimes===0){var h=n.indexOf(l);n[h]=n[n.length-1],n.pop(),l.destroy()}},this.programs=n}function RI(e,t,n){var i={};function r(u){var f=u.target,d=i[f.id];d.index!==null&&o(d.index),l(d.attributes),f.removeEventListener("dispose",r),delete i[f.id];var p=t.get(f);p.wireframe&&o(p.wireframe),t.delete(f);var g=t.get(d);g.wireframe&&o(g.wireframe),t.delete(d),n.memory.geometries--}function a(u){return u.isInterleavedBufferAttribute?t.get(u.data).__webglBuffer:t.get(u).__webglBuffer}function o(u){var f=a(u);f!==void 0&&(e.deleteBuffer(f),h(u))}function l(u){for(var f in u)o(u[f])}function h(u){u.isInterleavedBufferAttribute?t.delete(u.data):t.delete(u)}return{get:function(u){var f=u.geometry;if(i[f.id]!==void 0)return i[f.id];f.addEventListener("dispose",r);var d;return f.isBufferGeometry?d=f:f.isGeometry&&(f._bufferGeometry===void 0&&(f._bufferGeometry=new ft().setFromObject(u)),d=f._bufferGeometry),i[f.id]=d,n.memory.geometries++,d}}}function LI(e,t,n){var i=new RI(e,t,n);function r(d){var p=i.get(d);d.geometry.isGeometry&&p.updateFromObject(d);var g=p.index,x=p.attributes;g!==null&&a(g,e.ELEMENT_ARRAY_BUFFER);for(var y in x)a(x[y],e.ARRAY_BUFFER);var _=p.morphAttributes;for(var y in _)for(var v=_[y],w=0,M=v.length;w<M;w++)a(v[w],e.ARRAY_BUFFER);return p}function a(d,p){var g=d.isInterleavedBufferAttribute?d.data:d,x=t.get(g);x.__webglBuffer===void 0?o(x,g,p):x.version!==g.version&&l(x,g,p)}function o(d,p,g){d.__webglBuffer=e.createBuffer(),e.bindBuffer(g,d.__webglBuffer);var x=p.dynamic?e.DYNAMIC_DRAW:e.STATIC_DRAW;e.bufferData(g,p.array,x);var y=e.FLOAT,_=p.array;_ instanceof Float32Array?y=e.FLOAT:_ instanceof Float64Array?console.warn("Unsupported data buffer format: Float64Array"):_ instanceof Uint16Array?y=e.UNSIGNED_SHORT:_ instanceof Int16Array?y=e.SHORT:_ instanceof Uint32Array?y=e.UNSIGNED_INT:_ instanceof Int32Array?y=e.INT:_ instanceof Int8Array?y=e.BYTE:_ instanceof Uint8Array&&(y=e.UNSIGNED_BYTE),d.bytesPerElement=_.BYTES_PER_ELEMENT,d.type=y,d.version=p.version,p.onUploadCallback()}function l(d,p,g){e.bindBuffer(g,d.__webglBuffer),p.dynamic===!1?e.bufferData(g,p.array,e.STATIC_DRAW):p.updateRange.count===-1?e.bufferSubData(g,0,p.array):p.updateRange.count===0?console.error("THREE.WebGLObjects.updateBuffer: dynamic THREE.BufferAttribute marked as needsUpdate but updateRange.count is 0, ensure you are using set methods or updating manually."):(e.bufferSubData(g,p.updateRange.offset*p.array.BYTES_PER_ELEMENT,p.array.subarray(p.updateRange.offset,p.updateRange.offset+p.updateRange.count)),p.updateRange.count=0),d.version=p.version}function h(d){return d.isInterleavedBufferAttribute?t.get(d.data).__webglBuffer:t.get(d).__webglBuffer}function u(d){return d.isInterleavedBufferAttribute?t.get(d.data):t.get(d)}function f(d){var p=t.get(d);if(p.wireframe!==void 0)return p.wireframe;var g=[],x=d.index,y=d.attributes,_=y.position;if(x!==null)for(var v=x.array,w=0,M=v.length;w<M;w+=3){var T=v[w+0],A=v[w+1],P=v[w+2];g.push(T,A,A,P,P,T)}else for(var v=y.position.array,w=0,M=v.length/3-1;w<M;w+=3){var T=w+0,A=w+1,P=w+2;g.push(T,A,A,P,P,T)}var b=_.count>65535?Uint32Array:Uint16Array,U=new je(new b(g),1);return a(U,e.ELEMENT_ARRAY_BUFFER),p.wireframe=U,U}return{getAttributeBuffer:h,getAttributeProperties:u,getWireframeAttribute:f,update:r}}function CI(e,t,n,i,r,a,o){var l=o.memory,h=typeof WebGL2RenderingContext<"u"&&e instanceof WebGL2RenderingContext;function u(L,I){if(L.width>I||L.height>I){var z=I/Math.max(L.width,L.height),X=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");X.width=Math.floor(L.width*z),X.height=Math.floor(L.height*z);var Y=X.getContext("2d");return Y.drawImage(L,0,0,L.width,L.height,0,0,X.width,X.height),console.warn("THREE.WebGLRenderer: image is too big ("+L.width+"x"+L.height+"). Resized to "+X.width+"x"+X.height,L),X}return L}function f(L){return St.isPowerOfTwo(L.width)&&St.isPowerOfTwo(L.height)}function d(L){if(L instanceof HTMLImageElement||L instanceof HTMLCanvasElement){var I=document.createElementNS("http://www.w3.org/1999/xhtml","canvas");I.width=St.nearestPowerOfTwo(L.width),I.height=St.nearestPowerOfTwo(L.height);var z=I.getContext("2d");return z.drawImage(L,0,0,I.width,I.height),console.warn("THREE.WebGLRenderer: image is not power of two ("+L.width+"x"+L.height+"). Resized to "+I.width+"x"+I.height,L),I}return L}function p(L){return L.wrapS!==Ti||L.wrapT!==Ti||L.minFilter!==Ai&&L.minFilter!==hi}function g(L){return L===Ai||L===kh||L===Wh?e.NEAREST:e.LINEAR}function x(L){var I=L.target;I.removeEventListener("dispose",x),_(I),l.textures--}function y(L){var I=L.target;I.removeEventListener("dispose",y),v(I),l.textures--}function _(L){var I=i.get(L);if(L.image&&I.__image__webglTextureCube)e.deleteTexture(I.__image__webglTextureCube);else{if(I.__webglInit===void 0)return;e.deleteTexture(I.__webglTexture)}i.delete(L)}function v(L){var I=i.get(L),z=i.get(L.texture);if(L){if(z.__webglTexture!==void 0&&e.deleteTexture(z.__webglTexture),L.depthTexture&&L.depthTexture.dispose(),L.isWebGLRenderTargetCube)for(var X=0;X<6;X++)e.deleteFramebuffer(I.__webglFramebuffer[X]),I.__webglDepthbuffer&&e.deleteRenderbuffer(I.__webglDepthbuffer[X]);else e.deleteFramebuffer(I.__webglFramebuffer),I.__webglDepthbuffer&&e.deleteRenderbuffer(I.__webglDepthbuffer);i.delete(L.texture),i.delete(L)}}function w(L,I){var z=i.get(L);if(L.version>0&&z.__version!==L.version){var X=L.image;if(X===void 0)console.warn("THREE.WebGLRenderer: Texture marked for update but image is undefined",L);else if(X.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete",L);else{P(z,L,I);return}}n.activeTexture(e.TEXTURE0+I),n.bindTexture(e.TEXTURE_2D,z.__webglTexture)}function M(L,I){var z=i.get(L);if(L.image.length===6)if(L.version>0&&z.__version!==L.version){z.__image__webglTextureCube||(L.addEventListener("dispose",x),z.__image__webglTextureCube=e.createTexture(),l.textures++),n.activeTexture(e.TEXTURE0+I),n.bindTexture(e.TEXTURE_CUBE_MAP,z.__image__webglTextureCube),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,L.flipY);for(var X=L&&L.isCompressedTexture,Y=L.image[0]&&L.image[0].isDataTexture,$=[],ne=0;ne<6;ne++)!X&&!Y?$[ne]=u(L.image[ne],r.maxCubemapSize):$[ne]=Y?L.image[ne].image:L.image[ne];var ae=$[0],j=f(ae),K=a(L.format),Q=a(L.type);A(e.TEXTURE_CUBE_MAP,L,j);for(var ne=0;ne<6;ne++)if(!X)Y?n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+ne,0,K,$[ne].width,$[ne].height,0,K,Q,$[ne].data):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+ne,0,K,K,Q,$[ne]);else for(var he,me=$[ne].mipmaps,ge=0,Pe=me.length;ge<Pe;ge++)he=me[ge],L.format!==fr&&L.format!==po?n.getCompressedTextureFormats().indexOf(K)>-1?n.compressedTexImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+ne,ge,K,he.width,he.height,0,he.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+ne,ge,K,he.width,he.height,0,K,Q,he.data);L.generateMipmaps&&j&&e.generateMipmap(e.TEXTURE_CUBE_MAP),z.__version=L.version,L.onUpdate&&L.onUpdate(L)}else n.activeTexture(e.TEXTURE0+I),n.bindTexture(e.TEXTURE_CUBE_MAP,z.__image__webglTextureCube)}function T(L,I){n.activeTexture(e.TEXTURE0+I),n.bindTexture(e.TEXTURE_CUBE_MAP,i.get(L).__webglTexture)}function A(L,I,z){var X;if(z?(e.texParameteri(L,e.TEXTURE_WRAP_S,a(I.wrapS)),e.texParameteri(L,e.TEXTURE_WRAP_T,a(I.wrapT)),e.texParameteri(L,e.TEXTURE_MAG_FILTER,a(I.magFilter)),e.texParameteri(L,e.TEXTURE_MIN_FILTER,a(I.minFilter))):(e.texParameteri(L,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(L,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),(I.wrapS!==Ti||I.wrapT!==Ti)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.",I),e.texParameteri(L,e.TEXTURE_MAG_FILTER,g(I.magFilter)),e.texParameteri(L,e.TEXTURE_MIN_FILTER,g(I.minFilter)),I.minFilter!==Ai&&I.minFilter!==hi&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.",I)),X=t.get("EXT_texture_filter_anisotropic"),X){if(I.type===fo&&t.get("OES_texture_float_linear")===null||I.type===ah&&t.get("OES_texture_half_float_linear")===null)return;(I.anisotropy>1||i.get(I).__currentAnisotropy)&&(e.texParameterf(L,X.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(I.anisotropy,r.getMaxAnisotropy())),i.get(I).__currentAnisotropy=I.anisotropy)}}function P(L,I,z){L.__webglInit===void 0&&(L.__webglInit=!0,I.addEventListener("dispose",x),L.__webglTexture=e.createTexture(),l.textures++),n.activeTexture(e.TEXTURE0+z),n.bindTexture(e.TEXTURE_2D,L.__webglTexture),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,I.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,I.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,I.unpackAlignment);var X=u(I.image,r.maxTextureSize);p(I)&&f(X)===!1&&(X=d(X));var Y=f(X),$=a(I.format),ne=a(I.type);A(e.TEXTURE_2D,I,Y);var ae,j=I.mipmaps;if(I.isDepthTexture){var K=e.DEPTH_COMPONENT;if(I.type===fo){if(!h)throw new Error("Float Depth Texture only supported in WebGL2.0");K=e.DEPTH_COMPONENT32F}else h&&(K=e.DEPTH_COMPONENT16);I.format===Ya&&K===e.DEPTH_COMPONENT&&I.type!==kl&&I.type!==qp&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),I.type=kl,ne=a(I.type)),I.format===mo&&(K=e.DEPTH_STENCIL,I.type!==Wl&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),I.type=Wl,ne=a(I.type))),n.texImage2D(e.TEXTURE_2D,0,K,X.width,X.height,0,$,ne,null)}else if(I.isDataTexture)if(j.length>0&&Y){for(var Q=0,he=j.length;Q<he;Q++)ae=j[Q],n.texImage2D(e.TEXTURE_2D,Q,$,ae.width,ae.height,0,$,ne,ae.data);I.generateMipmaps=!1}else n.texImage2D(e.TEXTURE_2D,0,$,X.width,X.height,0,$,ne,X.data);else if(I.isCompressedTexture)for(var Q=0,he=j.length;Q<he;Q++)ae=j[Q],I.format!==fr&&I.format!==po?n.getCompressedTextureFormats().indexOf($)>-1?n.compressedTexImage2D(e.TEXTURE_2D,Q,$,ae.width,ae.height,0,ae.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):n.texImage2D(e.TEXTURE_2D,Q,$,ae.width,ae.height,0,$,ne,ae.data);else if(j.length>0&&Y){for(var Q=0,he=j.length;Q<he;Q++)ae=j[Q],n.texImage2D(e.TEXTURE_2D,Q,$,$,ne,ae);I.generateMipmaps=!1}else n.texImage2D(e.TEXTURE_2D,0,$,$,ne,X);I.generateMipmaps&&Y&&e.generateMipmap(e.TEXTURE_2D),L.__version=I.version,I.onUpdate&&I.onUpdate(I)}function b(L,I,z,X){var Y=a(I.texture.format),$=a(I.texture.type);n.texImage2D(X,0,Y,I.width,I.height,0,Y,$,null),e.bindFramebuffer(e.FRAMEBUFFER,L),e.framebufferTexture2D(e.FRAMEBUFFER,z,X,i.get(I.texture).__webglTexture,0),e.bindFramebuffer(e.FRAMEBUFFER,null)}function U(L,I){e.bindRenderbuffer(e.RENDERBUFFER,L),I.depthBuffer&&!I.stencilBuffer?(e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_COMPONENT16,I.width,I.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.RENDERBUFFER,L)):I.depthBuffer&&I.stencilBuffer?(e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_STENCIL,I.width,I.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.RENDERBUFFER,L)):e.renderbufferStorage(e.RENDERBUFFER,e.RGBA4,I.width,I.height),e.bindRenderbuffer(e.RENDERBUFFER,null)}function S(L,I){var z=I&&I.isWebGLRenderTargetCube;if(z)throw new Error("Depth Texture with cube render targets is not supported!");if(e.bindFramebuffer(e.FRAMEBUFFER,L),!(I.depthTexture&&I.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!i.get(I.depthTexture).__webglTexture||I.depthTexture.image.width!==I.width||I.depthTexture.image.height!==I.height)&&(I.depthTexture.image.width=I.width,I.depthTexture.image.height=I.height,I.depthTexture.needsUpdate=!0),w(I.depthTexture,0);var X=i.get(I.depthTexture).__webglTexture;if(I.depthTexture.format===Ya)e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,X,0);else if(I.depthTexture.format===mo)e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,X,0);else throw new Error("Unknown depthTexture format")}function R(L){var I=i.get(L),z=L.isWebGLRenderTargetCube===!0;if(L.depthTexture){if(z)throw new Error("target.depthTexture not supported in Cube render targets");S(I.__webglFramebuffer,L)}else if(z){I.__webglDepthbuffer=[];for(var X=0;X<6;X++)e.bindFramebuffer(e.FRAMEBUFFER,I.__webglFramebuffer[X]),I.__webglDepthbuffer[X]=e.createRenderbuffer(),U(I.__webglDepthbuffer[X],L)}else e.bindFramebuffer(e.FRAMEBUFFER,I.__webglFramebuffer),I.__webglDepthbuffer=e.createRenderbuffer(),U(I.__webglDepthbuffer,L);e.bindFramebuffer(e.FRAMEBUFFER,null)}function V(L){var I=i.get(L),z=i.get(L.texture);L.addEventListener("dispose",y),z.__webglTexture=e.createTexture(),l.textures++;var X=L.isWebGLRenderTargetCube===!0,Y=f(L);if(X){I.__webglFramebuffer=[];for(var $=0;$<6;$++)I.__webglFramebuffer[$]=e.createFramebuffer()}else I.__webglFramebuffer=e.createFramebuffer();if(X){n.bindTexture(e.TEXTURE_CUBE_MAP,z.__webglTexture),A(e.TEXTURE_CUBE_MAP,L.texture,Y);for(var $=0;$<6;$++)b(I.__webglFramebuffer[$],L,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+$);L.texture.generateMipmaps&&Y&&e.generateMipmap(e.TEXTURE_CUBE_MAP),n.bindTexture(e.TEXTURE_CUBE_MAP,null)}else n.bindTexture(e.TEXTURE_2D,z.__webglTexture),A(e.TEXTURE_2D,L.texture,Y),b(I.__webglFramebuffer,L,e.COLOR_ATTACHMENT0,e.TEXTURE_2D),L.texture.generateMipmaps&&Y&&e.generateMipmap(e.TEXTURE_2D),n.bindTexture(e.TEXTURE_2D,null);L.depthBuffer&&R(L)}function W(L){var I=L.texture;if(I.generateMipmaps&&f(L)&&I.minFilter!==Ai&&I.minFilter!==hi){var z=L&&L.isWebGLRenderTargetCube?e.TEXTURE_CUBE_MAP:e.TEXTURE_2D,X=i.get(I).__webglTexture;n.bindTexture(z,X),e.generateMipmap(z),n.bindTexture(z,null)}}this.setTexture2D=w,this.setTextureCube=M,this.setTextureCubeDynamic=T,this.setupRenderTarget=V,this.updateRenderTargetMipmap=W}function PI(){var e={};return{get:function(t){var n=t.uuid,i=e[n];return i===void 0&&(i={},e[n]=i),i},delete:function(t){delete e[t.uuid]},clear:function(){e={}}}}function UI(e,t,n){function i(){var ie=!1,Ue=new Kt,Ne=null,Ve=new Kt;return{setMask:function(Le){Ne!==Le&&!ie&&(e.colorMask(Le,Le,Le,Le),Ne=Le)},setLocked:function(Le){ie=Le},setClear:function(Le,rt,Et,ee,Xe){Xe===!0&&(Le*=ee,rt*=ee,Et*=ee),Ue.set(Le,rt,Et,ee),Ve.equals(Ue)===!1&&(e.clearColor(Le,rt,Et,ee),Ve.copy(Ue))},reset:function(){ie=!1,Ne=null,Ve.set(0,0,0,1)}}}function r(){var ie=!1,Ue=null,Ne=null,Ve=null;return{setTest:function(Le){Le?Pe(e.DEPTH_TEST):we(e.DEPTH_TEST)},setMask:function(Le){Ue!==Le&&!ie&&(e.depthMask(Le),Ue=Le)},setFunc:function(Le){if(Ne!==Le){if(Le)switch(Le){case hx:e.depthFunc(e.NEVER);break;case fx:e.depthFunc(e.ALWAYS);break;case dx:e.depthFunc(e.LESS);break;case th:e.depthFunc(e.LEQUAL);break;case px:e.depthFunc(e.EQUAL);break;case mx:e.depthFunc(e.GEQUAL);break;case vx:e.depthFunc(e.GREATER);break;case gx:e.depthFunc(e.NOTEQUAL);break;default:e.depthFunc(e.LEQUAL)}else e.depthFunc(e.LEQUAL);Ne=Le}},setLocked:function(Le){ie=Le},setClear:function(Le){Ve!==Le&&(e.clearDepth(Le),Ve=Le)},reset:function(){ie=!1,Ue=null,Ne=null,Ve=null}}}function a(){var ie=!1,Ue=null,Ne=null,Ve=null,Le=null,rt=null,Et=null,ee=null,Xe=null;return{setTest:function(fe){fe?Pe(e.STENCIL_TEST):we(e.STENCIL_TEST)},setMask:function(fe){Ue!==fe&&!ie&&(e.stencilMask(fe),Ue=fe)},setFunc:function(fe,Oe,Ye){(Ne!==fe||Ve!==Oe||Le!==Ye)&&(e.stencilFunc(fe,Oe,Ye),Ne=fe,Ve=Oe,Le=Ye)},setOp:function(fe,Oe,Ye){(rt!==fe||Et!==Oe||ee!==Ye)&&(e.stencilOp(fe,Oe,Ye),rt=fe,Et=Oe,ee=Ye)},setLocked:function(fe){ie=fe},setClear:function(fe){Xe!==fe&&(e.clearStencil(fe),Xe=fe)},reset:function(){ie=!1,Ue=null,Ne=null,Ve=null,Le=null,rt=null,Et=null,ee=null,Xe=null}}}var o=new i,l=new r,h=new a,u=e.getParameter(e.MAX_VERTEX_ATTRIBS),f=new Uint8Array(u),d=new Uint8Array(u),p=new Uint8Array(u),g={},x=null,y=null,_=null,v=null,w=null,M=null,T=null,A=null,P=!1,b=null,U=null,S=null,R=null,V=null,W=null,L=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),I=parseFloat(/^WebGL\ ([0-9])/.exec(e.getParameter(e.VERSION))[1]),z=parseFloat(I)>=1,X=null,Y={},$=new Kt,ne=new Kt;function ae(ie,Ue,Ne){var Ve=new Uint8Array(4),Le=e.createTexture();e.bindTexture(ie,Le),e.texParameteri(ie,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(ie,e.TEXTURE_MAG_FILTER,e.NEAREST);for(var rt=0;rt<Ne;rt++)e.texImage2D(Ue+rt,0,e.RGBA,1,1,0,e.RGBA,e.UNSIGNED_BYTE,Ve);return Le}var j={};j[e.TEXTURE_2D]=ae(e.TEXTURE_2D,e.TEXTURE_2D,1),j[e.TEXTURE_CUBE_MAP]=ae(e.TEXTURE_CUBE_MAP,e.TEXTURE_CUBE_MAP_POSITIVE_X,6);function K(){o.setClear(0,0,0,1),l.setClear(1),h.setClear(0),Pe(e.DEPTH_TEST),ze(th),tt(!1),ot(Hl),Pe(e.CULL_FACE),Pe(e.BLEND),ht(rl)}function Q(){for(var ie=0,Ue=f.length;ie<Ue;ie++)f[ie]=0}function he(ie){if(f[ie]=1,d[ie]===0&&(e.enableVertexAttribArray(ie),d[ie]=1),p[ie]!==0){var Ue=t.get("ANGLE_instanced_arrays");Ue.vertexAttribDivisorANGLE(ie,0),p[ie]=0}}function me(ie,Ue,Ne){f[ie]=1,d[ie]===0&&(e.enableVertexAttribArray(ie),d[ie]=1),p[ie]!==Ue&&(Ne.vertexAttribDivisorANGLE(ie,Ue),p[ie]=Ue)}function ge(){for(var ie=0,Ue=d.length;ie!==Ue;++ie)d[ie]!==f[ie]&&(e.disableVertexAttribArray(ie),d[ie]=0)}function Pe(ie){g[ie]!==!0&&(e.enable(ie),g[ie]=!0)}function we(ie){g[ie]!==!1&&(e.disable(ie),g[ie]=!1)}function Se(){if(x===null&&(x=[],t.get("WEBGL_compressed_texture_pvrtc")||t.get("WEBGL_compressed_texture_s3tc")||t.get("WEBGL_compressed_texture_etc1")))for(var ie=e.getParameter(e.COMPRESSED_TEXTURE_FORMATS),Ue=0;Ue<ie.length;Ue++)x.push(ie[Ue]);return x}function ht(ie,Ue,Ne,Ve,Le,rt,Et,ee){ie!==Vl?Pe(e.BLEND):we(e.BLEND),(ie!==y||ee!==P)&&(ie===Np?ee?(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ONE,e.ONE,e.ONE,e.ONE)):(e.blendEquation(e.FUNC_ADD),e.blendFunc(e.SRC_ALPHA,e.ONE)):ie===Op?ee?(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ZERO,e.ZERO,e.ONE_MINUS_SRC_COLOR,e.ONE_MINUS_SRC_ALPHA)):(e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ZERO,e.ONE_MINUS_SRC_COLOR)):ie===Bp?ee?(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ZERO,e.SRC_COLOR,e.ZERO,e.SRC_ALPHA)):(e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ZERO,e.SRC_COLOR)):ee?(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.ONE,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA)):(e.blendEquationSeparate(e.FUNC_ADD,e.FUNC_ADD),e.blendFuncSeparate(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA)),y=ie,P=ee),ie===zp?(Le=Le||Ue,rt=rt||Ne,Et=Et||Ve,(Ue!==_||Le!==M)&&(e.blendEquationSeparate(n(Ue),n(Le)),_=Ue,M=Le),(Ne!==v||Ve!==w||rt!==T||Et!==A)&&(e.blendFuncSeparate(n(Ne),n(Ve),n(rt),n(Et)),v=Ne,w=Ve,T=rt,A=Et)):(_=null,v=null,w=null,M=null,T=null,A=null)}function J(ie){o.setMask(ie)}function se(ie){l.setTest(ie)}function Qe(ie){l.setMask(ie)}function ze(ie){l.setFunc(ie)}function Re(ie){h.setTest(ie)}function et(ie){h.setMask(ie)}function qe(ie,Ue,Ne){h.setFunc(ie,Ue,Ne)}function We(ie,Ue,Ne){h.setOp(ie,Ue,Ne)}function tt(ie){b!==ie&&(ie?e.frontFace(e.CW):e.frontFace(e.CCW),b=ie)}function ot(ie){ie!==Z0?(Pe(e.CULL_FACE),ie!==U&&(ie===Hl?e.cullFace(e.BACK):ie===Pp?e.cullFace(e.FRONT):e.cullFace(e.FRONT_AND_BACK))):we(e.CULL_FACE),U=ie}function pt(ie){ie!==S&&(z&&e.lineWidth(ie),S=ie)}function Dt(ie,Ue,Ne){ie?(Pe(e.POLYGON_OFFSET_FILL),(R!==Ue||V!==Ne)&&(e.polygonOffset(Ue,Ne),R=Ue,V=Ne)):we(e.POLYGON_OFFSET_FILL)}function G(){return W}function N(ie){W=ie,ie?Pe(e.SCISSOR_TEST):we(e.SCISSOR_TEST)}function ue(ie){ie===void 0&&(ie=e.TEXTURE0+L-1),X!==ie&&(e.activeTexture(ie),X=ie)}function Ce(ie,Ue){X===null&&ue();var Ne=Y[X];Ne===void 0&&(Ne={type:void 0,texture:void 0},Y[X]=Ne),(Ne.type!==ie||Ne.texture!==Ue)&&(e.bindTexture(ie,Ue||j[ie]),Ne.type=ie,Ne.texture=Ue)}function be(){try{e.compressedTexImage2D.apply(e,arguments)}catch(ie){console.error(ie)}}function Fe(){try{e.texImage2D.apply(e,arguments)}catch(ie){console.error(ie)}}function st(ie){$.equals(ie)===!1&&(e.scissor(ie.x,ie.y,ie.z,ie.w),$.copy(ie))}function Ge(ie){ne.equals(ie)===!1&&(e.viewport(ie.x,ie.y,ie.z,ie.w),ne.copy(ie))}function ve(){for(var ie=0;ie<d.length;ie++)d[ie]===1&&(e.disableVertexAttribArray(ie),d[ie]=0);g={},x=null,X=null,Y={},y=null,b=null,U=null,o.reset(),l.reset(),h.reset()}return{buffers:{color:o,depth:l,stencil:h},init:K,initAttributes:Q,enableAttribute:he,enableAttributeAndDivisor:me,disableUnusedAttributes:ge,enable:Pe,disable:we,getCompressedTextureFormats:Se,setBlending:ht,setColorWrite:J,setDepthTest:se,setDepthWrite:Qe,setDepthFunc:ze,setStencilTest:Re,setStencilWrite:et,setStencilFunc:qe,setStencilOp:We,setFlipSided:tt,setCullFace:ot,setLineWidth:pt,setPolygonOffset:Dt,getScissorTest:G,setScissorTest:N,activeTexture:ue,bindTexture:Ce,compressedTexImage2D:be,texImage2D:Fe,scissor:st,viewport:Ge,reset:ve}}function DI(e,t,n){var i;function r(){if(i!==void 0)return i;var T=t.get("EXT_texture_filter_anisotropic");return T!==null?i=e.getParameter(T.MAX_TEXTURE_MAX_ANISOTROPY_EXT):i=0,i}function a(T){if(T==="highp"){if(e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision>0)return"highp";T="mediump"}return T==="mediump"&&e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}var o=n.precision!==void 0?n.precision:"highp",l=a(o);l!==o&&(console.warn("THREE.WebGLRenderer:",o,"not supported, using",l,"instead."),o=l);var h=n.logarithmicDepthBuffer===!0&&!!t.get("EXT_frag_depth"),u=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),f=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS),d=e.getParameter(e.MAX_TEXTURE_SIZE),p=e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),g=e.getParameter(e.MAX_VERTEX_ATTRIBS),x=e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS),y=e.getParameter(e.MAX_VARYING_VECTORS),_=e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS),v=f>0,w=!!t.get("OES_texture_float"),M=v&&w;return{getMaxAnisotropy:r,getMaxPrecision:a,precision:o,logarithmicDepthBuffer:h,maxTextures:u,maxVertexTextures:f,maxTextureSize:d,maxCubemapSize:p,maxAttributes:g,maxVertexUniforms:x,maxVaryings:y,maxFragmentUniforms:_,vertexTextures:v,floatFragmentTextures:w,floatVertexTextures:M}}function II(e){var t={};return{get:function(n){if(t[n]!==void 0)return t[n];var i;switch(n){case"WEBGL_depth_texture":i=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;case"WEBGL_compressed_texture_etc1":i=e.getExtension("WEBGL_compressed_texture_etc1");break;default:i=e.getExtension(n)}return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),t[n]=i,i}}}function FI(){var e=this,t=null,n=0,i=!1,r=!1,a=new wi,o=new Vi,l={value:null,needsUpdate:!1};this.uniform=l,this.numPlanes=0,this.numIntersection=0,this.init=function(f,d,p){var g=f.length!==0||d||n!==0||i;return i=d,t=u(f,p,0),n=f.length,g},this.beginShadows=function(){r=!0,u(null)},this.endShadows=function(){r=!1,h()},this.setState=function(f,d,p,g,x,y){if(!i||f===null||f.length===0||r&&!p)r?u(null):h();else{var _=r?0:n,v=_*4,w=x.clippingState||null;l.value=w,w=u(f,g,v,y);for(var M=0;M!==v;++M)w[M]=t[M];x.clippingState=w,this.numIntersection=d?this.numPlanes:0,this.numPlanes+=_}};function h(){l.value!==t&&(l.value=t,l.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function u(f,d,p,g){var x=f!==null?f.length:0,y=null;if(x!==0){if(y=l.value,g!==!0||y===null){var _=p+x*4,v=d.matrixWorldInverse;o.getNormalMatrix(v),(y===null||y.length<_)&&(y=new Float32Array(_));for(var w=0,M=p;w!==x;++w,M+=4)a.copy(f[w]).applyMatrix4(v,o),a.normal.toArray(y,M),y[M+3]=a.constant}l.value=y,l.needsUpdate=!0}return e.numPlanes=x,y}}function Kp(e){console.log("THREE.WebGLRenderer",j0),e=e||{};var t=e.canvas!==void 0?e.canvas:document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),n=e.context!==void 0?e.context:null,i=e.alpha!==void 0?e.alpha:!1,r=e.depth!==void 0?e.depth:!0,a=e.stencil!==void 0?e.stencil:!0,o=e.antialias!==void 0?e.antialias:!1,l=e.premultipliedAlpha!==void 0?e.premultipliedAlpha:!0,h=e.preserveDrawingBuffer!==void 0?e.preserveDrawingBuffer:!1,u=[],f=[],d=-1,p=[],g=-1,x=new Float32Array(8),y=[],_=[];this.domElement=t,this.context=null,this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.gammaFactor=2,this.gammaInput=!1,this.gammaOutput=!1,this.physicallyCorrectLights=!1,this.toneMapping=kp,this.toneMappingExposure=1,this.toneMappingWhitePoint=1,this.maxMorphTargets=8,this.maxMorphNormals=4;var v=this,w=null,M=null,T=null,A=-1,P="",b=null,U=new Kt,S=null,R=new Kt,V=0,W=new dt(0),L=0,I=t.width,z=t.height,X=1,Y=new Kt(0,0,I,z),$=!1,ne=new Kt(0,0,I,z),ae=new jl,j=new FI,K=!1,Q=!1,he=new Yn,me=new xt,ge=new k,Pe=new xt,we=new xt,Se={hash:"",ambient:[0,0,0],directional:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],point:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],shadows:[]},ht={calls:0,vertices:0,faces:0,points:0};this.info={render:ht,memory:{geometries:0,textures:0},programs:null};var J;try{var se={alpha:i,depth:r,stencil:a,antialias:o,premultipliedAlpha:l,preserveDrawingBuffer:h};if(J=n||t.getContext("webgl",se)||t.getContext("experimental-webgl",se),J===null)throw t.getContext("webgl")!==null?"Error creating WebGL context with your selected attributes.":"Error creating WebGL context.";J.getShaderPrecisionFormat===void 0&&(J.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}}),t.addEventListener("webglcontextlost",Ne,!1)}catch(C){console.error("THREE.WebGLRenderer: "+C)}var Qe=new II(J);Qe.get("WEBGL_depth_texture"),Qe.get("OES_texture_float"),Qe.get("OES_texture_float_linear"),Qe.get("OES_texture_half_float"),Qe.get("OES_texture_half_float_linear"),Qe.get("OES_standard_derivatives"),Qe.get("ANGLE_instanced_arrays"),Qe.get("OES_element_index_uint")&&(ft.MaxIndex=4294967296);var ze=new DI(J,Qe,e),Re=new UI(J,Qe,nt),et=new PI,qe=new CI(J,Qe,Re,et,ze,nt,this.info),We=new LI(J,et,this.info),tt=new AI(this,ze),ot=new _I;this.info.programs=tt.programs;var pt=new gI(J,Qe,ht),Dt=new vI(J,Qe,ht),G=new _o(-1,1,1,-1,0,1),N=new Wn,ue=new Pn(new ns(2,2),new di({depthTest:!1,depthWrite:!1,fog:!1})),Ce=go.cube,be=new Pn(new ts(5,5,5),new ii({uniforms:Ce.uniforms,vertexShader:Ce.vertexShader,fragmentShader:Ce.fragmentShader,side:pa,depthTest:!1,depthWrite:!1,fog:!1}));function Fe(){return M===null?X:1}function st(){Re.init(),Re.scissor(U.copy(Y).multiplyScalar(X)),Re.viewport(R.copy(ne).multiplyScalar(X)),Re.buffers.color.setClear(W.r,W.g,W.b,L,l)}function Ge(){w=null,b=null,P="",A=-1,Re.reset()}st(),this.context=J,this.capabilities=ze,this.extensions=Qe,this.properties=et,this.state=Re;var ve=new ey(this,Se,We,ze);this.shadowMap=ve;var ie=new fI(this,y),Ue=new hI(this,_);this.getContext=function(){return J},this.getContextAttributes=function(){return J.getContextAttributes()},this.forceContextLoss=function(){Qe.get("WEBGL_lose_context").loseContext()},this.getMaxAnisotropy=function(){return ze.getMaxAnisotropy()},this.getPrecision=function(){return ze.precision},this.getPixelRatio=function(){return X},this.setPixelRatio=function(C){C!==void 0&&(X=C,this.setSize(ne.z,ne.w,!1))},this.getSize=function(){return{width:I,height:z}},this.setSize=function(C,B,Z){I=C,z=B,t.width=C*X,t.height=B*X,Z!==!1&&(t.style.width=C+"px",t.style.height=B+"px"),this.setViewport(0,0,C,B)},this.setViewport=function(C,B,Z,xe){Re.viewport(ne.set(C,B,Z,xe))},this.setScissor=function(C,B,Z,xe){Re.scissor(Y.set(C,B,Z,xe))},this.setScissorTest=function(C){Re.setScissorTest($=C)},this.getClearColor=function(){return W},this.setClearColor=function(C,B){W.set(C),L=B!==void 0?B:1,Re.buffers.color.setClear(W.r,W.g,W.b,L,l)},this.getClearAlpha=function(){return L},this.setClearAlpha=function(C){L=C,Re.buffers.color.setClear(W.r,W.g,W.b,L,l)},this.clear=function(C,B,Z){var xe=0;(C===void 0||C)&&(xe|=J.COLOR_BUFFER_BIT),(B===void 0||B)&&(xe|=J.DEPTH_BUFFER_BIT),(Z===void 0||Z)&&(xe|=J.STENCIL_BUFFER_BIT),J.clear(xe)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.clearTarget=function(C,B,Z,xe){this.setRenderTarget(C),this.clear(B,Z,xe)},this.resetGLState=Ge,this.dispose=function(){p=[],g=-1,f=[],d=-1,t.removeEventListener("webglcontextlost",Ne,!1)};function Ne(C){C.preventDefault(),Ge(),st(),et.clear()}function Ve(C){var B=C.target;B.removeEventListener("dispose",Ve),Le(B)}function Le(C){rt(C),et.delete(C)}function rt(C){var B=et.get(C).program;C.program=void 0,B!==void 0&&tt.releaseProgram(B)}this.renderBufferImmediate=function(C,B,Z){Re.initAttributes();var xe=et.get(C);C.hasPositions&&!xe.position&&(xe.position=J.createBuffer()),C.hasNormals&&!xe.normal&&(xe.normal=J.createBuffer()),C.hasUvs&&!xe.uv&&(xe.uv=J.createBuffer()),C.hasColors&&!xe.color&&(xe.color=J.createBuffer());var re=B.getAttributes();if(C.hasPositions&&(J.bindBuffer(J.ARRAY_BUFFER,xe.position),J.bufferData(J.ARRAY_BUFFER,C.positionArray,J.DYNAMIC_DRAW),Re.enableAttribute(re.position),J.vertexAttribPointer(re.position,3,J.FLOAT,!1,0,0)),C.hasNormals){if(J.bindBuffer(J.ARRAY_BUFFER,xe.normal),!Z.isMeshPhongMaterial&&!Z.isMeshStandardMaterial&&!Z.isMeshNormalMaterial&&Z.shading===Dp)for(var Be=0,ct=C.count*3;Be<ct;Be+=9){var He=C.normalArray,mt=(He[Be+0]+He[Be+3]+He[Be+6])/3,lt=(He[Be+1]+He[Be+4]+He[Be+7])/3,ke=(He[Be+2]+He[Be+5]+He[Be+8])/3;He[Be+0]=mt,He[Be+1]=lt,He[Be+2]=ke,He[Be+3]=mt,He[Be+4]=lt,He[Be+5]=ke,He[Be+6]=mt,He[Be+7]=lt,He[Be+8]=ke}J.bufferData(J.ARRAY_BUFFER,C.normalArray,J.DYNAMIC_DRAW),Re.enableAttribute(re.normal),J.vertexAttribPointer(re.normal,3,J.FLOAT,!1,0,0)}C.hasUvs&&Z.map&&(J.bindBuffer(J.ARRAY_BUFFER,xe.uv),J.bufferData(J.ARRAY_BUFFER,C.uvArray,J.DYNAMIC_DRAW),Re.enableAttribute(re.uv),J.vertexAttribPointer(re.uv,2,J.FLOAT,!1,0,0)),C.hasColors&&Z.vertexColors!==Bh&&(J.bindBuffer(J.ARRAY_BUFFER,xe.color),J.bufferData(J.ARRAY_BUFFER,C.colorArray,J.DYNAMIC_DRAW),Re.enableAttribute(re.color),J.vertexAttribPointer(re.color,3,J.FLOAT,!1,0,0)),Re.disableUnusedAttributes(),J.drawArrays(J.TRIANGLES,0,C.count),C.count=0},this.renderBufferDirect=function(C,B,Z,xe,re,Be){jn(xe);var ct=xn(C,B,xe,re),He=!1,mt=Z.id+"_"+ct.id+"_"+xe.wireframe;mt!==P&&(P=mt,He=!0);var lt=re.morphTargetInfluences;if(lt!==void 0){for(var ke=[],De=0,$t=lt.length;De<$t;De++){var yt=lt[De];ke.push([yt,De])}ke.sort(ee),ke.length>8&&(ke.length=8);for(var en=Z.morphAttributes,De=0,$t=ke.length;De<$t;De++){var yt=ke[De];if(x[De]=yt[0],yt[0]!==0){var jt=yt[1];xe.morphTargets===!0&&en.position&&Z.addAttribute("morphTarget"+De,en.position[jt]),xe.morphNormals===!0&&en.normal&&Z.addAttribute("morphNormal"+De,en.normal[jt])}else xe.morphTargets===!0&&Z.removeAttribute("morphTarget"+De),xe.morphNormals===!0&&Z.removeAttribute("morphNormal"+De)}for(var De=ke.length,Bn=x.length;De<Bn;De++)x[De]=0;ct.getUniforms().setValue(J,"morphTargetInfluences",x),He=!0}var jt=Z.index,yn=Z.attributes.position,$e=1;xe.wireframe===!0&&(jt=We.getWireframeAttribute(Z),$e=2);var rn;jt!==null?(rn=Dt,rn.setIndex(jt)):rn=pt,He&&(Et(xe,ct,Z),jt!==null&&J.bindBuffer(J.ELEMENT_ARRAY_BUFFER,We.getAttributeBuffer(jt)));var Un=0;jt!==null?Un=jt.count:yn!==void 0&&(Un=yn.count);var dn=Z.drawRange.start*$e,Xr=Z.drawRange.count*$e,Ss=Be!==null?Be.start*$e:0,wa=Be!==null?Be.count*$e:1/0,bs=Math.max(dn,Ss),cl=Math.min(Un,dn+Xr,Ss+wa)-1,ul=Math.max(0,cl-bs+1);if(ul!==0){if(re.isMesh)if(xe.wireframe===!0)Re.setLineWidth(xe.wireframeLinewidth*Fe()),rn.setMode(J.LINES);else switch(re.drawMode){case $p:rn.setMode(J.TRIANGLES);break;case Ox:rn.setMode(J.TRIANGLE_STRIP);break;case Bx:rn.setMode(J.TRIANGLE_FAN);break}else if(re.isLine){var Ts=xe.linewidth;Ts===void 0&&(Ts=1),Re.setLineWidth(Ts*Fe()),re.isLineSegments?rn.setMode(J.LINES):rn.setMode(J.LINE_STRIP)}else re.isPoints&&rn.setMode(J.POINTS);Z&&Z.isInstancedBufferGeometry?Z.maxInstancedCount>0&&rn.renderInstances(Z,bs,ul):rn.render(bs,ul)}};function Et(C,B,Z,xe){var re;if(Z&&Z.isInstancedBufferGeometry&&(re=Qe.get("ANGLE_instanced_arrays"),re===null)){console.error("THREE.WebGLRenderer.setupVertexAttributes: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}xe===void 0&&(xe=0),Re.initAttributes();var Be=Z.attributes,ct=B.getAttributes(),He=C.defaultAttributeValues;for(var mt in ct){var lt=ct[mt];if(lt>=0){var ke=Be[mt];if(ke!==void 0){var De=ke.normalized,$t=ke.itemSize,yt=We.getAttributeProperties(ke),en=yt.__webglBuffer,Bn=yt.type,jt=yt.bytesPerElement;if(ke.isInterleavedBufferAttribute){var yn=ke.data,$e=yn.stride,rn=ke.offset;yn&&yn.isInstancedInterleavedBuffer?(Re.enableAttributeAndDivisor(lt,yn.meshPerAttribute,re),Z.maxInstancedCount===void 0&&(Z.maxInstancedCount=yn.meshPerAttribute*yn.count)):Re.enableAttribute(lt),J.bindBuffer(J.ARRAY_BUFFER,en),J.vertexAttribPointer(lt,$t,Bn,De,$e*jt,(xe*$e+rn)*jt)}else ke.isInstancedBufferAttribute?(Re.enableAttributeAndDivisor(lt,ke.meshPerAttribute,re),Z.maxInstancedCount===void 0&&(Z.maxInstancedCount=ke.meshPerAttribute*ke.count)):Re.enableAttribute(lt),J.bindBuffer(J.ARRAY_BUFFER,en),J.vertexAttribPointer(lt,$t,Bn,De,0,xe*$t*jt)}else if(He!==void 0){var Un=He[mt];if(Un!==void 0)switch(Un.length){case 2:J.vertexAttrib2fv(lt,Un);break;case 3:J.vertexAttrib3fv(lt,Un);break;case 4:J.vertexAttrib4fv(lt,Un);break;default:J.vertexAttrib1fv(lt,Un)}}}}Re.disableUnusedAttributes()}function ee(C,B){return Math.abs(B[0])-Math.abs(C[0])}function Xe(C,B){return C.object.renderOrder!==B.object.renderOrder?C.object.renderOrder-B.object.renderOrder:C.material.program&&B.material.program&&C.material.program!==B.material.program?C.material.program.id-B.material.program.id:C.material.id!==B.material.id?C.material.id-B.material.id:C.z!==B.z?C.z-B.z:C.id-B.id}function fe(C,B){return C.object.renderOrder!==B.object.renderOrder?C.object.renderOrder-B.object.renderOrder:C.z!==B.z?B.z-C.z:C.id-B.id}this.render=function(C,B,Z,xe){if(B!==void 0&&B.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}P="",A=-1,b=null,C.autoUpdate===!0&&C.updateMatrixWorld(),B.parent===null&&B.updateMatrixWorld(),B.matrixWorldInverse.getInverse(B.matrixWorld),me.multiplyMatrices(B.projectionMatrix,B.matrixWorldInverse),ae.setFromMatrix(me),u.length=0,d=-1,g=-1,y.length=0,_.length=0,Q=this.localClippingEnabled,K=j.init(this.clippingPlanes,Q,B),Qt(C,B),f.length=d+1,p.length=g+1,v.sortObjects===!0&&(f.sort(Xe),p.sort(fe)),K&&j.beginShadows(),ye(u),ve.render(C,B),pe(u,B),K&&j.endShadows(),ht.calls=0,ht.vertices=0,ht.faces=0,ht.points=0,Z===void 0&&(Z=null),this.setRenderTarget(Z);var re=C.background;if(re===null?Re.buffers.color.setClear(W.r,W.g,W.b,L,l):re&&re.isColor&&(Re.buffers.color.setClear(re.r,re.g,re.b,1,l),xe=!0),(this.autoClear||xe)&&this.clear(this.autoClearColor,this.autoClearDepth,this.autoClearStencil),re&&re.isCubeTexture?(N.projectionMatrix.copy(B.projectionMatrix),N.matrixWorld.extractRotation(B.matrixWorld),N.matrixWorldInverse.getInverse(N.matrixWorld),be.material.uniforms.tCube.value=re,be.modelViewMatrix.multiplyMatrices(N.matrixWorldInverse,be.matrixWorld),We.update(be),v.renderBufferDirect(N,null,be.geometry,be.material,be,null)):re&&re.isTexture&&(ue.material.map=re,We.update(ue),v.renderBufferDirect(G,null,ue.geometry,ue.material,ue,null)),C.overrideMaterial){var Be=C.overrideMaterial;On(f,C,B,Be),On(p,C,B,Be)}else Re.setBlending(Vl),On(f,C,B),On(p,C,B);ie.render(C,B),Ue.render(C,B,R),Z&&qe.updateRenderTargetMipmap(Z),Re.setDepthTest(!0),Re.setDepthWrite(!0),Re.setColorWrite(!0)};function Oe(C,B,Z,xe,re){var Be,ct;Z.transparent?(Be=p,ct=++g):(Be=f,ct=++d);var He=Be[ct];He!==void 0?(He.id=C.id,He.object=C,He.geometry=B,He.material=Z,He.z=ge.z,He.group=re):(He={id:C.id,object:C,geometry:B,material:Z,z:ge.z,group:re},Be.push(He))}function Ye(C){var B=C.geometry;return B.boundingSphere===null&&B.computeBoundingSphere(),he.copy(B.boundingSphere).applyMatrix4(C.matrixWorld),qt(he)}function Ft(C){return he.center.set(0,0,0),he.radius=.7071067811865476,he.applyMatrix4(C.matrixWorld),qt(he)}function qt(C){if(!ae.intersectsSphere(C))return!1;var B=j.numPlanes;if(B===0)return!0;var Z=v.clippingPlanes,xe=C.center,re=-C.radius,Be=0;do if(Z[Be].distanceToPoint(xe)<re)return!1;while(++Be!==B);return!0}function Qt(C,B){if(C.visible!==!1){var Z=(C.layers.mask&B.layers.mask)!==0;if(Z){if(C.isLight)u.push(C);else if(C.isSprite)(C.frustumCulled===!1||Ft(C)===!0)&&y.push(C);else if(C.isLensFlare)_.push(C);else if(C.isImmediateRenderObject)v.sortObjects===!0&&(ge.setFromMatrixPosition(C.matrixWorld),ge.applyProjection(me)),Oe(C,null,C.material,ge.z,null);else if((C.isMesh||C.isLine||C.isPoints)&&(C.isSkinnedMesh&&C.skeleton.update(),C.frustumCulled===!1||Ye(C)===!0)){var xe=C.material;if(xe.visible===!0){v.sortObjects===!0&&(ge.setFromMatrixPosition(C.matrixWorld),ge.applyProjection(me));var re=We.update(C);if(xe.isMultiMaterial)for(var Be=re.groups,ct=xe.materials,He=0,mt=Be.length;He<mt;He++){var lt=Be[He],ke=ct[lt.materialIndex];ke.visible===!0&&Oe(C,re,ke,ge.z,lt)}else Oe(C,re,xe,ge.z,null)}}}for(var De=C.children,He=0,mt=De.length;He<mt;He++)Qt(De[He],B)}}function On(C,B,Z,xe){for(var re=0,Be=C.length;re<Be;re++){var ct=C[re],He=ct.object,mt=ct.geometry,lt=xe===void 0?ct.material:xe,ke=ct.group;if(He.modelViewMatrix.multiplyMatrices(Z.matrixWorldInverse,He.matrixWorld),He.normalMatrix.getNormalMatrix(He.modelViewMatrix),He.onBeforeRender(v,B,Z,mt,lt,ke),He.isImmediateRenderObject){jn(lt);var De=xn(Z,B.fog,lt,He);P="",He.render(function($t){v.renderBufferImmediate($t,De,lt)})}else v.renderBufferDirect(Z,B.fog,mt,lt,He,ke);He.onAfterRender(v,B,Z,mt,lt,ke)}}function Xt(C,B,Z){var xe=et.get(C),re=tt.getParameters(C,Se,B,j.numPlanes,j.numIntersection,Z),Be=tt.getProgramCode(C,re),ct=xe.program,He=!0;if(ct===void 0)C.addEventListener("dispose",Ve);else if(ct.code!==Be)rt(C);else{if(re.shaderID!==void 0)return;He=!1}if(He){if(re.shaderID){var mt=go[re.shaderID];xe.__webglShader={name:C.type,uniforms:ci.clone(mt.uniforms),vertexShader:mt.vertexShader,fragmentShader:mt.fragmentShader}}else xe.__webglShader={name:C.type,uniforms:C.uniforms,vertexShader:C.vertexShader,fragmentShader:C.fragmentShader};C.__webglShader=xe.__webglShader,ct=tt.acquireProgram(C,re,Be),xe.program=ct,C.program=ct}var lt=ct.getAttributes();if(C.morphTargets){C.numSupportedMorphTargets=0;for(var ke=0;ke<v.maxMorphTargets;ke++)lt["morphTarget"+ke]>=0&&C.numSupportedMorphTargets++}if(C.morphNormals){C.numSupportedMorphNormals=0;for(var ke=0;ke<v.maxMorphNormals;ke++)lt["morphNormal"+ke]>=0&&C.numSupportedMorphNormals++}var De=xe.__webglShader.uniforms;(!C.isShaderMaterial&&!C.isRawShaderMaterial||C.clipping===!0)&&(xe.numClippingPlanes=j.numPlanes,xe.numIntersection=j.numIntersection,De.clippingPlanes=j.uniform),xe.fog=B,xe.lightsHash=Se.hash,C.lights&&(De.ambientLightColor.value=Se.ambient,De.directionalLights.value=Se.directional,De.spotLights.value=Se.spot,De.rectAreaLights.value=Se.rectArea,De.pointLights.value=Se.point,De.hemisphereLights.value=Se.hemi,De.directionalShadowMap.value=Se.directionalShadowMap,De.directionalShadowMatrix.value=Se.directionalShadowMatrix,De.spotShadowMap.value=Se.spotShadowMap,De.spotShadowMatrix.value=Se.spotShadowMatrix,De.pointShadowMap.value=Se.pointShadowMap,De.pointShadowMatrix.value=Se.pointShadowMatrix);var $t=xe.program.getUniforms(),yt=va.seqWithValue($t.seq,De);xe.uniformsList=yt}function jn(C){C.side===il?Re.disable(J.CULL_FACE):Re.enable(J.CULL_FACE),Re.setFlipSided(C.side===pa),C.transparent===!0?Re.setBlending(C.blending,C.blendEquation,C.blendSrc,C.blendDst,C.blendEquationAlpha,C.blendSrcAlpha,C.blendDstAlpha,C.premultipliedAlpha):Re.setBlending(Vl),Re.setDepthFunc(C.depthFunc),Re.setDepthTest(C.depthTest),Re.setDepthWrite(C.depthWrite),Re.setColorWrite(C.colorWrite),Re.setPolygonOffset(C.polygonOffset,C.polygonOffsetFactor,C.polygonOffsetUnits)}function xn(C,B,Z,xe){V=0;var re=et.get(Z);if(K&&(Q||C!==b)){var Be=C===b&&Z.id===A;j.setState(Z.clippingPlanes,Z.clipIntersection,Z.clipShadows,C,re,Be)}Z.needsUpdate===!1&&(re.program===void 0||Z.fog&&re.fog!==B||Z.lights&&re.lightsHash!==Se.hash||re.numClippingPlanes!==void 0&&(re.numClippingPlanes!==j.numPlanes||re.numIntersection!==j.numIntersection))&&(Z.needsUpdate=!0),Z.needsUpdate&&(Xt(Z,B,xe),Z.needsUpdate=!1);var ct=!1,He=!1,mt=!1,lt=re.program,ke=lt.getUniforms(),De=re.__webglShader.uniforms;if(lt.id!==w&&(J.useProgram(lt.program),w=lt.id,ct=!0,He=!0,mt=!0),Z.id!==A&&(A=Z.id,He=!0),ct||C!==b){if(ke.set(J,C,"projectionMatrix"),ze.logarithmicDepthBuffer&&ke.setValue(J,"logDepthBufFC",2/(Math.log(C.far+1)/Math.LN2)),C!==b&&(b=C,He=!0,mt=!0),Z.isShaderMaterial||Z.isMeshPhongMaterial||Z.isMeshStandardMaterial||Z.envMap){var $t=ke.map.cameraPosition;$t!==void 0&&$t.setValue(J,ge.setFromMatrixPosition(C.matrixWorld))}(Z.isMeshPhongMaterial||Z.isMeshLambertMaterial||Z.isMeshBasicMaterial||Z.isMeshStandardMaterial||Z.isShaderMaterial||Z.skinning)&&ke.setValue(J,"viewMatrix",C.matrixWorldInverse),ke.set(J,v,"toneMappingExposure"),ke.set(J,v,"toneMappingWhitePoint")}if(Z.skinning){ke.setOptional(J,xe,"bindMatrix"),ke.setOptional(J,xe,"bindMatrixInverse");var yt=xe.skeleton;yt&&(ze.floatVertexTextures&&yt.useVertexTexture?(ke.set(J,yt,"boneTexture"),ke.set(J,yt,"boneTextureWidth"),ke.set(J,yt,"boneTextureHeight")):ke.setOptional(J,yt,"boneMatrices"))}return He&&(Z.lights&&de(De,mt),B&&Z.fog&&Es(De,B),(Z.isMeshBasicMaterial||Z.isMeshLambertMaterial||Z.isMeshPhongMaterial||Z.isMeshStandardMaterial||Z.isMeshNormalMaterial||Z.isMeshDepthMaterial)&&Vr(De,Z),Z.isLineBasicMaterial?ya(De,Z):Z.isLineDashedMaterial?(ya(De,Z),Ma(De,Z)):Z.isPointsMaterial?kr(De,Z):Z.isMeshLambertMaterial?Wr(De,Z):Z.isMeshToonMaterial?ol(De,Z):Z.isMeshPhongMaterial?Ea(De,Z):Z.isMeshPhysicalMaterial?ll(De,Z):Z.isMeshStandardMaterial?ws(De,Z):Z.isMeshDepthMaterial?Z.displacementMap&&(De.displacementMap.value=Z.displacementMap,De.displacementScale.value=Z.displacementScale,De.displacementBias.value=Z.displacementBias):Z.isMeshNormalMaterial&&H(De,Z),De.ltcMat!==void 0&&(De.ltcMat.value=THREE.UniformsLib.LTC_MAT_TEXTURE),De.ltcMag!==void 0&&(De.ltcMag.value=THREE.UniformsLib.LTC_MAG_TEXTURE),va.upload(J,re.uniformsList,De,v)),ke.set(J,xe,"modelViewMatrix"),ke.set(J,xe,"normalMatrix"),ke.setValue(J,"modelMatrix",xe.matrixWorld),lt}function Vr(C,B){C.opacity.value=B.opacity,C.diffuse.value=B.color,B.emissive&&C.emissive.value.copy(B.emissive).multiplyScalar(B.emissiveIntensity),C.map.value=B.map,C.specularMap.value=B.specularMap,C.alphaMap.value=B.alphaMap,B.lightMap&&(C.lightMap.value=B.lightMap,C.lightMapIntensity.value=B.lightMapIntensity),B.aoMap&&(C.aoMap.value=B.aoMap,C.aoMapIntensity.value=B.aoMapIntensity);var Z;if(B.map?Z=B.map:B.specularMap?Z=B.specularMap:B.displacementMap?Z=B.displacementMap:B.normalMap?Z=B.normalMap:B.bumpMap?Z=B.bumpMap:B.roughnessMap?Z=B.roughnessMap:B.metalnessMap?Z=B.metalnessMap:B.alphaMap?Z=B.alphaMap:B.emissiveMap&&(Z=B.emissiveMap),Z!==void 0){Z.isWebGLRenderTarget&&(Z=Z.texture);var xe=Z.offset,re=Z.repeat;C.offsetRepeat.value.set(xe.x,xe.y,re.x,re.y)}C.envMap.value=B.envMap,C.flipEnvMap.value=B.envMap&&B.envMap.isCubeTexture?-1:1,C.reflectivity.value=B.reflectivity,C.refractionRatio.value=B.refractionRatio}function ya(C,B){C.diffuse.value=B.color,C.opacity.value=B.opacity}function Ma(C,B){C.dashSize.value=B.dashSize,C.totalSize.value=B.dashSize+B.gapSize,C.scale.value=B.scale}function kr(C,B){if(C.diffuse.value=B.color,C.opacity.value=B.opacity,C.size.value=B.size*X,C.scale.value=z*.5,C.map.value=B.map,B.map!==null){var Z=B.map.offset,xe=B.map.repeat;C.offsetRepeat.value.set(Z.x,Z.y,xe.x,xe.y)}}function Es(C,B){C.fogColor.value=B.color,B.isFog?(C.fogNear.value=B.near,C.fogFar.value=B.far):B.isFogExp2&&(C.fogDensity.value=B.density)}function Wr(C,B){B.emissiveMap&&(C.emissiveMap.value=B.emissiveMap)}function Ea(C,B){C.specular.value=B.specular,C.shininess.value=Math.max(B.shininess,1e-4),B.emissiveMap&&(C.emissiveMap.value=B.emissiveMap),B.bumpMap&&(C.bumpMap.value=B.bumpMap,C.bumpScale.value=B.bumpScale),B.normalMap&&(C.normalMap.value=B.normalMap,C.normalScale.value.copy(B.normalScale)),B.displacementMap&&(C.displacementMap.value=B.displacementMap,C.displacementScale.value=B.displacementScale,C.displacementBias.value=B.displacementBias)}function ol(C,B){Ea(C,B),B.gradientMap&&(C.gradientMap.value=B.gradientMap)}function ws(C,B){C.roughness.value=B.roughness,C.metalness.value=B.metalness,B.roughnessMap&&(C.roughnessMap.value=B.roughnessMap),B.metalnessMap&&(C.metalnessMap.value=B.metalnessMap),B.emissiveMap&&(C.emissiveMap.value=B.emissiveMap),B.bumpMap&&(C.bumpMap.value=B.bumpMap,C.bumpScale.value=B.bumpScale),B.normalMap&&(C.normalMap.value=B.normalMap,C.normalScale.value.copy(B.normalScale)),B.displacementMap&&(C.displacementMap.value=B.displacementMap,C.displacementScale.value=B.displacementScale,C.displacementBias.value=B.displacementBias),B.envMap&&(C.envMapIntensity.value=B.envMapIntensity)}function ll(C,B){C.clearCoat.value=B.clearCoat,C.clearCoatRoughness.value=B.clearCoatRoughness,ws(C,B)}function H(C,B){B.bumpMap&&(C.bumpMap.value=B.bumpMap,C.bumpScale.value=B.bumpScale),B.normalMap&&(C.normalMap.value=B.normalMap,C.normalScale.value.copy(B.normalScale)),B.displacementMap&&(C.displacementMap.value=B.displacementMap,C.displacementScale.value=B.displacementScale,C.displacementBias.value=B.displacementBias)}function de(C,B){C.ambientLightColor.needsUpdate=B,C.directionalLights.needsUpdate=B,C.pointLights.needsUpdate=B,C.spotLights.needsUpdate=B,C.rectAreaLights.needsUpdate=B,C.hemisphereLights.needsUpdate=B}function ye(C){for(var B=0,Z=0,xe=C.length;Z<xe;Z++){var re=C[Z];re.castShadow&&(Se.shadows[B++]=re)}Se.shadows.length=B}function pe(C,B){var Z,xe,re,Be=0,ct=0,He=0,mt,lt,ke,De,$t=B.matrixWorldInverse,yt=0,en=0,Bn=0,jt=0,yn=0;for(Z=0,xe=C.length;Z<xe;Z++)if(re=C[Z],mt=re.color,lt=re.intensity,ke=re.distance,De=re.shadow&&re.shadow.map?re.shadow.map.texture:null,re.isAmbientLight)Be+=mt.r*lt,ct+=mt.g*lt,He+=mt.b*lt;else if(re.isDirectionalLight){var $e=ot.get(re);$e.color.copy(re.color).multiplyScalar(re.intensity),$e.direction.setFromMatrixPosition(re.matrixWorld),ge.setFromMatrixPosition(re.target.matrixWorld),$e.direction.sub(ge),$e.direction.transformDirection($t),$e.shadow=re.castShadow,re.castShadow&&($e.shadowBias=re.shadow.bias,$e.shadowRadius=re.shadow.radius,$e.shadowMapSize=re.shadow.mapSize),Se.directionalShadowMap[yt]=De,Se.directionalShadowMatrix[yt]=re.shadow.matrix,Se.directional[yt++]=$e}else if(re.isSpotLight){var $e=ot.get(re);$e.position.setFromMatrixPosition(re.matrixWorld),$e.position.applyMatrix4($t),$e.color.copy(mt).multiplyScalar(lt),$e.distance=ke,$e.direction.setFromMatrixPosition(re.matrixWorld),ge.setFromMatrixPosition(re.target.matrixWorld),$e.direction.sub(ge),$e.direction.transformDirection($t),$e.coneCos=Math.cos(re.angle),$e.penumbraCos=Math.cos(re.angle*(1-re.penumbra)),$e.decay=re.distance===0?0:re.decay,$e.shadow=re.castShadow,re.castShadow&&($e.shadowBias=re.shadow.bias,$e.shadowRadius=re.shadow.radius,$e.shadowMapSize=re.shadow.mapSize),Se.spotShadowMap[Bn]=De,Se.spotShadowMatrix[Bn]=re.shadow.matrix,Se.spot[Bn++]=$e}else if(re.isRectAreaLight){var $e=ot.get(re);$e.color.copy(mt).multiplyScalar(lt/(re.width*re.height)),$e.position.setFromMatrixPosition(re.matrixWorld),$e.position.applyMatrix4($t),we.identity(),Pe.copy(re.matrixWorld),Pe.premultiply($t),we.extractRotation(Pe),$e.halfWidth.set(re.width*.5,0,0),$e.halfHeight.set(0,re.height*.5,0),$e.halfWidth.applyMatrix4(we),$e.halfHeight.applyMatrix4(we),Se.rectArea[jt++]=$e}else if(re.isPointLight){var $e=ot.get(re);$e.position.setFromMatrixPosition(re.matrixWorld),$e.position.applyMatrix4($t),$e.color.copy(re.color).multiplyScalar(re.intensity),$e.distance=re.distance,$e.decay=re.distance===0?0:re.decay,$e.shadow=re.castShadow,re.castShadow&&($e.shadowBias=re.shadow.bias,$e.shadowRadius=re.shadow.radius,$e.shadowMapSize=re.shadow.mapSize),Se.pointShadowMap[en]=De,Se.pointShadowMatrix[en]===void 0&&(Se.pointShadowMatrix[en]=new xt),ge.setFromMatrixPosition(re.matrixWorld).negate(),Se.pointShadowMatrix[en].identity().setPosition(ge),Se.point[en++]=$e}else if(re.isHemisphereLight){var $e=ot.get(re);$e.direction.setFromMatrixPosition(re.matrixWorld),$e.direction.transformDirection($t),$e.direction.normalize(),$e.skyColor.copy(re.color).multiplyScalar(lt),$e.groundColor.copy(re.groundColor).multiplyScalar(lt),Se.hemi[yn++]=$e}Se.ambient[0]=Be,Se.ambient[1]=ct,Se.ambient[2]=He,Se.directional.length=yt,Se.spot.length=Bn,Se.rectArea.length=jt,Se.point.length=en,Se.hemi.length=yn,Se.hash=yt+","+en+","+Bn+","+jt+","+yn+","+Se.shadows.length}this.setFaceCulling=function(C,B){Re.setCullFace(C),Re.setFlipSided(B===K0)};function Me(){var C=V;return C>=ze.maxTextures&&console.warn("WebGLRenderer: trying to use "+C+" texture units while this GPU supports only "+ze.maxTextures),V+=1,C}this.allocTextureUnit=Me,this.setTexture2D=function(){var C=!1;return function(Z,xe){Z&&Z.isWebGLRenderTarget&&(C||(console.warn("THREE.WebGLRenderer.setTexture2D: don't use render targets as textures. Use their .texture property instead."),C=!0),Z=Z.texture),qe.setTexture2D(Z,xe)}}(),this.setTexture=function(){var C=!1;return function(Z,xe){C||(console.warn("THREE.WebGLRenderer: .setTexture is deprecated, use setTexture2D instead."),C=!0),qe.setTexture2D(Z,xe)}}(),this.setTextureCube=function(){var C=!1;return function(Z,xe){Z&&Z.isWebGLRenderTargetCube&&(C||(console.warn("THREE.WebGLRenderer.setTextureCube: don't use cube render targets as textures. Use their .texture property instead."),C=!0),Z=Z.texture),Z&&Z.isCubeTexture||Array.isArray(Z.image)&&Z.image.length===6?qe.setTextureCube(Z,xe):qe.setTextureCubeDynamic(Z,xe)}}(),this.getCurrentRenderTarget=function(){return M},this.setRenderTarget=function(C){M=C,C&&et.get(C).__webglFramebuffer===void 0&&qe.setupRenderTarget(C);var B=C&&C.isWebGLRenderTargetCube,Z;if(C){var xe=et.get(C);B?Z=xe.__webglFramebuffer[C.activeCubeFace]:Z=xe.__webglFramebuffer,U.copy(C.scissor),S=C.scissorTest,R.copy(C.viewport)}else Z=null,U.copy(Y).multiplyScalar(X),S=$,R.copy(ne).multiplyScalar(X);if(T!==Z&&(J.bindFramebuffer(J.FRAMEBUFFER,Z),T=Z),Re.scissor(U),Re.setScissorTest(S),Re.viewport(R),B){var re=et.get(C.texture);J.framebufferTexture2D(J.FRAMEBUFFER,J.COLOR_ATTACHMENT0,J.TEXTURE_CUBE_MAP_POSITIVE_X+C.activeCubeFace,re.__webglTexture,C.activeMipMapLevel)}},this.readRenderTargetPixels=function(C,B,Z,xe,re,Be){if((C&&C.isWebGLRenderTarget)===!1){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}var ct=et.get(C).__webglFramebuffer;if(ct){var He=!1;ct!==T&&(J.bindFramebuffer(J.FRAMEBUFFER,ct),He=!0);try{var mt=C.texture,lt=mt.format,ke=mt.type;if(lt!==fr&&nt(lt)!==J.getParameter(J.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(ke!==rh&&nt(ke)!==J.getParameter(J.IMPLEMENTATION_COLOR_READ_TYPE)&&!(ke===fo&&(Qe.get("OES_texture_float")||Qe.get("WEBGL_color_buffer_float")))&&!(ke===ah&&Qe.get("EXT_color_buffer_half_float"))){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}J.checkFramebufferStatus(J.FRAMEBUFFER)===J.FRAMEBUFFER_COMPLETE?B>=0&&B<=C.width-xe&&Z>=0&&Z<=C.height-re&&J.readPixels(B,Z,xe,re,nt(lt),nt(ke),Be):console.error("THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.")}finally{He&&J.bindFramebuffer(J.FRAMEBUFFER,T)}}};function nt(C){var B;if(C===Fr)return J.REPEAT;if(C===Ti)return J.CLAMP_TO_EDGE;if(C===Ja)return J.MIRRORED_REPEAT;if(C===Ai)return J.NEAREST;if(C===kh)return J.NEAREST_MIPMAP_NEAREST;if(C===Wh)return J.NEAREST_MIPMAP_LINEAR;if(C===hi)return J.LINEAR;if(C===Yp)return J.LINEAR_MIPMAP_NEAREST;if(C===Nc)return J.LINEAR_MIPMAP_LINEAR;if(C===rh)return J.UNSIGNED_BYTE;if(C===Ax)return J.UNSIGNED_SHORT_4_4_4_4;if(C===Rx)return J.UNSIGNED_SHORT_5_5_5_1;if(C===Lx)return J.UNSIGNED_SHORT_5_6_5;if(C===Sx)return J.BYTE;if(C===bx)return J.SHORT;if(C===kl)return J.UNSIGNED_SHORT;if(C===Tx)return J.INT;if(C===qp)return J.UNSIGNED_INT;if(C===fo)return J.FLOAT;if(C===ah&&(B=Qe.get("OES_texture_half_float"),B!==null))return B.HALF_FLOAT_OES;if(C===Cx)return J.ALPHA;if(C===po)return J.RGB;if(C===fr)return J.RGBA;if(C===Px)return J.LUMINANCE;if(C===Ux)return J.LUMINANCE_ALPHA;if(C===Ya)return J.DEPTH_COMPONENT;if(C===mo)return J.DEPTH_STENCIL;if(C===Gp)return J.FUNC_ADD;if(C===ex)return J.FUNC_SUBTRACT;if(C===tx)return J.FUNC_REVERSE_SUBTRACT;if(C===nx)return J.ZERO;if(C===ix)return J.ONE;if(C===rx)return J.SRC_COLOR;if(C===ax)return J.ONE_MINUS_SRC_COLOR;if(C===Hp)return J.SRC_ALPHA;if(C===Vp)return J.ONE_MINUS_SRC_ALPHA;if(C===sx)return J.DST_ALPHA;if(C===ox)return J.ONE_MINUS_DST_ALPHA;if(C===lx)return J.DST_COLOR;if(C===cx)return J.ONE_MINUS_DST_COLOR;if(C===ux)return J.SRC_ALPHA_SATURATE;if((C===ep||C===tp||C===np||C===ip)&&(B=Qe.get("WEBGL_compressed_texture_s3tc"),B!==null)){if(C===ep)return B.COMPRESSED_RGB_S3TC_DXT1_EXT;if(C===tp)return B.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(C===np)return B.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(C===ip)return B.COMPRESSED_RGBA_S3TC_DXT5_EXT}if((C===rp||C===ap||C===sp||C===op)&&(B=Qe.get("WEBGL_compressed_texture_pvrtc"),B!==null)){if(C===rp)return B.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(C===ap)return B.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(C===sp)return B.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(C===op)return B.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(C===Dx&&(B=Qe.get("WEBGL_compressed_texture_etc1"),B!==null))return B.COMPRESSED_RGB_ETC1_WEBGL;if((C===Zd||C===Kd)&&(B=Qe.get("EXT_blend_minmax"),B!==null)){if(C===Zd)return B.MIN_EXT;if(C===Kd)return B.MAX_EXT}return C===Wl&&(B=Qe.get("WEBGL_depth_texture"),B!==null)?B.UNSIGNED_INT_24_8_WEBGL:0}}function xo(e,t){this.name="",this.color=new dt(e),this.density=t!==void 0?t:25e-5}xo.prototype.isFogExp2=!0;xo.prototype.clone=function(){return new xo(this.color.getHex(),this.density)};xo.prototype.toJSON=function(e){return{type:"FogExp2",color:this.color.getHex(),density:this.density}};function yo(e,t,n){this.name="",this.color=new dt(e),this.near=t!==void 0?t:1,this.far=n!==void 0?n:1e3}yo.prototype.isFog=!0;yo.prototype.clone=function(){return new yo(this.color.getHex(),this.near,this.far)};yo.prototype.toJSON=function(e){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}};function is(){it.call(this),this.type="Scene",this.background=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0}is.prototype=Object.create(it.prototype);is.prototype.constructor=is;is.prototype.copy=function(e,t){return it.prototype.copy.call(this,e,t),e.background!==null&&(this.background=e.background.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this};is.prototype.toJSON=function(e){var t=it.prototype.toJSON.call(this,e);return this.background!==null&&(t.object.background=this.background.toJSON(e)),this.fog!==null&&(t.object.fog=this.fog.toJSON()),t};function cp(e,t,n,i,r){it.call(this),this.lensFlares=[],this.positionScreen=new k,this.customUpdateCallback=void 0,e!==void 0&&this.add(e,t,n,i,r)}cp.prototype=Object.assign(Object.create(it.prototype),{constructor:cp,isLensFlare:!0,copy:function(e){it.prototype.copy.call(this,e),this.positionScreen.copy(e.positionScreen),this.customUpdateCallback=e.customUpdateCallback;for(var t=0,n=e.lensFlares.length;t<n;t++)this.lensFlares.push(e.lensFlares[t]);return this},add:function(e,t,n,i,r,a){t===void 0&&(t=-1),n===void 0&&(n=0),a===void 0&&(a=1),r===void 0&&(r=new dt(16777215)),i===void 0&&(i=rl),n=Math.min(n,Math.max(0,n)),this.lensFlares.push({texture:e,size:t,distance:n,x:0,y:0,z:0,scale:1,rotation:0,opacity:a,color:r,blending:i})},updateLensFlares:function(){var e,t=this.lensFlares.length,n,i=-this.positionScreen.x*2,r=-this.positionScreen.y*2;for(e=0;e<t;e++)n=this.lensFlares[e],n.x=this.positionScreen.x+i*n.distance,n.y=this.positionScreen.y+r*n.distance,n.wantedRotation=n.x*Math.PI*.25,n.rotation+=(n.wantedRotation-n.rotation)*.25}});function rs(e){Ct.call(this),this.type="SpriteMaterial",this.color=new dt(16777215),this.map=null,this.rotation=0,this.fog=!1,this.lights=!1,this.setValues(e)}rs.prototype=Object.create(Ct.prototype);rs.prototype.constructor=rs;rs.prototype.copy=function(e){return Ct.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.rotation=e.rotation,this};function nc(e){it.call(this),this.type="Sprite",this.material=e!==void 0?e:new rs}nc.prototype=Object.assign(Object.create(it.prototype),{constructor:nc,isSprite:!0,raycast:function(){var e=new k;return function(n,i){e.setFromMatrixPosition(this.matrixWorld);var r=n.ray.distanceSqToPoint(e),a=this.scale.x*this.scale.y/4;r>a||i.push({distance:Math.sqrt(r),point:this.position,face:null,object:this})}}(),clone:function(){return new this.constructor(this.material).copy(this)}});function ic(){it.call(this),this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]}})}ic.prototype=Object.assign(Object.create(it.prototype),{constructor:ic,copy:function(e){it.prototype.copy.call(this,e,!1);for(var t=e.levels,n=0,i=t.length;n<i;n++){var r=t[n];this.addLevel(r.object.clone(),r.distance)}return this},addLevel:function(e,t){t===void 0&&(t=0),t=Math.abs(t);for(var n=this.levels,i=0;i<n.length&&!(t<n[i].distance);i++);n.splice(i,0,{distance:t,object:e}),this.add(e)},getObjectForDistance:function(e){for(var t=this.levels,n=1,i=t.length;n<i&&!(e<t[n].distance);n++);return t[n-1].object},raycast:function(){var e=new k;return function(n,i){e.setFromMatrixPosition(this.matrixWorld);var r=n.ray.origin.distanceTo(e);this.getObjectForDistance(r).raycast(n,i)}}(),update:function(){var e=new k,t=new k;return function(i){var r=this.levels;if(r.length>1){e.setFromMatrixPosition(i.matrixWorld),t.setFromMatrixPosition(this.matrixWorld);var a=e.distanceTo(t);r[0].object.visible=!0;for(var o=1,l=r.length;o<l&&a>=r[o].distance;o++)r[o-1].object.visible=!1,r[o].object.visible=!0;for(;o<l;o++)r[o].object.visible=!1}}}(),toJSON:function(e){var t=it.prototype.toJSON.call(this,e);t.object.levels=[];for(var n=this.levels,i=0,r=n.length;i<r;i++){var a=n[i];t.object.levels.push({object:a.object.uuid,distance:a.distance})}return t}});function oh(e,t,n){if(this.useVertexTexture=n!==void 0?n:!0,this.identityMatrix=new xt,e=e||[],this.bones=e.slice(0),this.useVertexTexture){var i=Math.sqrt(this.bones.length*4);i=St.nextPowerOfTwo(Math.ceil(i)),i=Math.max(i,4),this.boneTextureWidth=i,this.boneTextureHeight=i,this.boneMatrices=new Float32Array(this.boneTextureWidth*this.boneTextureHeight*4),this.boneTexture=new es(this.boneMatrices,this.boneTextureWidth,this.boneTextureHeight,fr,fo)}else this.boneMatrices=new Float32Array(16*this.bones.length);if(t===void 0)this.calculateInverses();else if(this.bones.length===t.length)this.boneInverses=t.slice(0);else{console.warn("THREE.Skeleton bonInverses is the wrong length."),this.boneInverses=[];for(var r=0,a=this.bones.length;r<a;r++)this.boneInverses.push(new xt)}}Object.assign(oh.prototype,{calculateInverses:function(){this.boneInverses=[];for(var e=0,t=this.bones.length;e<t;e++){var n=new xt;this.bones[e]&&n.getInverse(this.bones[e].matrixWorld),this.boneInverses.push(n)}},pose:function(){for(var e,t=0,n=this.bones.length;t<n;t++)e=this.bones[t],e&&e.matrixWorld.getInverse(this.boneInverses[t]);for(var t=0,n=this.bones.length;t<n;t++)e=this.bones[t],e&&(e.parent&&e.parent.isBone?(e.matrix.getInverse(e.parent.matrixWorld),e.matrix.multiply(e.matrixWorld)):e.matrix.copy(e.matrixWorld),e.matrix.decompose(e.position,e.quaternion,e.scale))},update:function(){var e=new xt;return function(){for(var n=0,i=this.bones.length;n<i;n++){var r=this.bones[n]?this.bones[n].matrixWorld:this.identityMatrix;e.multiplyMatrices(r,this.boneInverses[n]),e.toArray(this.boneMatrices,n*16)}this.useVertexTexture&&(this.boneTexture.needsUpdate=!0)}}(),clone:function(){return new oh(this.bones,this.boneInverses,this.useVertexTexture)}});function lh(){it.call(this),this.type="Bone"}lh.prototype=Object.assign(Object.create(it.prototype),{constructor:lh,isBone:!0});function ch(e,t,n){Pn.call(this,e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new xt,this.bindMatrixInverse=new xt;var i=[];if(this.geometry&&this.geometry.bones!==void 0){for(var r,a,o=0,l=this.geometry.bones.length;o<l;++o)a=this.geometry.bones[o],r=new lh,i.push(r),r.name=a.name,r.position.fromArray(a.pos),r.quaternion.fromArray(a.rotq),a.scl!==void 0&&r.scale.fromArray(a.scl);for(var o=0,l=this.geometry.bones.length;o<l;++o)a=this.geometry.bones[o],a.parent!==-1&&a.parent!==null&&i[a.parent]!==void 0?i[a.parent].add(i[o]):this.add(i[o])}this.normalizeSkinWeights(),this.updateMatrixWorld(!0),this.bind(new oh(i,void 0,n),this.matrixWorld)}ch.prototype=Object.assign(Object.create(Pn.prototype),{constructor:ch,isSkinnedMesh:!0,bind:function(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.getInverse(t)},pose:function(){this.skeleton.pose()},normalizeSkinWeights:function(){if(this.geometry&&this.geometry.isGeometry)for(var e=0;e<this.geometry.skinWeights.length;e++){var t=this.geometry.skinWeights[e],n=1/t.lengthManhattan();n!==1/0?t.multiplyScalar(n):t.set(1,0,0,0)}else if(this.geometry&&this.geometry.isBufferGeometry)for(var i=new Kt,r=this.geometry.attributes.skinWeight,e=0;e<r.count;e++){i.x=r.getX(e),i.y=r.getY(e),i.z=r.getZ(e),i.w=r.getW(e);var n=1/i.lengthManhattan();n!==1/0?i.multiplyScalar(n):i.set(1,0,0,0),r.setXYZW(e,i.x,i.y,i.z,i.w)}},updateMatrixWorld:function(e){Pn.prototype.updateMatrixWorld.call(this,!0),this.bindMode==="attached"?this.bindMatrixInverse.getInverse(this.matrixWorld):this.bindMode==="detached"?this.bindMatrixInverse.getInverse(this.bindMatrix):console.warn("THREE.SkinnedMesh unrecognized bindMode: "+this.bindMode)},clone:function(){return new this.constructor(this.geometry,this.material,this.skeleton.useVertexTexture).copy(this)}});function gn(e){Ct.call(this),this.type="LineBasicMaterial",this.color=new dt(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.lights=!1,this.setValues(e)}gn.prototype=Object.create(Ct.prototype);gn.prototype.constructor=gn;gn.prototype.isLineBasicMaterial=!0;gn.prototype.copy=function(e){return Ct.prototype.copy.call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this};function Br(e,t,n){if(n===1)return console.warn("THREE.Line: parameter THREE.LinePieces no longer supported. Created THREE.LineSegments instead."),new on(e,t);it.call(this),this.type="Line",this.geometry=e!==void 0?e:new ft,this.material=t!==void 0?t:new gn({color:Math.random()*16777215})}Br.prototype=Object.assign(Object.create(it.prototype),{constructor:Br,isLine:!0,raycast:function(){var e=new xt,t=new _a,n=new Yn;return function(r,a){var o=r.linePrecision,l=o*o,h=this.geometry,u=this.matrixWorld;if(h.boundingSphere===null&&h.computeBoundingSphere(),n.copy(h.boundingSphere),n.applyMatrix4(u),r.ray.intersectsSphere(n)!==!1){e.getInverse(u),t.copy(r.ray).applyMatrix4(e);var f=new k,d=new k,p=new k,g=new k,x=this&&this.isLineSegments?2:1;if(h.isBufferGeometry){var y=h.index,_=h.attributes,v=_.position.array;if(y!==null)for(var w=y.array,M=0,T=w.length-1;M<T;M+=x){var A=w[M],P=w[M+1];f.fromArray(v,A*3),d.fromArray(v,P*3);var b=t.distanceSqToSegment(f,d,g,p);if(!(b>l)){g.applyMatrix4(this.matrixWorld);var U=r.ray.origin.distanceTo(g);U<r.near||U>r.far||a.push({distance:U,point:p.clone().applyMatrix4(this.matrixWorld),index:M,face:null,faceIndex:null,object:this})}}else for(var M=0,T=v.length/3-1;M<T;M+=x){f.fromArray(v,3*M),d.fromArray(v,3*M+3);var b=t.distanceSqToSegment(f,d,g,p);if(!(b>l)){g.applyMatrix4(this.matrixWorld);var U=r.ray.origin.distanceTo(g);U<r.near||U>r.far||a.push({distance:U,point:p.clone().applyMatrix4(this.matrixWorld),index:M,face:null,faceIndex:null,object:this})}}}else if(h.isGeometry)for(var S=h.vertices,R=S.length,M=0;M<R-1;M+=x){var b=t.distanceSqToSegment(S[M],S[M+1],g,p);if(!(b>l)){g.applyMatrix4(this.matrixWorld);var U=r.ray.origin.distanceTo(g);U<r.near||U>r.far||a.push({distance:U,point:p.clone().applyMatrix4(this.matrixWorld),index:M,face:null,faceIndex:null,object:this})}}}}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});function on(e,t){Br.call(this,e,t),this.type="LineSegments"}on.prototype=Object.assign(Object.create(Br.prototype),{constructor:on,isLineSegments:!0});function ir(e){Ct.call(this),this.type="PointsMaterial",this.color=new dt(16777215),this.map=null,this.size=1,this.sizeAttenuation=!0,this.lights=!1,this.setValues(e)}ir.prototype=Object.create(Ct.prototype);ir.prototype.constructor=ir;ir.prototype.isPointsMaterial=!0;ir.prototype.copy=function(e){return Ct.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this};function Mo(e,t){it.call(this),this.type="Points",this.geometry=e!==void 0?e:new ft,this.material=t!==void 0?t:new ir({color:Math.random()*16777215})}Mo.prototype=Object.assign(Object.create(it.prototype),{constructor:Mo,isPoints:!0,raycast:function(){var e=new xt,t=new _a,n=new Yn;return function(r,a){var o=this,l=this.geometry,h=this.matrixWorld,u=r.params.Points.threshold;if(l.boundingSphere===null&&l.computeBoundingSphere(),n.copy(l.boundingSphere),n.applyMatrix4(h),r.ray.intersectsSphere(n)===!1)return;e.getInverse(h),t.copy(r.ray).applyMatrix4(e);var f=u/((this.scale.x+this.scale.y+this.scale.z)/3),d=f*f,p=new k;function g(b,U){var S=t.distanceSqToPoint(b);if(S<d){var R=t.closestPointToPoint(b);R.applyMatrix4(h);var V=r.ray.origin.distanceTo(R);if(V<r.near||V>r.far)return;a.push({distance:V,distanceToRay:Math.sqrt(S),point:R.clone(),index:U,face:null,object:o})}}if(l.isBufferGeometry){var x=l.index,y=l.attributes,_=y.position.array;if(x!==null)for(var v=x.array,w=0,M=v.length;w<M;w++){var T=v[w];p.fromArray(_,T*3),g(p,T)}else for(var w=0,A=_.length/3;w<A;w++)p.fromArray(_,w*3),g(p,w)}else for(var P=l.vertices,w=0,A=P.length;w<A;w++)g(P[w],w)}}(),clone:function(){return new this.constructor(this.geometry,this.material).copy(this)}});function rc(){it.call(this),this.type="Group"}rc.prototype=Object.assign(Object.create(it.prototype),{constructor:rc});function uh(e,t,n,i,r,a,o,l,h){nn.call(this,e,t,n,i,r,a,o,l,h),this.generateMipmaps=!1;var u=this;function f(){requestAnimationFrame(f),e.readyState>=e.HAVE_CURRENT_DATA&&(u.needsUpdate=!0)}f()}uh.prototype=Object.create(nn.prototype);uh.prototype.constructor=uh;function Eo(e,t,n,i,r,a,o,l,h,u,f,d){nn.call(this,null,a,o,l,h,u,i,r,f,d),this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}Eo.prototype=Object.create(nn.prototype);Eo.prototype.constructor=Eo;Eo.prototype.isCompressedTexture=!0;function hh(e,t,n,i,r,a,o,l,h){nn.call(this,e,t,n,i,r,a,o,l,h),this.needsUpdate=!0}hh.prototype=Object.create(nn.prototype);hh.prototype.constructor=hh;function ac(e,t,n,i,r,a,o,l,h,u){if(u=u!==void 0?u:Ya,u!==Ya&&u!==mo)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&u===Ya&&(n=kl),n===void 0&&u===mo&&(n=Wl),nn.call(this,null,i,r,a,o,l,u,n,h),this.image={width:e,height:t},this.magFilter=o!==void 0?o:Ai,this.minFilter=l!==void 0?l:Ai,this.flipY=!1,this.generateMipmaps=!1}ac.prototype=Object.create(nn.prototype);ac.prototype.constructor=ac;ac.prototype.isDepthTexture=!0;function wo(e){ft.call(this);var t=[0,0],n={};function i(W,L){return W-L}var r=["a","b","c"];if(e&&e.isGeometry){for(var a=e.vertices,o=e.faces,l=0,h=new Uint32Array(6*o.length),u=0,f=o.length;u<f;u++)for(var d=o[u],p=0;p<3;p++){t[0]=d[r[p]],t[1]=d[r[(p+1)%3]],t.sort(i);var g=t.toString();n[g]===void 0&&(h[2*l]=t[0],h[2*l+1]=t[1],n[g]=!0,l++)}for(var x=new Float32Array(l*2*3),u=0,f=l;u<f;u++)for(var p=0;p<2;p++){var y=a[h[2*u+p]],_=6*u+3*p;x[_+0]=y.x,x[_+1]=y.y,x[_+2]=y.z}this.addAttribute("position",new je(x,3))}else if(e&&e.isBufferGeometry)if(e.index!==null){var v=e.index.array,a=e.attributes.position,w=e.groups,l=0;w.length===0&&e.addGroup(0,v.length);for(var h=new Uint32Array(2*v.length),M=0,T=w.length;M<T;++M)for(var A=w[M],P=A.start,b=A.count,u=P,U=P+b;u<U;u+=3)for(var p=0;p<3;p++){t[0]=v[u+p],t[1]=v[u+(p+1)%3],t.sort(i);var g=t.toString();n[g]===void 0&&(h[2*l]=t[0],h[2*l+1]=t[1],n[g]=!0,l++)}for(var x=new Float32Array(l*2*3),u=0,f=l;u<f;u++)for(var p=0;p<2;p++){var _=6*u+3*p,S=h[2*u+p];x[_+0]=a.getX(S),x[_+1]=a.getY(S),x[_+2]=a.getZ(S)}this.addAttribute("position",new je(x,3))}else{for(var a=e.attributes.position.array,l=a.length/3,R=l/3,x=new Float32Array(l*2*3),u=0,f=R;u<f;u++)for(var p=0;p<3;p++){var _=18*u+6*p,V=9*u+3*p;x[_+0]=a[V],x[_+1]=a[V+1],x[_+2]=a[V+2];var S=9*u+3*((p+1)%3);x[_+3]=a[S],x[_+4]=a[S+1],x[_+5]=a[S+2]}this.addAttribute("position",new je(x,3))}}wo.prototype=Object.create(ft.prototype);wo.prototype.constructor=wo;function So(e,t,n){ft.call(this),this.type="ParametricBufferGeometry",this.parameters={func:e,slices:t,stacks:n};var i=[],r=[],a,o,l,h,u,f=t+1;for(a=0;a<=n;a++)for(u=a/n,o=0;o<=t;o++)h=o/t,l=e(h,u),i.push(l.x,l.y,l.z),r.push(h,u);var d=[],p,g,x,y;for(a=0;a<n;a++)for(o=0;o<t;o++)p=a*f+o,g=a*f+o+1,x=(a+1)*f+o+1,y=(a+1)*f+o,d.push(p,g,y),d.push(g,x,y);this.setIndex(new(d.length>65535?Or:Nr)(d,1)),this.addAttribute("position",new Ut(i,3)),this.addAttribute("uv",new Ut(r,2)),this.computeVertexNormals()}So.prototype=Object.create(ft.prototype);So.prototype.constructor=So;function sc(e,t,n){Mt.call(this),this.type="ParametricGeometry",this.parameters={func:e,slices:t,stacks:n},this.fromBufferGeometry(new So(e,t,n)),this.mergeVertices()}sc.prototype=Object.create(Mt.prototype);sc.prototype.constructor=sc;function pi(e,t,n,i){ft.call(this),this.type="PolyhedronBufferGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i},n=n||1,i=i||0;var r=[],a=[];o(i),h(n),u(),this.addAttribute("position",new Ut(r,3)),this.addAttribute("normal",new Ut(r.slice(),3)),this.addAttribute("uv",new Ut(a,2)),this.normalizeNormals(),this.boundingSphere=new Yn(new k,n);function o(v){for(var w=new k,M=new k,T=new k,A=0;A<t.length;A+=3)p(t[A+0],w),p(t[A+1],M),p(t[A+2],T),l(w,M,T,v)}function l(v,w,M,T){var A=Math.pow(2,T),P=[],b,U;for(b=0;b<=A;b++){P[b]=[];var S=v.clone().lerp(M,b/A),R=w.clone().lerp(M,b/A),V=A-b;for(U=0;U<=V;U++)U===0&&b===A?P[b][U]=S:P[b][U]=S.clone().lerp(R,U/V)}for(b=0;b<A;b++)for(U=0;U<2*(A-b)-1;U++){var W=Math.floor(U/2);U%2===0?(d(P[b][W+1]),d(P[b+1][W]),d(P[b][W])):(d(P[b][W+1]),d(P[b+1][W+1]),d(P[b+1][W]))}}function h(v){for(var w=new k,M=0;M<r.length;M+=3)w.x=r[M+0],w.y=r[M+1],w.z=r[M+2],w.normalize().multiplyScalar(v),r[M+0]=w.x,r[M+1]=w.y,r[M+2]=w.z}function u(){for(var v=new k,w=0;w<r.length;w+=3){v.x=r[w+0],v.y=r[w+1],v.z=r[w+2];var M=y(v)/2/Math.PI+.5,T=_(v)/Math.PI+.5;a.push(M,1-T)}g(),f()}function f(){for(var v=0;v<a.length;v+=6){var w=a[v+0],M=a[v+2],T=a[v+4],A=Math.max(w,M,T),P=Math.min(w,M,T);A>.9&&P<.1&&(w<.2&&(a[v+0]+=1),M<.2&&(a[v+2]+=1),T<.2&&(a[v+4]+=1))}}function d(v){r.push(v.x,v.y,v.z)}function p(v,w){var M=v*3;w.x=e[M+0],w.y=e[M+1],w.z=e[M+2]}function g(){for(var v=new k,w=new k,M=new k,T=new k,A=new Ke,P=new Ke,b=new Ke,U=0,S=0;U<r.length;U+=9,S+=6){v.set(r[U+0],r[U+1],r[U+2]),w.set(r[U+3],r[U+4],r[U+5]),M.set(r[U+6],r[U+7],r[U+8]),A.set(a[S+0],a[S+1]),P.set(a[S+2],a[S+3]),b.set(a[S+4],a[S+5]),T.copy(v).add(w).add(M).divideScalar(3);var R=y(T);x(A,S+0,v,R),x(P,S+2,w,R),x(b,S+4,M,R)}}function x(v,w,M,T){T<0&&v.x===1&&(a[w]=v.x-1),M.x===0&&M.z===0&&(a[w]=T/2/Math.PI+.5)}function y(v){return Math.atan2(v.z,-v.x)}function _(v){return Math.atan2(-v.y,Math.sqrt(v.x*v.x+v.z*v.z))}}pi.prototype=Object.create(ft.prototype);pi.prototype.constructor=pi;function bo(e,t){var n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];pi.call(this,n,i,e,t),this.type="TetrahedronBufferGeometry",this.parameters={radius:e,detail:t}}bo.prototype=Object.create(pi.prototype);bo.prototype.constructor=bo;function oc(e,t){Mt.call(this),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new bo(e,t)),this.mergeVertices()}oc.prototype=Object.create(Mt.prototype);oc.prototype.constructor=oc;function as(e,t){var n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];pi.call(this,n,i,e,t),this.type="OctahedronBufferGeometry",this.parameters={radius:e,detail:t}}as.prototype=Object.create(pi.prototype);as.prototype.constructor=as;function lc(e,t){Mt.call(this),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new as(e,t)),this.mergeVertices()}lc.prototype=Object.create(Mt.prototype);lc.prototype.constructor=lc;function To(e,t){var n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],r=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];pi.call(this,i,r,e,t),this.type="IcosahedronBufferGeometry",this.parameters={radius:e,detail:t}}To.prototype=Object.create(pi.prototype);To.prototype.constructor=To;function cc(e,t){Mt.call(this),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new To(e,t)),this.mergeVertices()}cc.prototype=Object.create(Mt.prototype);cc.prototype.constructor=cc;function Ao(e,t){var n=(1+Math.sqrt(5))/2,i=1/n,r=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],a=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];pi.call(this,r,a,e,t),this.type="DodecahedronBufferGeometry",this.parameters={radius:e,detail:t}}Ao.prototype=Object.create(pi.prototype);Ao.prototype.constructor=Ao;function uc(e,t){Mt.call(this),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t},this.fromBufferGeometry(new Ao(e,t)),this.mergeVertices()}uc.prototype=Object.create(Mt.prototype);uc.prototype.constructor=uc;function hc(e,t,n,i){Mt.call(this),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i},this.fromBufferGeometry(new pi(e,t,n,i)),this.mergeVertices()}hc.prototype=Object.create(Mt.prototype);hc.prototype.constructor=hc;function Ro(e,t,n,i,r){ft.call(this),this.type="TubeBufferGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:r},t=t||64,n=n||1,i=i||8,r=r||!1;var a=e.computeFrenetFrames(t,r);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;var o=new k,l=new k,h=new Ke,u,f,d=[],p=[],g=[],x=[];y(),this.setIndex(new(x.length>65535?Or:Nr)(x,1)),this.addAttribute("position",new Ut(d,3)),this.addAttribute("normal",new Ut(p,3)),this.addAttribute("uv",new Ut(g,2));function y(){for(u=0;u<t;u++)_(u);_(r===!1?t:0),w(),v()}function _(M){var T=e.getPointAt(M/t),A=a.normals[M],P=a.binormals[M];for(f=0;f<=i;f++){var b=f/i*Math.PI*2,U=Math.sin(b),S=-Math.cos(b);l.x=S*A.x+U*P.x,l.y=S*A.y+U*P.y,l.z=S*A.z+U*P.z,l.normalize(),p.push(l.x,l.y,l.z),o.x=T.x+n*l.x,o.y=T.y+n*l.y,o.z=T.z+n*l.z,d.push(o.x,o.y,o.z)}}function v(){for(f=1;f<=t;f++)for(u=1;u<=i;u++){var M=(i+1)*(f-1)+(u-1),T=(i+1)*f+(u-1),A=(i+1)*f+u,P=(i+1)*(f-1)+u;x.push(M,T,P),x.push(T,A,P)}}function w(){for(u=0;u<=t;u++)for(f=0;f<=i;f++)h.x=u/t,h.y=f/i,g.push(h.x,h.y)}}Ro.prototype=Object.create(ft.prototype);Ro.prototype.constructor=Ro;function fc(e,t,n,i,r,a){Mt.call(this),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:r},a!==void 0&&console.warn("THREE.TubeGeometry: taper has been removed.");var o=new Ro(e,t,n,i,r);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals,this.fromBufferGeometry(o),this.mergeVertices()}fc.prototype=Object.create(Mt.prototype);fc.prototype.constructor=fc;function Lo(e,t,n,i,r,a){ft.call(this),this.type="TorusKnotBufferGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:r,q:a},e=e||100,t=t||40,n=Math.floor(n)||64,i=Math.floor(i)||8,r=r||2,a=a||3;var o=(i+1)*(n+1),l=i*n*2*3,h=new je(new(l>65535?Uint32Array:Uint16Array)(l),1),u=new je(new Float32Array(o*3),3),f=new je(new Float32Array(o*3),3),d=new je(new Float32Array(o*2),2),p,g,x=0,y=0,_=new k,v=new k,w=new Ke,M=new k,T=new k,A=new k,P=new k,b=new k;for(p=0;p<=n;++p){var U=p/n*r*Math.PI*2;for(X(U,r,a,e,M),X(U+.01,r,a,e,T),P.subVectors(T,M),b.addVectors(T,M),A.crossVectors(P,b),b.crossVectors(A,P),A.normalize(),b.normalize(),g=0;g<=i;++g){var S=g/i*Math.PI*2,R=-t*Math.cos(S),V=t*Math.sin(S);_.x=M.x+(R*b.x+V*A.x),_.y=M.y+(R*b.y+V*A.y),_.z=M.z+(R*b.z+V*A.z),u.setXYZ(x,_.x,_.y,_.z),v.subVectors(_,M).normalize(),f.setXYZ(x,v.x,v.y,v.z),w.x=p/n,w.y=g/i,d.setXY(x,w.x,w.y),x++}}for(g=1;g<=n;g++)for(p=1;p<=i;p++){var W=(i+1)*(g-1)+(p-1),L=(i+1)*g+(p-1),I=(i+1)*g+p,z=(i+1)*(g-1)+p;h.setX(y,W),y++,h.setX(y,L),y++,h.setX(y,z),y++,h.setX(y,L),y++,h.setX(y,I),y++,h.setX(y,z),y++}this.setIndex(h),this.addAttribute("position",u),this.addAttribute("normal",f),this.addAttribute("uv",d);function X(Y,$,ne,ae,j){var K=Math.cos(Y),Q=Math.sin(Y),he=ne/$*Y,me=Math.cos(he);j.x=ae*(2+me)*.5*K,j.y=ae*(2+me)*Q*.5,j.z=ae*Math.sin(he)*.5}}Lo.prototype=Object.create(ft.prototype);Lo.prototype.constructor=Lo;function dc(e,t,n,i,r,a,o){Mt.call(this),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:r,q:a},o!==void 0&&console.warn("THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead."),this.fromBufferGeometry(new Lo(e,t,n,i,r,a)),this.mergeVertices()}dc.prototype=Object.create(Mt.prototype);dc.prototype.constructor=dc;function Co(e,t,n,i,r){ft.call(this),this.type="TorusBufferGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:r},e=e||100,t=t||40,n=Math.floor(n)||8,i=Math.floor(i)||6,r=r||Math.PI*2;var a=(n+1)*(i+1),o=n*i*2*3,l=new(o>65535?Uint32Array:Uint16Array)(o),h=new Float32Array(a*3),u=new Float32Array(a*3),f=new Float32Array(a*2),d=0,p=0,g=0,x=new k,y=new k,_=new k,v,w;for(v=0;v<=n;v++)for(w=0;w<=i;w++){var M=w/i*r,T=v/n*Math.PI*2;y.x=(e+t*Math.cos(T))*Math.cos(M),y.y=(e+t*Math.cos(T))*Math.sin(M),y.z=t*Math.sin(T),h[d]=y.x,h[d+1]=y.y,h[d+2]=y.z,x.x=e*Math.cos(M),x.y=e*Math.sin(M),_.subVectors(y,x).normalize(),u[d]=_.x,u[d+1]=_.y,u[d+2]=_.z,f[p]=w/i,f[p+1]=v/n,d+=3,p+=2}for(v=1;v<=n;v++)for(w=1;w<=i;w++){var A=(i+1)*v+w-1,P=(i+1)*(v-1)+w-1,b=(i+1)*(v-1)+w,U=(i+1)*v+w;l[g]=A,l[g+1]=P,l[g+2]=U,l[g+3]=P,l[g+4]=b,l[g+5]=U,g+=6}this.setIndex(new je(l,1)),this.addAttribute("position",new je(h,3)),this.addAttribute("normal",new je(u,3)),this.addAttribute("uv",new je(f,2))}Co.prototype=Object.create(ft.prototype);Co.prototype.constructor=Co;function pc(e,t,n,i,r){Mt.call(this),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:r},this.fromBufferGeometry(new Co(e,t,n,i,r))}pc.prototype=Object.create(Mt.prototype);pc.prototype.constructor=pc;var Fn={area:function(e){for(var t=e.length,n=0,i=t-1,r=0;r<t;i=r++)n+=e[i].x*e[r].y-e[r].x*e[i].y;return n*.5},triangulate:function(){function e(t,n,i,r,a,o){var l,h,u,f,d,p,g,x,y;if(h=t[o[n]].x,u=t[o[n]].y,f=t[o[i]].x,d=t[o[i]].y,p=t[o[r]].x,g=t[o[r]].y,(f-h)*(g-u)-(d-u)*(p-h)<=0)return!1;var _,v,w,M,T,A,P,b,U,S,R,V,W,L,I;for(_=p-f,v=g-d,w=h-p,M=u-g,T=f-h,A=d-u,l=0;l<a;l++)if(x=t[o[l]].x,y=t[o[l]].y,!(x===h&&y===u||x===f&&y===d||x===p&&y===g)&&(P=x-h,b=y-u,U=x-f,S=y-d,R=x-p,V=y-g,I=_*S-v*U,W=T*b-A*P,L=w*V-M*R,I>=-Number.EPSILON&&L>=-Number.EPSILON&&W>=-Number.EPSILON))return!1;return!0}return function(n,i){var r=n.length;if(r<3)return null;var a=[],o=[],l=[],h,u,f;if(Fn.area(n)>0)for(u=0;u<r;u++)o[u]=u;else for(u=0;u<r;u++)o[u]=r-1-u;var d=r,p=2*d;for(u=d-1;d>2;){if(p--<=0)return console.warn("THREE.ShapeUtils: Unable to triangulate polygon! in triangulate()"),i?l:a;if(h=u,d<=h&&(h=0),u=h+1,d<=u&&(u=0),f=u+1,d<=f&&(f=0),e(n,h,u,f,d,o)){var g,x,y,_,v;for(g=o[h],x=o[u],y=o[f],a.push([n[g],n[x],n[y]]),l.push([o[h],o[u],o[f]]),_=u,v=u+1;v<d;_++,v++)o[_]=o[v];d--,p=2*d}}return i?l:a}}(),triangulateShape:function(e,t){function n(M){var T=M.length;T>2&&M[T-1].equals(M[0])&&M.pop()}n(e),t.forEach(n);function i(M,T,A){return M.x!==T.x?M.x<T.x?M.x<=A.x&&A.x<=T.x:T.x<=A.x&&A.x<=M.x:M.y<T.y?M.y<=A.y&&A.y<=T.y:T.y<=A.y&&A.y<=M.y}function r(M,T,A,P,b){var U=T.x-M.x,S=T.y-M.y,R=P.x-A.x,V=P.y-A.y,W=M.x-A.x,L=M.y-A.y,I=S*R-U*V,z=S*W-U*L;if(Math.abs(I)>Number.EPSILON){var X;if(I>0){if(z<0||z>I)return[];if(X=V*W-R*L,X<0||X>I)return[]}else{if(z>0||z<I)return[];if(X=V*W-R*L,X>0||X<I)return[]}if(X===0)return b&&(z===0||z===I)?[]:[M];if(X===I)return b&&(z===0||z===I)?[]:[T];if(z===0)return[A];if(z===I)return[P];var Y=X/I;return[{x:M.x+Y*U,y:M.y+Y*S}]}else{if(z!==0||V*W!==R*L)return[];var $=U===0&&S===0,ne=R===0&&V===0;if($&&ne)return M.x!==A.x||M.y!==A.y?[]:[M];if($)return i(A,P,M)?[M]:[];if(ne)return i(M,T,A)?[A]:[];var ae,j,K,Q,he,me,ge,Pe;return U!==0?(M.x<T.x?(ae=M,K=M.x,j=T,Q=T.x):(ae=T,K=T.x,j=M,Q=M.x),A.x<P.x?(he=A,ge=A.x,me=P,Pe=P.x):(he=P,ge=P.x,me=A,Pe=A.x)):(M.y<T.y?(ae=M,K=M.y,j=T,Q=T.y):(ae=T,K=T.y,j=M,Q=M.y),A.y<P.y?(he=A,ge=A.y,me=P,Pe=P.y):(he=P,ge=P.y,me=A,Pe=A.y)),K<=ge?Q<ge?[]:Q===ge?b?[]:[he]:Q<=Pe?[he,j]:[he,me]:K>Pe?[]:K===Pe?b?[]:[ae]:Q<=Pe?[ae,j]:[ae,me]}}function a(M,T,A,P){var b=T.x-M.x,U=T.y-M.y,S=A.x-M.x,R=A.y-M.y,V=P.x-M.x,W=P.y-M.y,L=b*R-U*S,I=b*W-U*V;if(Math.abs(L)>Number.EPSILON){var z=V*R-W*S;return L>0?I>=0&&z>=0:I>=0||z>=0}else return I>0}function o(M,T){var A=M.concat(),P;function b(Pe,we){var Se=A.length-1,ht=Pe-1;ht<0&&(ht=Se);var J=Pe+1;J>Se&&(J=0);var se=a(A[Pe],A[ht],A[J],P[we]);if(!se)return!1;var Qe=P.length-1,ze=we-1;ze<0&&(ze=Qe);var Re=we+1;return Re>Qe&&(Re=0),se=a(P[we],P[ze],P[Re],A[Pe]),!!se}function U(Pe,we){var Se,ht,J;for(Se=0;Se<A.length;Se++)if(ht=Se+1,ht%=A.length,J=r(Pe,we,A[Se],A[ht],!0),J.length>0)return!0;return!1}var S=[];function R(Pe,we){var Se,ht,J,se,Qe;for(Se=0;Se<S.length;Se++)for(ht=T[S[Se]],J=0;J<ht.length;J++)if(se=J+1,se%=ht.length,Qe=r(Pe,we,ht[J],ht[se],!0),Qe.length>0)return!0;return!1}for(var V,W,L,I,z,X,Y=[],$,ne,ae,j,K=0,Q=T.length;K<Q;K++)S.push(K);for(var he=0,me=S.length*2;S.length>0;){if(me--,me<0){console.log("Infinite Loop! Holes left:"+S.length+", Probably Hole outside Shape!");break}for(W=he;W<A.length;W++){L=A[W],V=-1;for(var K=0;K<S.length;K++)if(z=S[K],X=L.x+":"+L.y+":"+z,Y[X]===void 0){P=T[z];for(var ge=0;ge<P.length;ge++)if(I=P[ge],!!b(W,ge)&&!U(L,I)&&!R(L,I)){V=ge,S.splice(K,1),$=A.slice(0,W+1),ne=A.slice(W),ae=P.slice(V),j=P.slice(0,V+1),A=$.concat(ae).concat(j).concat(ne),he=W;break}if(V>=0)break;Y[X]=!0}if(V>=0)break}}return A}for(var l,h,u,f,d,p,g={},x=e.concat(),y=0,_=t.length;y<_;y++)Array.prototype.push.apply(x,t[y]);for(l=0,h=x.length;l<h;l++)d=x[l].x+":"+x[l].y,g[d]!==void 0&&console.warn("THREE.ShapeUtils: Duplicate point",d,l),g[d]=l;var v=o(e,t),w=Fn.triangulate(v,!1);for(l=0,h=w.length;l<h;l++)for(f=w[l],u=0;u<3;u++)d=f[u].x+":"+f[u].y,p=g[d],p!==void 0&&(f[u]=p);return w.concat()},isClockWise:function(e){return Fn.area(e)<0},b2:function(){function e(i,r){var a=1-i;return a*a*r}function t(i,r){return 2*(1-i)*i*r}function n(i,r){return i*i*r}return function(r,a,o,l){return e(r,a)+t(r,o)+n(r,l)}}(),b3:function(){function e(r,a){var o=1-r;return o*o*o*a}function t(r,a){var o=1-r;return 3*o*o*r*a}function n(r,a){var o=1-r;return 3*o*r*r*a}function i(r,a){return r*r*r*a}return function(a,o,l,h,u){return e(a,o)+t(a,l)+n(a,h)+i(a,u)}}()};function ki(e,t){if(typeof e>"u"){e=[];return}Mt.call(this),this.type="ExtrudeGeometry",e=Array.isArray(e)?e:[e],this.addShapeList(e,t),this.computeFaceNormals()}ki.prototype=Object.create(Mt.prototype);ki.prototype.constructor=ki;ki.prototype.addShapeList=function(e,t){for(var n=e.length,i=0;i<n;i++){var r=e[i];this.addShape(r,t)}};ki.prototype.addShape=function(e,t){var n=t.amount!==void 0?t.amount:100,i=t.bevelThickness!==void 0?t.bevelThickness:6,r=t.bevelSize!==void 0?t.bevelSize:i-2,a=t.bevelSegments!==void 0?t.bevelSegments:3,o=t.bevelEnabled!==void 0?t.bevelEnabled:!0,l=t.curveSegments!==void 0?t.curveSegments:12,h=t.steps!==void 0?t.steps:1,u=t.extrudePath,f,d=!1,p=t.UVGenerator!==void 0?t.UVGenerator:ki.WorldUVGenerator,g,x,y,_;u&&(f=u.getSpacedPoints(h),d=!0,o=!1,g=t.frames!==void 0?t.frames:u.computeFrenetFrames(h,!1),x=new k,y=new k,_=new k),o||(a=0,i=0,r=0);var v,w,M,T=this,A=this.vertices.length,P=e.extractPoints(l),b=P.shape,U=P.holes,S=!Fn.isClockWise(b);if(S){for(b=b.reverse(),w=0,M=U.length;w<M;w++)v=U[w],Fn.isClockWise(v)&&(U[w]=v.reverse());S=!1}var R=Fn.triangulateShape(b,U),V=b;for(w=0,M=U.length;w<M;w++)v=U[w],b=b.concat(v);function W(qe,We,tt){return We||console.error("THREE.ExtrudeGeometry: vec does not exist"),We.clone().multiplyScalar(tt).add(qe)}var L,I,z,X,Y,$=b.length,ne,ae=R.length;function j(qe,We,tt){var ot,pt,Dt=1,G=qe.x-We.x,N=qe.y-We.y,ue=tt.x-qe.x,Ce=tt.y-qe.y,be=G*G+N*N,Fe=G*Ce-N*ue;if(Math.abs(Fe)>Number.EPSILON){var st=Math.sqrt(be),Ge=Math.sqrt(ue*ue+Ce*Ce),ve=We.x-N/st,ie=We.y+G/st,Ue=tt.x-Ce/Ge,Ne=tt.y+ue/Ge,Ve=((Ue-ve)*Ce-(Ne-ie)*ue)/(G*Ce-N*ue);ot=ve+G*Ve-qe.x,pt=ie+N*Ve-qe.y;var Le=ot*ot+pt*pt;if(Le<=2)return new Ke(ot,pt);Dt=Math.sqrt(Le/2)}else{var rt=!1;G>Number.EPSILON?ue>Number.EPSILON&&(rt=!0):G<-Number.EPSILON?ue<-Number.EPSILON&&(rt=!0):Math.sign(N)===Math.sign(Ce)&&(rt=!0),rt?(ot=-N,pt=G,Dt=Math.sqrt(be)):(ot=G,pt=N,Dt=Math.sqrt(be/2))}return new Ke(ot/Dt,pt/Dt)}for(var K=[],Q=0,he=V.length,me=he-1,ge=Q+1;Q<he;Q++,me++,ge++)me===he&&(me=0),ge===he&&(ge=0),K[Q]=j(V[Q],V[me],V[ge]);var Pe=[],we,Se=K.concat();for(w=0,M=U.length;w<M;w++){for(v=U[w],we=[],Q=0,he=v.length,me=he-1,ge=Q+1;Q<he;Q++,me++,ge++)me===he&&(me=0),ge===he&&(ge=0),we[Q]=j(v[Q],v[me],v[ge]);Pe.push(we),Se=Se.concat(we)}for(L=0;L<a;L++){for(z=L/a,X=i*Math.cos(z*Math.PI/2),I=r*Math.sin(z*Math.PI/2),Q=0,he=V.length;Q<he;Q++)Y=W(V[Q],K[Q],I),ze(Y.x,Y.y,-X);for(w=0,M=U.length;w<M;w++)for(v=U[w],we=Pe[w],Q=0,he=v.length;Q<he;Q++)Y=W(v[Q],we[Q],I),ze(Y.x,Y.y,-X)}for(I=r,Q=0;Q<$;Q++)Y=o?W(b[Q],Se[Q],I):b[Q],d?(y.copy(g.normals[0]).multiplyScalar(Y.x),x.copy(g.binormals[0]).multiplyScalar(Y.y),_.copy(f[0]).add(y).add(x),ze(_.x,_.y,_.z)):ze(Y.x,Y.y,0);var ht;for(ht=1;ht<=h;ht++)for(Q=0;Q<$;Q++)Y=o?W(b[Q],Se[Q],I):b[Q],d?(y.copy(g.normals[ht]).multiplyScalar(Y.x),x.copy(g.binormals[ht]).multiplyScalar(Y.y),_.copy(f[ht]).add(y).add(x),ze(_.x,_.y,_.z)):ze(Y.x,Y.y,n/h*ht);for(L=a-1;L>=0;L--){for(z=L/a,X=i*Math.cos(z*Math.PI/2),I=r*Math.sin(z*Math.PI/2),Q=0,he=V.length;Q<he;Q++)Y=W(V[Q],K[Q],I),ze(Y.x,Y.y,n+X);for(w=0,M=U.length;w<M;w++)for(v=U[w],we=Pe[w],Q=0,he=v.length;Q<he;Q++)Y=W(v[Q],we[Q],I),d?ze(Y.x,Y.y+f[h-1].y,f[h-1].x+X):ze(Y.x,Y.y,n+X)}J(),se();function J(){if(o){var qe=0,We=$*qe;for(Q=0;Q<ae;Q++)ne=R[Q],Re(ne[2]+We,ne[1]+We,ne[0]+We);for(qe=h+a*2,We=$*qe,Q=0;Q<ae;Q++)ne=R[Q],Re(ne[0]+We,ne[1]+We,ne[2]+We)}else{for(Q=0;Q<ae;Q++)ne=R[Q],Re(ne[2],ne[1],ne[0]);for(Q=0;Q<ae;Q++)ne=R[Q],Re(ne[0]+$*h,ne[1]+$*h,ne[2]+$*h)}}function se(){var qe=0;for(Qe(V,qe),qe+=V.length,w=0,M=U.length;w<M;w++)v=U[w],Qe(v,qe),qe+=v.length}function Qe(qe,We){var tt,ot;for(Q=qe.length;--Q>=0;){tt=Q,ot=Q-1,ot<0&&(ot=qe.length-1);var pt=0,Dt=h+a*2;for(pt=0;pt<Dt;pt++){var G=$*pt,N=$*(pt+1),ue=We+tt+G,Ce=We+ot+G,be=We+ot+N,Fe=We+tt+N;et(ue,Ce,be,Fe)}}}function ze(qe,We,tt){T.vertices.push(new k(qe,We,tt))}function Re(qe,We,tt){qe+=A,We+=A,tt+=A,T.faces.push(new Ri(qe,We,tt,null,null,0));var ot=p.generateTopUV(T,qe,We,tt);T.faceVertexUvs[0].push(ot)}function et(qe,We,tt,ot,pt,Dt,G,N,ue){qe+=A,We+=A,tt+=A,ot+=A,T.faces.push(new Ri(qe,We,ot,null,null,1)),T.faces.push(new Ri(We,tt,ot,null,null,1));var Ce=p.generateSideWallUV(T,qe,We,tt,ot);T.faceVertexUvs[0].push([Ce[0],Ce[1],Ce[3]]),T.faceVertexUvs[0].push([Ce[1],Ce[2],Ce[3]])}};ki.WorldUVGenerator={generateTopUV:function(e,t,n,i){var r=e.vertices,a=r[t],o=r[n],l=r[i];return[new Ke(a.x,a.y),new Ke(o.x,o.y),new Ke(l.x,l.y)]},generateSideWallUV:function(e,t,n,i,r){var a=e.vertices,o=a[t],l=a[n],h=a[i],u=a[r];return Math.abs(o.y-l.y)<.01?[new Ke(o.x,1-o.z),new Ke(l.x,1-l.z),new Ke(h.x,1-h.z),new Ke(u.x,1-u.z)]:[new Ke(o.y,1-o.z),new Ke(l.y,1-l.z),new Ke(h.y,1-h.z),new Ke(u.y,1-u.z)]}};function mc(e,t){t=t||{};var n=t.font;if((n&&n.isFont)===!1)return console.error("THREE.TextGeometry: font parameter is not an instance of THREE.Font."),new Mt;var i=n.generateShapes(e,t.size,t.curveSegments);t.amount=t.height!==void 0?t.height:50,t.bevelThickness===void 0&&(t.bevelThickness=10),t.bevelSize===void 0&&(t.bevelSize=8),t.bevelEnabled===void 0&&(t.bevelEnabled=!1),ki.call(this,i,t),this.type="TextGeometry"}mc.prototype=Object.create(ki.prototype);mc.prototype.constructor=mc;function ss(e,t,n,i,r,a,o){ft.call(this),this.type="SphereBufferGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:r,thetaStart:a,thetaLength:o},e=e||50,t=Math.max(3,Math.floor(t)||8),n=Math.max(2,Math.floor(n)||6),i=i!==void 0?i:0,r=r!==void 0?r:Math.PI*2,a=a!==void 0?a:0,o=o!==void 0?o:Math.PI;for(var l=a+o,h=(t+1)*(n+1),u=new je(new Float32Array(h*3),3),f=new je(new Float32Array(h*3),3),d=new je(new Float32Array(h*2),2),p=0,g=[],x=new k,y=0;y<=n;y++){for(var _=[],v=y/n,w=0;w<=t;w++){var M=w/t,T=-e*Math.cos(i+M*r)*Math.sin(a+v*o),A=e*Math.cos(a+v*o),P=e*Math.sin(i+M*r)*Math.sin(a+v*o);x.set(T,A,P).normalize(),u.setXYZ(p,T,A,P),f.setXYZ(p,x.x,x.y,x.z),d.setXY(p,M,1-v),_.push(p),p++}g.push(_)}for(var b=[],y=0;y<n;y++)for(var w=0;w<t;w++){var U=g[y][w+1],S=g[y][w],R=g[y+1][w],V=g[y+1][w+1];(y!==0||a>0)&&b.push(U,S,V),(y!==n-1||l<Math.PI)&&b.push(S,R,V)}this.setIndex(new(u.count>65535?Or:Nr)(b,1)),this.addAttribute("position",u),this.addAttribute("normal",f),this.addAttribute("uv",d),this.boundingSphere=new Yn(new k,e)}ss.prototype=Object.create(ft.prototype);ss.prototype.constructor=ss;function vc(e,t,n,i,r,a,o){Mt.call(this),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:r,thetaStart:a,thetaLength:o},this.fromBufferGeometry(new ss(e,t,n,i,r,a,o))}vc.prototype=Object.create(Mt.prototype);vc.prototype.constructor=vc;function Po(e,t,n,i,r,a){ft.call(this),this.type="RingBufferGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:a},e=e||20,t=t||50,r=r!==void 0?r:0,a=a!==void 0?a:Math.PI*2,n=n!==void 0?Math.max(3,n):8,i=i!==void 0?Math.max(1,i):1;var o=(n+1)*(i+1),l=n*i*2*3,h=new je(new(l>65535?Uint32Array:Uint16Array)(l),1),u=new je(new Float32Array(o*3),3),f=new je(new Float32Array(o*3),3),d=new je(new Float32Array(o*2),2),p=0,g=0,x,y=e,_=(t-e)/i,v=new k,w=new Ke,M,T;for(M=0;M<=i;M++){for(T=0;T<=n;T++)x=r+T/n*a,v.x=y*Math.cos(x),v.y=y*Math.sin(x),u.setXYZ(p,v.x,v.y,v.z),f.setXYZ(p,0,0,1),w.x=(v.x/t+1)/2,w.y=(v.y/t+1)/2,d.setXY(p,w.x,w.y),p++;y+=_}for(M=0;M<i;M++){var A=M*(n+1);for(T=0;T<n;T++){x=T+A;var P=x,b=x+n+1,U=x+n+2,S=x+1;h.setX(g,P),g++,h.setX(g,b),g++,h.setX(g,U),g++,h.setX(g,P),g++,h.setX(g,U),g++,h.setX(g,S),g++}}this.setIndex(h),this.addAttribute("position",u),this.addAttribute("normal",f),this.addAttribute("uv",d)}Po.prototype=Object.create(ft.prototype);Po.prototype.constructor=Po;function gc(e,t,n,i,r,a){Mt.call(this),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:a},this.fromBufferGeometry(new Po(e,t,n,i,r,a))}gc.prototype=Object.create(Mt.prototype);gc.prototype.constructor=gc;function _c(e,t,n,i){Mt.call(this),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i},this.fromBufferGeometry(new ns(e,t,n,i))}_c.prototype=Object.create(Mt.prototype);_c.prototype.constructor=_c;function Uo(e,t,n,i){ft.call(this),this.type="LatheBufferGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t)||12,n=n||0,i=i||Math.PI*2,i=St.clamp(i,0,Math.PI*2);var r=(t+1)*e.length,a=t*e.length*2*3,o=new je(new(a>65535?Uint32Array:Uint16Array)(a),1),l=new je(new Float32Array(r*3),3),h=new je(new Float32Array(r*2),2),u=0,f=0,d,p=1/t,g=new k,x=new Ke,y,_;for(y=0;y<=t;y++){var v=n+y*p*i,w=Math.sin(v),M=Math.cos(v);for(_=0;_<=e.length-1;_++)g.x=e[_].x*w,g.y=e[_].y,g.z=e[_].x*M,l.setXYZ(u,g.x,g.y,g.z),x.x=y/t,x.y=_/(e.length-1),h.setXY(u,x.x,x.y),u++}for(y=0;y<t;y++)for(_=0;_<e.length-1;_++){d=_+y*e.length;var T=d,A=d+e.length,P=d+e.length+1,b=d+1;o.setX(f,T),f++,o.setX(f,A),f++,o.setX(f,b),f++,o.setX(f,A),f++,o.setX(f,P),f++,o.setX(f,b),f++}if(this.setIndex(o),this.addAttribute("position",l),this.addAttribute("uv",h),this.computeVertexNormals(),i===Math.PI*2){var U=this.attributes.normal.array,S=new k,R=new k,V=new k;for(d=t*e.length*3,y=0,_=0;y<e.length;y++,_+=3)S.x=U[_+0],S.y=U[_+1],S.z=U[_+2],R.x=U[d+_+0],R.y=U[d+_+1],R.z=U[d+_+2],V.addVectors(S,R).normalize(),U[_+0]=U[d+_+0]=V.x,U[_+1]=U[d+_+1]=V.y,U[_+2]=U[d+_+2]=V.z}}Uo.prototype=Object.create(ft.prototype);Uo.prototype.constructor=Uo;function xc(e,t,n,i){Mt.call(this),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},this.fromBufferGeometry(new Uo(e,t,n,i)),this.mergeVertices()}xc.prototype=Object.create(Mt.prototype);xc.prototype.constructor=xc;function Do(e,t){ft.call(this),this.type="ShapeBufferGeometry",this.parameters={shapes:e,curveSegments:t},t=t||12;var n=[],i=[],r=[],a=[],o=0,l=0;if(Array.isArray(e)===!1)u(e);else for(var h=0;h<e.length;h++)u(e[h]),this.addGroup(o,l,h),o+=l,l=0;this.setIndex(new(a.length>65535?Or:Nr)(a,1)),this.addAttribute("position",new Ut(n,3)),this.addAttribute("normal",new Ut(i,3)),this.addAttribute("uv",new Ut(r,2));function u(f){var d,p,g,x=n.length/3,y=f.extractPoints(t),_=y.shape,v=y.holes;if(Fn.isClockWise(_)===!1)for(_=_.reverse(),d=0,p=v.length;d<p;d++)g=v[d],Fn.isClockWise(g)===!0&&(v[d]=g.reverse());var w=Fn.triangulateShape(_,v);for(d=0,p=v.length;d<p;d++)g=v[d],_=_.concat(g);for(d=0,p=_.length;d<p;d++){var M=_[d];n.push(M.x,M.y,0),i.push(0,0,1),r.push(M.x,M.y)}for(d=0,p=w.length;d<p;d++){var T=w[d],A=T[0]+x,P=T[1]+x,b=T[2]+x;a.push(A,P,b),l+=3}}}Do.prototype=Object.create(ft.prototype);Do.prototype.constructor=Do;function Io(e,t){Mt.call(this),this.type="ShapeGeometry",typeof t=="object"&&(console.warn("THREE.ShapeGeometry: Options parameter has been removed."),t=t.curveSegments),this.parameters={shapes:e,curveSegments:t},this.fromBufferGeometry(new Do(e,t)),this.mergeVertices()}Io.prototype=Object.create(Mt.prototype);Io.prototype.constructor=Io;function Fo(e,t){ft.call(this),t=t!==void 0?t:1;var n=Math.cos(St.DEG2RAD*t),i=[0,0],r={};function a(w,M){return w-M}var o=["a","b","c"],l;e.isBufferGeometry?(l=new Mt,l.fromBufferGeometry(e)):l=e.clone(),l.mergeVertices(),l.computeFaceNormals();for(var h=l.vertices,u=l.faces,f=0,d=u.length;f<d;f++)for(var p=u[f],g=0;g<3;g++){i[0]=p[o[g]],i[1]=p[o[(g+1)%3]],i.sort(a);var x=i.toString();r[x]===void 0?r[x]={vert1:i[0],vert2:i[1],face1:f,face2:void 0}:r[x].face2=f}var y=[];for(var x in r){var _=r[x];if(_.face2===void 0||u[_.face1].normal.dot(u[_.face2].normal)<=n){var v=h[_.vert1];y.push(v.x),y.push(v.y),y.push(v.z),v=h[_.vert2],y.push(v.x),y.push(v.y),y.push(v.z)}}this.addAttribute("position",new Ut(y,3))}Fo.prototype=Object.create(ft.prototype);Fo.prototype.constructor=Fo;function zr(e,t,n,i,r,a,o,l){ft.call(this),this.type="CylinderBufferGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:r,openEnded:a,thetaStart:o,thetaLength:l};var h=this;e=e!==void 0?e:20,t=t!==void 0?t:20,n=n!==void 0?n:100,i=Math.floor(i)||8,r=Math.floor(r)||1,a=a!==void 0?a:!1,o=o!==void 0?o:0,l=l!==void 0?l:2*Math.PI;var u=0;a===!1&&(e>0&&u++,t>0&&u++);var f=A(),d=P(),p=new je(new(d>65535?Uint32Array:Uint16Array)(d),1),g=new je(new Float32Array(f*3),3),x=new je(new Float32Array(f*3),3),y=new je(new Float32Array(f*2),2),_=0,v=0,w=[],M=n/2,T=0;b(),a===!1&&(e>0&&U(!0),t>0&&U(!1)),this.setIndex(p),this.addAttribute("position",g),this.addAttribute("normal",x),this.addAttribute("uv",y);function A(){var S=(i+1)*(r+1);return a===!1&&(S+=(i+1)*u+i*u),S}function P(){var S=i*r*2*3;return a===!1&&(S+=i*u*3),S}function b(){var S,R,V=new k,W=new k,L=0,I=(t-e)/n;for(R=0;R<=r;R++){var z=[],X=R/r,Y=X*(t-e)+e;for(S=0;S<=i;S++){var $=S/i,ne=$*l+o,ae=Math.sin(ne),j=Math.cos(ne);W.x=Y*ae,W.y=-X*n+M,W.z=Y*j,g.setXYZ(_,W.x,W.y,W.z),V.set(ae,I,j).normalize(),x.setXYZ(_,V.x,V.y,V.z),y.setXY(_,$,1-X),z.push(_),_++}w.push(z)}for(S=0;S<i;S++)for(R=0;R<r;R++){var K=w[R][S],Q=w[R+1][S],he=w[R+1][S+1],me=w[R][S+1];p.setX(v,K),v++,p.setX(v,Q),v++,p.setX(v,me),v++,p.setX(v,Q),v++,p.setX(v,he),v++,p.setX(v,me),v++,L+=6}h.addGroup(T,L,0),T+=L}function U(S){var R,V,W,L=new Ke,I=new k,z=0,X=S===!0?e:t,Y=S===!0?1:-1;for(V=_,R=1;R<=i;R++)g.setXYZ(_,0,M*Y,0),x.setXYZ(_,0,Y,0),L.x=.5,L.y=.5,y.setXY(_,L.x,L.y),_++;for(W=_,R=0;R<=i;R++){var $=R/i,ne=$*l+o,ae=Math.cos(ne),j=Math.sin(ne);I.x=X*j,I.y=M*Y,I.z=X*ae,g.setXYZ(_,I.x,I.y,I.z),x.setXYZ(_,0,Y,0),L.x=ae*.5+.5,L.y=j*.5*Y+.5,y.setXY(_,L.x,L.y),_++}for(R=0;R<i;R++){var K=V+R,Q=W+R;S===!0?(p.setX(v,Q),v++,p.setX(v,Q+1),v++,p.setX(v,K),v++):(p.setX(v,Q+1),v++,p.setX(v,Q),v++,p.setX(v,K),v++),z+=3}h.addGroup(T,z,S===!0?1:2),T+=z}}zr.prototype=Object.create(ft.prototype);zr.prototype.constructor=zr;function os(e,t,n,i,r,a,o,l){Mt.call(this),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:r,openEnded:a,thetaStart:o,thetaLength:l},this.fromBufferGeometry(new zr(e,t,n,i,r,a,o,l)),this.mergeVertices()}os.prototype=Object.create(Mt.prototype);os.prototype.constructor=os;function yc(e,t,n,i,r,a,o){os.call(this,0,e,t,n,i,r,a,o),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:a,thetaLength:o}}yc.prototype=Object.create(os.prototype);yc.prototype.constructor=yc;function Mc(e,t,n,i,r,a,o){zr.call(this,0,e,t,n,i,r,a,o),this.type="ConeBufferGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:a,thetaLength:o}}Mc.prototype=Object.create(zr.prototype);Mc.prototype.constructor=Mc;function No(e,t,n,i){ft.call(this),this.type="CircleBufferGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},e=e||50,t=t!==void 0?Math.max(3,t):8,n=n!==void 0?n:0,i=i!==void 0?i:Math.PI*2;var r=t+2,a=new Float32Array(r*3),o=new Float32Array(r*3),l=new Float32Array(r*2);o[2]=1,l[0]=.5,l[1]=.5;for(var h=0,u=3,f=2;h<=t;h++,u+=3,f+=2){var d=n+h/t*i;a[u]=e*Math.cos(d),a[u+1]=e*Math.sin(d),o[u+2]=1,l[f]=(a[u]/e+1)/2,l[f+1]=(a[u+1]/e+1)/2}for(var p=[],u=1;u<=t;u++)p.push(u,u+1,0);this.setIndex(new je(new Uint16Array(p),1)),this.addAttribute("position",new je(a,3)),this.addAttribute("normal",new je(o,3)),this.addAttribute("uv",new je(l,2)),this.boundingSphere=new Yn(new k,e)}No.prototype=Object.create(ft.prototype);No.prototype.constructor=No;function Ec(e,t,n,i){Mt.call(this),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},this.fromBufferGeometry(new No(e,t,n,i))}Ec.prototype=Object.create(Mt.prototype);Ec.prototype.constructor=Ec;function Oo(e,t,n,i,r,a){Mt.call(this),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:r,depthSegments:a},this.fromBufferGeometry(new ts(e,t,n,i,r,a)),this.mergeVertices()}Oo.prototype=Object.create(Mt.prototype);Oo.prototype.constructor=Oo;var er=Object.freeze({WireframeGeometry:wo,ParametricGeometry:sc,ParametricBufferGeometry:So,TetrahedronGeometry:oc,TetrahedronBufferGeometry:bo,OctahedronGeometry:lc,OctahedronBufferGeometry:as,IcosahedronGeometry:cc,IcosahedronBufferGeometry:To,DodecahedronGeometry:uc,DodecahedronBufferGeometry:Ao,PolyhedronGeometry:hc,PolyhedronBufferGeometry:pi,TubeGeometry:fc,TubeBufferGeometry:Ro,TorusKnotGeometry:dc,TorusKnotBufferGeometry:Lo,TorusGeometry:pc,TorusBufferGeometry:Co,TextGeometry:mc,SphereBufferGeometry:ss,SphereGeometry:vc,RingGeometry:gc,RingBufferGeometry:Po,PlaneBufferGeometry:ns,PlaneGeometry:_c,LatheGeometry:xc,LatheBufferGeometry:Uo,ShapeGeometry:Io,ShapeBufferGeometry:Do,ExtrudeGeometry:ki,EdgesGeometry:Fo,ConeGeometry:yc,ConeBufferGeometry:Mc,CylinderGeometry:os,CylinderBufferGeometry:zr,CircleBufferGeometry:No,CircleGeometry:Ec,BoxBufferGeometry:ts,BoxGeometry:Oo});function Bo(){ii.call(this,{uniforms:ci.merge([Tt.lights,{opacity:{value:1}}]),vertexShader:kt.shadow_vert,fragmentShader:kt.shadow_frag}),this.lights=!0,this.transparent=!0,Object.defineProperties(this,{opacity:{enumerable:!0,get:function(){return this.uniforms.opacity.value},set:function(e){this.uniforms.opacity.value=e}}})}Bo.prototype=Object.create(ii.prototype);Bo.prototype.constructor=Bo;Bo.prototype.isShadowMaterial=!0;function zo(e){ii.call(this,e),this.type="RawShaderMaterial"}zo.prototype=Object.create(ii.prototype);zo.prototype.constructor=zo;zo.prototype.isRawShaderMaterial=!0;function wc(e){this.uuid=St.generateUUID(),this.type="MultiMaterial",this.materials=Array.isArray(e)?e:[],this.visible=!0}wc.prototype={constructor:wc,isMultiMaterial:!0,toJSON:function(e){for(var t={metadata:{version:4.2,type:"material",generator:"MaterialExporter"},uuid:this.uuid,type:this.type,materials:[]},n=this.materials,i=0,r=n.length;i<r;i++){var a=n[i].toJSON(e);delete a.metadata,t.materials.push(a)}return t.visible=this.visible,t},clone:function(){for(var e=new this.constructor,t=0;t<this.materials.length;t++)e.materials.push(this.materials[t].clone());return e.visible=this.visible,e}};function pr(e){Ct.call(this),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new dt(16777215),this.roughness=.5,this.metalness=.5,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new dt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new Ke(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}pr.prototype=Object.create(Ct.prototype);pr.prototype.constructor=pr;pr.prototype.isMeshStandardMaterial=!0;pr.prototype.copy=function(e){return Ct.prototype.copy.call(this,e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function ls(e){pr.call(this),this.defines={PHYSICAL:""},this.type="MeshPhysicalMaterial",this.reflectivity=.5,this.clearCoat=0,this.clearCoatRoughness=0,this.setValues(e)}ls.prototype=Object.create(pr.prototype);ls.prototype.constructor=ls;ls.prototype.isMeshPhysicalMaterial=!0;ls.prototype.copy=function(e){return pr.prototype.copy.call(this,e),this.defines={PHYSICAL:""},this.reflectivity=e.reflectivity,this.clearCoat=e.clearCoat,this.clearCoatRoughness=e.clearCoatRoughness,this};function rr(e){Ct.call(this),this.type="MeshPhongMaterial",this.color=new dt(16777215),this.specular=new dt(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new dt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new Ke(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Fc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}rr.prototype=Object.create(Ct.prototype);rr.prototype.constructor=rr;rr.prototype.isMeshPhongMaterial=!0;rr.prototype.copy=function(e){return Ct.prototype.copy.call(this,e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function cs(e){rr.call(this),this.defines={TOON:""},this.type="MeshToonMaterial",this.gradientMap=null,this.setValues(e)}cs.prototype=Object.create(rr.prototype);cs.prototype.constructor=cs;cs.prototype.isMeshToonMaterial=!0;cs.prototype.copy=function(e){return rr.prototype.copy.call(this,e),this.gradientMap=e.gradientMap,this};function us(e){Ct.call(this,e),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalScale=new Ke(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}us.prototype=Object.create(Ct.prototype);us.prototype.constructor=us;us.prototype.isMeshNormalMaterial=!0;us.prototype.copy=function(e){return Ct.prototype.copy.call(this,e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function hs(e){Ct.call(this),this.type="MeshLambertMaterial",this.color=new dt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new dt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Fc,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.skinning=!1,this.morphTargets=!1,this.morphNormals=!1,this.setValues(e)}hs.prototype=Object.create(Ct.prototype);hs.prototype.constructor=hs;hs.prototype.isMeshLambertMaterial=!0;hs.prototype.copy=function(e){return Ct.prototype.copy.call(this,e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.skinning=e.skinning,this.morphTargets=e.morphTargets,this.morphNormals=e.morphNormals,this};function fs(e){Ct.call(this),this.type="LineDashedMaterial",this.color=new dt(16777215),this.linewidth=1,this.scale=1,this.dashSize=3,this.gapSize=1,this.lights=!1,this.setValues(e)}fs.prototype=Object.create(Ct.prototype);fs.prototype.constructor=fs;fs.prototype.isLineDashedMaterial=!0;fs.prototype.copy=function(e){return Ct.prototype.copy.call(this,e),this.color.copy(e.color),this.linewidth=e.linewidth,this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this};var NI=Object.freeze({ShadowMaterial:Bo,SpriteMaterial:rs,RawShaderMaterial:zo,ShaderMaterial:ii,PointsMaterial:ir,MultiMaterial:wc,MeshPhysicalMaterial:ls,MeshStandardMaterial:pr,MeshPhongMaterial:rr,MeshToonMaterial:cs,MeshNormalMaterial:us,MeshLambertMaterial:hs,MeshDepthMaterial:ga,MeshBasicMaterial:di,LineDashedMaterial:fs,LineBasicMaterial:gn,Material:Ct}),up={enabled:!1,files:{},add:function(e,t){this.enabled!==!1&&(this.files[e]=t)},get:function(e){if(this.enabled!==!1)return this.files[e]},remove:function(e){delete this.files[e]},clear:function(){this.files={}}};function Jp(e,t,n){var i=this,r=!1,a=0,o=0;this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(l){o++,r===!1&&i.onStart!==void 0&&i.onStart(l,a,o),r=!0},this.itemEnd=function(l){a++,i.onProgress!==void 0&&i.onProgress(l,a,o),a===o&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(l){i.onError!==void 0&&i.onError(l)}}var Li=new Jp;function Xi(e){this.manager=e!==void 0?e:Li}Object.assign(Xi.prototype,{load:function(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e);var r=this,a=up.get(e);if(a!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(a),r.manager.itemEnd(e)},0),a;var o=/^data:(.*?)(;base64)?,(.*)$/,l=e.match(o);if(l){var h=l[1],u=!!l[2],f=l[3];f=window.decodeURIComponent(f),u&&(f=window.atob(f));try{var d,p=(this.responseType||"").toLowerCase();switch(p){case"arraybuffer":case"blob":d=new ArrayBuffer(f.length);for(var g=new Uint8Array(d),x=0;x<f.length;x++)g[x]=f.charCodeAt(x);p==="blob"&&(d=new Blob([d],{type:h}));break;case"document":var y=new DOMParser;d=y.parseFromString(f,h);break;case"json":d=JSON.parse(f);break;default:d=f;break}window.setTimeout(function(){t&&t(d),r.manager.itemEnd(e)},0)}catch(v){window.setTimeout(function(){i&&i(v),r.manager.itemError(e)},0)}}else{var _=new XMLHttpRequest;_.open("GET",e,!0),_.addEventListener("load",function(v){var w=v.target.response;up.add(e,w),this.status===200?(t&&t(w),r.manager.itemEnd(e)):this.status===0?(console.warn("THREE.FileLoader: HTTP Status 0 received."),t&&t(w),r.manager.itemEnd(e)):(i&&i(v),r.manager.itemError(e))},!1),n!==void 0&&_.addEventListener("progress",function(v){n(v)},!1),_.addEventListener("error",function(v){i&&i(v),r.manager.itemError(e)},!1),this.responseType!==void 0&&(_.responseType=this.responseType),this.withCredentials!==void 0&&(_.withCredentials=this.withCredentials),_.overrideMimeType&&_.overrideMimeType(this.mimeType!==void 0?this.mimeType:"text/plain"),_.send(null)}return r.manager.itemStart(e),_},setPath:function(e){return this.path=e,this},setResponseType:function(e){return this.responseType=e,this},setWithCredentials:function(e){return this.withCredentials=e,this},setMimeType:function(e){return this.mimeType=e,this}});function iy(e){this.manager=e!==void 0?e:Li,this._parser=null}Object.assign(iy.prototype,{load:function(e,t,n,i){var r=this,a=[],o=new Eo;o.image=a;var l=new Xi(this.manager);l.setPath(this.path),l.setResponseType("arraybuffer");function h(p){l.load(e[p],function(g){var x=r._parser(g,!0);a[p]={width:x.width,height:x.height,format:x.format,mipmaps:x.mipmaps},u+=1,u===6&&(x.mipmapCount===1&&(o.minFilter=hi),o.format=x.format,o.needsUpdate=!0,t&&t(o))},n,i)}if(Array.isArray(e))for(var u=0,f=0,d=e.length;f<d;++f)h(f);else l.load(e,function(p){var g=r._parser(p,!0);if(g.isCubemap)for(var x=g.mipmaps.length/g.mipmapCount,y=0;y<x;y++){a[y]={mipmaps:[]};for(var _=0;_<g.mipmapCount;_++)a[y].mipmaps.push(g.mipmaps[y*g.mipmapCount+_]),a[y].format=g.format,a[y].width=g.width,a[y].height=g.height}else o.image.width=g.width,o.image.height=g.height,o.mipmaps=g.mipmaps;g.mipmapCount===1&&(o.minFilter=hi),o.format=g.format,o.needsUpdate=!0,t&&t(o)},n,i);return o},setPath:function(e){return this.path=e,this}});var OI=Qp;function Qp(e){this.manager=e!==void 0?e:Li,this._parser=null}Object.assign(Qp.prototype,{load:function(e,t,n,i){var r=this,a=new es,o=new Xi(this.manager);return o.setResponseType("arraybuffer"),o.load(e,function(l){var h=r._parser(l);h&&(h.image!==void 0?a.image=h.image:h.data!==void 0&&(a.image.width=h.width,a.image.height=h.height,a.image.data=h.data),a.wrapS=h.wrapS!==void 0?h.wrapS:Ti,a.wrapT=h.wrapT!==void 0?h.wrapT:Ti,a.magFilter=h.magFilter!==void 0?h.magFilter:hi,a.minFilter=h.minFilter!==void 0?h.minFilter:Nc,a.anisotropy=h.anisotropy!==void 0?h.anisotropy:1,h.format!==void 0&&(a.format=h.format),h.type!==void 0&&(a.type=h.type),h.mipmaps!==void 0&&(a.mipmaps=h.mipmaps),h.mipmapCount===1&&(a.minFilter=hi),a.needsUpdate=!0,t&&t(a,h))},n,i),a}});function Oc(e){this.manager=e!==void 0?e:Li}Object.assign(Oc.prototype,{load:function(e,t,n,i){var r=this,a=document.createElementNS("http://www.w3.org/1999/xhtml","img");if(a.onload=function(){a.onload=null,URL.revokeObjectURL(a.src),t&&t(a),r.manager.itemEnd(e)},a.onerror=i,e.indexOf("data:")===0)a.src=e;else if(this.crossOrigin!==void 0)a.crossOrigin=this.crossOrigin,a.src=e;else{var o=new Xi;o.setPath(this.path),o.setResponseType("blob"),o.setWithCredentials(this.withCredentials),o.load(e,function(l){a.src=URL.createObjectURL(l)},n,i)}return r.manager.itemStart(e),a},setCrossOrigin:function(e){return this.crossOrigin=e,this},setWithCredentials:function(e){return this.withCredentials=e,this},setPath:function(e){return this.path=e,this}});function em(e){this.manager=e!==void 0?e:Li}Object.assign(em.prototype,{load:function(e,t,n,i){var r=new ma,a=new Oc(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);var o=0;function l(u){a.load(e[u],function(f){r.images[u]=f,o++,o===6&&(r.needsUpdate=!0,t&&t(r))},void 0,i)}for(var h=0;h<e.length;++h)l(h);return r},setCrossOrigin:function(e){return this.crossOrigin=e,this},setPath:function(e){return this.path=e,this}});function Xh(e){this.manager=e!==void 0?e:Li}Object.assign(Xh.prototype,{load:function(e,t,n,i){var r=new nn,a=new Oc(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setWithCredentials(this.withCredentials),a.setPath(this.path),a.load(e,function(o){var l=e.search(/\.(jpg|jpeg)$/)>0||e.search(/^data\:image\/jpeg/)===0;r.format=l?po:fr,r.image=o,r.needsUpdate=!0,t!==void 0&&t(r)},n,i),r},setCrossOrigin:function(e){return this.crossOrigin=e,this},setWithCredentials:function(e){return this.withCredentials=e,this},setPath:function(e){return this.path=e,this}});function _n(e,t){it.call(this),this.type="Light",this.color=new dt(e),this.intensity=t!==void 0?t:1,this.receiveShadow=void 0}_n.prototype=Object.assign(Object.create(it.prototype),{constructor:_n,isLight:!0,copy:function(e){return it.prototype.copy.call(this,e),this.color.copy(e.color),this.intensity=e.intensity,this},toJSON:function(e){var t=it.prototype.toJSON.call(this,e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}});function fh(e,t,n){_n.call(this,e,n),this.type="HemisphereLight",this.castShadow=void 0,this.position.copy(it.DefaultUp),this.updateMatrix(),this.groundColor=new dt(t)}fh.prototype=Object.assign(Object.create(_n.prototype),{constructor:fh,isHemisphereLight:!0,copy:function(e){return _n.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}});function ys(e){this.camera=e,this.bias=0,this.radius=1,this.mapSize=new Ke(512,512),this.map=null,this.matrix=new xt}Object.assign(ys.prototype,{copy:function(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this},clone:function(){return new this.constructor().copy(this)},toJSON:function(){var e={};return this.bias!==0&&(e.bias=this.bias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}});function dh(){ys.call(this,new Wn(50,1,.5,500))}dh.prototype=Object.assign(Object.create(ys.prototype),{constructor:dh,isSpotLightShadow:!0,update:function(e){var t=St.RAD2DEG*2*e.angle,n=this.mapSize.width/this.mapSize.height,i=e.distance||500,r=this.camera;(t!==r.fov||n!==r.aspect||i!==r.far)&&(r.fov=t,r.aspect=n,r.far=i,r.updateProjectionMatrix())}});function ph(e,t,n,i,r,a){_n.call(this,e,t),this.type="SpotLight",this.position.copy(it.DefaultUp),this.updateMatrix(),this.target=new it,Object.defineProperty(this,"power",{get:function(){return this.intensity*Math.PI},set:function(o){this.intensity=o/Math.PI}}),this.distance=n!==void 0?n:0,this.angle=i!==void 0?i:Math.PI/3,this.penumbra=r!==void 0?r:0,this.decay=a!==void 0?a:1,this.shadow=new dh}ph.prototype=Object.assign(Object.create(_n.prototype),{constructor:ph,isSpotLight:!0,copy:function(e){return _n.prototype.copy.call(this,e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}});function mh(e,t,n,i){_n.call(this,e,t),this.type="PointLight",Object.defineProperty(this,"power",{get:function(){return this.intensity*4*Math.PI},set:function(r){this.intensity=r/(4*Math.PI)}}),this.distance=n!==void 0?n:0,this.decay=i!==void 0?i:1,this.shadow=new ys(new Wn(90,1,.5,500))}mh.prototype=Object.assign(Object.create(_n.prototype),{constructor:mh,isPointLight:!0,copy:function(e){return _n.prototype.copy.call(this,e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}});function vh(e){ys.call(this,new _o(-5,5,5,-5,.5,500))}vh.prototype=Object.assign(Object.create(ys.prototype),{constructor:vh});function gh(e,t){_n.call(this,e,t),this.type="DirectionalLight",this.position.copy(it.DefaultUp),this.updateMatrix(),this.target=new it,this.shadow=new vh}gh.prototype=Object.assign(Object.create(_n.prototype),{constructor:gh,isDirectionalLight:!0,copy:function(e){return _n.prototype.copy.call(this,e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}});function _h(e,t){_n.call(this,e,t),this.type="AmbientLight",this.castShadow=void 0}_h.prototype=Object.assign(Object.create(_n.prototype),{constructor:_h,isAmbientLight:!0});var Xn={arraySlice:function(e,t,n){return Xn.isTypedArray(e)?new e.constructor(e.subarray(t,n)):e.slice(t,n)},convertArray:function(e,t,n){return!e||!n&&e.constructor===t?e:typeof t.BYTES_PER_ELEMENT=="number"?new t(e):Array.prototype.slice.call(e)},isTypedArray:function(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)},getKeyframeOrder:function(e){function t(a,o){return e[a]-e[o]}for(var n=e.length,i=new Array(n),r=0;r!==n;++r)i[r]=r;return i.sort(t),i},sortedArray:function(e,t,n){for(var i=e.length,r=new e.constructor(i),a=0,o=0;o!==i;++a)for(var l=n[a]*t,h=0;h!==t;++h)r[o++]=e[l+h];return r},flattenJSON:function(e,t,n,i){for(var r=1,a=e[0];a!==void 0&&a[i]===void 0;)a=e[r++];if(a!==void 0){var o=a[i];if(o!==void 0)if(Array.isArray(o))do o=a[i],o!==void 0&&(t.push(a.time),n.push.apply(n,o)),a=e[r++];while(a!==void 0);else if(o.toArray!==void 0)do o=a[i],o!==void 0&&(t.push(a.time),o.toArray(n,n.length)),a=e[r++];while(a!==void 0);else do o=a[i],o!==void 0&&(t.push(a.time),n.push(o)),a=e[r++];while(a!==void 0)}}};function fi(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n}fi.prototype={constructor:fi,evaluate:function(e){var t=this.parameterPositions,n=this._cachedIndex,i=t[n],r=t[n-1];e:{t:{var a;n:{i:if(!(e<i)){for(var o=n+2;;){if(i===void 0){if(e<r)break i;return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,e,r)}if(n===o)break;if(r=i,i=t[++n],e<i)break t}a=t.length;break n}if(!(e>=r)){var l=t[1];e<l&&(n=2,r=l);for(var o=n-2;;){if(r===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,i);if(n===o)break;if(i=r,r=t[--n-1],e>=r)break t}a=n,n=0;break n}break e}for(;n<a;){var h=n+a>>>1;e<t[h]?a=h:n=h+1}if(i=t[n],r=t[n-1],r===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,i);if(i===void 0)return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,r,e)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,e,i)},settings:null,DefaultSettings_:{},getSettings_:function(){return this.settings||this.DefaultSettings_},copySampleValue_:function(e){for(var t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=e*i,a=0;a!==i;++a)t[a]=n[r+a];return t},interpolate_:function(e,t,n,i){throw new Error("call to abstract method")},intervalChanged_:function(e,t,n){}};Object.assign(fi.prototype,{beforeStart_:fi.prototype.copySampleValue_,afterEnd_:fi.prototype.copySampleValue_});function xh(e,t,n,i){fi.call(this,e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0}xh.prototype=Object.assign(Object.create(fi.prototype),{constructor:xh,DefaultSettings_:{endingStart:Qa,endingEnd:Qa},intervalChanged_:function(e,t,n){var i=this.parameterPositions,r=e-2,a=e+1,o=i[r],l=i[a];if(o===void 0)switch(this.getSettings_().endingStart){case Ha:r=e,o=2*t-n;break;case Yl:r=i.length-2,o=t+i[r]-i[r+1];break;default:r=e,o=n}if(l===void 0)switch(this.getSettings_().endingEnd){case Ha:a=e,l=2*n-t;break;case Yl:a=1,l=n+i[1]-i[0];break;default:a=e-1,l=t}var h=(n-t)*.5,u=this.valueSize;this._weightPrev=h/(t-o),this._weightNext=h/(l-n),this._offsetPrev=r*u,this._offsetNext=a*u},interpolate_:function(e,t,n,i){for(var r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=e*o,h=l-o,u=this._offsetPrev,f=this._offsetNext,d=this._weightPrev,p=this._weightNext,g=(n-t)/(i-t),x=g*g,y=x*g,_=-d*y+2*d*x-d*g,v=(1+d)*y+(-1.5-2*d)*x+(-.5+d)*g+1,w=(-1-p)*y+(1.5+p)*x+.5*g,M=p*y-p*x,T=0;T!==o;++T)r[T]=_*a[u+T]+v*a[h+T]+w*a[l+T]+M*a[f+T];return r}});function Sc(e,t,n,i){fi.call(this,e,t,n,i)}Sc.prototype=Object.assign(Object.create(fi.prototype),{constructor:Sc,interpolate_:function(e,t,n,i){for(var r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=e*o,h=l-o,u=(n-t)/(i-t),f=1-u,d=0;d!==o;++d)r[d]=a[h+d]*f+a[l+d]*u;return r}});function yh(e,t,n,i){fi.call(this,e,t,n,i)}yh.prototype=Object.assign(Object.create(fi.prototype),{constructor:yh,interpolate_:function(e,t,n,i){return this.copySampleValue_(e-1)}});var Hr;Hr={TimeBufferType:Float32Array,ValueBufferType:Float32Array,DefaultInterpolation:Nl,InterpolantFactoryMethodDiscrete:function(e){return new yh(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodLinear:function(e){return new Sc(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:function(e){return new xh(this.times,this.values,this.getValueSize(),e)},setInterpolation:function(e){var t;switch(e){case Xl:t=this.InterpolantFactoryMethodDiscrete;break;case Nl:t=this.InterpolantFactoryMethodLinear;break;case Qu:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){var n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);console.warn(n);return}this.createInterpolant=t},getInterpolation:function(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Xl;case this.InterpolantFactoryMethodLinear:return Nl;case this.InterpolantFactoryMethodSmooth:return Qu}},getValueSize:function(){return this.values.length/this.times.length},shift:function(e){if(e!==0)for(var t=this.times,n=0,i=t.length;n!==i;++n)t[n]+=e;return this},scale:function(e){if(e!==1)for(var t=this.times,n=0,i=t.length;n!==i;++n)t[n]*=e;return this},trim:function(e,t){for(var n=this.times,i=n.length,r=0,a=i-1;r!==i&&n[r]<e;)++r;for(;a!==-1&&n[a]>t;)--a;if(++a,r!==0||a!==i){r>=a&&(a=Math.max(a,1),r=a-1);var o=this.getValueSize();this.times=Xn.arraySlice(n,r,a),this.values=Xn.arraySlice(this.values,r*o,a*o)}return this},validate:function(){var e=!0,t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("invalid value size in track",this),e=!1);var n=this.times,i=this.values,r=n.length;r===0&&(console.error("track is empty",this),e=!1);for(var a=null,o=0;o!==r;o++){var l=n[o];if(typeof l=="number"&&isNaN(l)){console.error("time is not a valid number",this,o,l),e=!1;break}if(a!==null&&a>l){console.error("out of order keys",this,o,l,a),e=!1;break}a=l}if(i!==void 0&&Xn.isTypedArray(i))for(var o=0,h=i.length;o!==h;++o){var u=i[o];if(isNaN(u)){console.error("value is not a valid number",this,o,u),e=!1;break}}return e},optimize:function(){for(var e=this.times,t=this.values,n=this.getValueSize(),i=this.getInterpolation()===Qu,r=1,a=e.length-1,o=1;o<a;++o){var l=!1,h=e[o],u=e[o+1];if(h!==u&&(o!==1||h!==h[0]))if(i)l=!0;else for(var f=o*n,d=f-n,p=f+n,g=0;g!==n;++g){var x=t[f+g];if(x!==t[d+g]||x!==t[p+g]){l=!0;break}}if(l){if(o!==r){e[r]=e[o];for(var y=o*n,_=r*n,g=0;g!==n;++g)t[_+g]=t[y+g]}++r}}if(a>0){e[r]=e[a];for(var y=a*n,_=r*n,g=0;g!==n;++g)t[_+g]=t[y+g];++r}return r!==e.length&&(this.times=Xn.arraySlice(e,0,r),this.values=Xn.arraySlice(t,0,r*n)),this}};function Ms(e,t,n,i){if(e===void 0)throw new Error("track name is undefined");if(t===void 0||t.length===0)throw new Error("no keyframes in track named "+e);this.name=e,this.times=Xn.convertArray(t,this.TimeBufferType),this.values=Xn.convertArray(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation),this.validate(),this.optimize()}function Go(e,t,n,i){Ms.call(this,e,t,n,i)}Go.prototype=Object.assign(Object.create(Hr),{constructor:Go,ValueTypeName:"vector"});function Mh(e,t,n,i){fi.call(this,e,t,n,i)}Mh.prototype=Object.assign(Object.create(fi.prototype),{constructor:Mh,interpolate_:function(e,t,n,i){for(var r=this.resultBuffer,a=this.sampleValues,o=this.valueSize,l=e*o,h=(n-t)/(i-t),u=l+o;l!==u;l+=4)bn.slerpFlat(r,0,a,l-o,a,l,h);return r}});function bc(e,t,n,i){Ms.call(this,e,t,n,i)}bc.prototype=Object.assign(Object.create(Hr),{constructor:bc,ValueTypeName:"quaternion",DefaultInterpolation:Nl,InterpolantFactoryMethodLinear:function(e){return new Mh(this.times,this.values,this.getValueSize(),e)},InterpolantFactoryMethodSmooth:void 0});function Ho(e,t,n,i){Ms.call(this,e,t,n,i)}Ho.prototype=Object.assign(Object.create(Hr),{constructor:Ho,ValueTypeName:"number"});function Eh(e,t,n,i){Ms.call(this,e,t,n,i)}Eh.prototype=Object.assign(Object.create(Hr),{constructor:Eh,ValueTypeName:"string",ValueBufferType:Array,DefaultInterpolation:Xl,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});function wh(e,t,n){Ms.call(this,e,t,n)}wh.prototype=Object.assign(Object.create(Hr),{constructor:wh,ValueTypeName:"bool",ValueBufferType:Array,DefaultInterpolation:Xl,InterpolantFactoryMethodLinear:void 0,InterpolantFactoryMethodSmooth:void 0});function Sh(e,t,n,i){Ms.call(this,e,t,n,i)}Sh.prototype=Object.assign(Object.create(Hr),{constructor:Sh,ValueTypeName:"color"});function ds(e,t,n,i){Ms.apply(this,arguments)}ds.prototype=Hr;Hr.constructor=ds;Object.assign(ds,{parse:function(e){if(e.type===void 0)throw new Error("track type undefined, can not parse");var t=ds._getTrackTypeForValueTypeName(e.type);if(e.times===void 0){var n=[],i=[];Xn.flattenJSON(e.keys,n,i,"value"),e.times=n,e.values=i}return t.parse!==void 0?t.parse(e):new t(e.name,e.times,e.values,e.interpolation)},toJSON:function(e){var t=e.constructor,n;if(t.toJSON!==void 0)n=t.toJSON(e);else{n={name:e.name,times:Xn.convertArray(e.times,Array),values:Xn.convertArray(e.values,Array)};var i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n},_getTrackTypeForValueTypeName:function(e){switch(e.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Ho;case"vector":case"vector2":case"vector3":case"vector4":return Go;case"color":return Sh;case"quaternion":return bc;case"bool":case"boolean":return wh;case"string":return Eh}throw new Error("Unsupported typeName: "+e)}});function Si(e,t,n){this.name=e,this.tracks=n,this.duration=t!==void 0?t:-1,this.uuid=St.generateUUID(),this.duration<0&&this.resetDuration(),this.optimize()}Si.prototype={constructor:Si,resetDuration:function(){for(var e=this.tracks,t=0,n=0,i=e.length;n!==i;++n){var r=this.tracks[n];t=Math.max(t,r.times[r.times.length-1])}this.duration=t},trim:function(){for(var e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this},optimize:function(){for(var e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}};Object.assign(Si,{parse:function(e){for(var t=[],n=e.tracks,i=1/(e.fps||1),r=0,a=n.length;r!==a;++r)t.push(ds.parse(n[r]).scale(i));return new Si(e.name,e.duration,t)},toJSON:function(e){for(var t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t},r=0,a=n.length;r!==a;++r)t.push(ds.toJSON(n[r]));return i},CreateFromMorphTargetSequence:function(e,t,n,i){for(var r=t.length,a=[],o=0;o<r;o++){var l=[],h=[];l.push((o+r-1)%r,o,(o+1)%r),h.push(0,1,0);var u=Xn.getKeyframeOrder(l);l=Xn.sortedArray(l,1,u),h=Xn.sortedArray(h,1,u),!i&&l[0]===0&&(l.push(r),h.push(h[0])),a.push(new Ho(".morphTargetInfluences["+t[o].name+"]",l,h).scale(1/n))}return new Si(e,-1,a)},findByName:function(e,t){var n=e;if(!Array.isArray(e)){var i=e;n=i.geometry&&i.geometry.animations||i.animations}for(var r=0;r<n.length;r++)if(n[r].name===t)return n[r];return null},CreateClipsFromMorphTargetSequences:function(e,t,n){for(var i={},r=/^([\w-]*?)([\d]+)$/,a=0,o=e.length;a<o;a++){var l=e[a],h=l.name.match(r);if(h&&h.length>1){var u=h[1],f=i[u];f||(i[u]=f=[]),f.push(l)}}var d=[];for(var u in i)d.push(Si.CreateFromMorphTargetSequence(u,i[u],t,n));return d},parseAnimation:function(e,t){if(!e)return console.error("  no animation in JSONLoader data"),null;for(var n=function(M,T,A,P,b){if(A.length!==0){var U=[],S=[];Xn.flattenJSON(A,U,S,P),U.length!==0&&b.push(new M(T,U,S))}},i=[],r=e.name||"default",a=e.length||-1,o=e.fps||30,l=e.hierarchy||[],h=0;h<l.length;h++){var u=l[h].keys;if(!(!u||u.length===0))if(u[0].morphTargets){for(var f={},d=0;d<u.length;d++)if(u[d].morphTargets)for(var p=0;p<u[d].morphTargets.length;p++)f[u[d].morphTargets[p]]=-1;for(var g in f){for(var x=[],y=[],p=0;p!==u[d].morphTargets.length;++p){var _=u[d];x.push(_.time),y.push(_.morphTarget===g?1:0)}i.push(new Ho(".morphTargetInfluence["+g+"]",x,y))}a=f.length*(o||1)}else{var v=".bones["+t[h].name+"]";n(Go,v+".position",u,"pos",i),n(bc,v+".quaternion",u,"rot",i),n(Go,v+".scale",u,"scl",i)}}if(i.length===0)return null;var w=new Si(r,a,i);return w}});function Yh(e){this.manager=e!==void 0?e:Li,this.textures={}}Object.assign(Yh.prototype,{load:function(e,t,n,i){var r=this,a=new Xi(r.manager);a.load(e,function(o){t(r.parse(JSON.parse(o)))},n,i)},setTextures:function(e){this.textures=e},parse:function(e){var t=this.textures;function n(l){return t[l]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",l),t[l]}var i=new NI[e.type];if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular.setHex(e.specular),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearCoat!==void 0&&(i.clearCoat=e.clearCoat),e.clearCoatRoughness!==void 0&&(i.clearCoatRoughness=e.clearCoatRoughness),e.uniforms!==void 0&&(i.uniforms=e.uniforms),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.vertexColors!==void 0&&(i.vertexColors=e.vertexColors),e.fog!==void 0&&(i.fog=e.fog),e.shading!==void 0&&(i.shading=e.shading),e.blending!==void 0&&(i.blending=e.blending),e.side!==void 0&&(i.side=e.side),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.skinning!==void 0&&(i.skinning=e.skinning),e.morphTargets!==void 0&&(i.morphTargets=e.morphTargets),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap),i.transparent=!0),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalScale!==void 0){var r=e.normalScale;Array.isArray(r)===!1&&(r=[r,r]),i.normalScale=new Ke().fromArray(r)}if(e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.materials!==void 0)for(var a=0,o=e.materials.length;a<o;a++)i.materials.push(this.parse(e.materials[a]));return i}});function tm(e){this.manager=e!==void 0?e:Li}Object.assign(tm.prototype,{load:function(e,t,n,i){var r=this,a=new Xi(r.manager);a.load(e,function(o){t(r.parse(JSON.parse(o)))},n,i)},parse:function(e){var t=new ft,n=e.data.index,i={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};if(n!==void 0){var r=new i[n.type](n.array);t.setIndex(new je(r,1))}var a=e.data.attributes;for(var o in a){var l=a[o],r=new i[l.type](l.array);t.addAttribute(o,new je(r,l.itemSize,l.normalized))}var h=e.data.groups||e.data.drawcalls||e.data.offsets;if(h!==void 0)for(var u=0,f=h.length;u!==f;++u){var d=h[u];t.addGroup(d.start,d.count,d.materialIndex)}var p=e.data.boundingSphere;if(p!==void 0){var g=new k;p.center!==void 0&&g.fromArray(p.center),t.boundingSphere=new Yn(g,p.radius)}return t}});function $a(){this.onLoadStart=function(){},this.onLoadProgress=function(){},this.onLoadComplete=function(){}}$a.prototype={constructor:$a,crossOrigin:void 0,extractUrlBase:function(e){var t=e.split("/");return t.length===1?"./":(t.pop(),t.join("/")+"/")},initMaterials:function(e,t,n){for(var i=[],r=0;r<e.length;++r)i[r]=this.createMaterial(e[r],t,n);return i},createMaterial:function(){var e,t,n;return function(r,a,o){e===void 0&&(e=new dt),t===void 0&&(t=new Xh),n===void 0&&(n=new Yh);var l={};function h(p,g,x,y,_){var v=a+p,w=$a.Handlers.get(v),M;w!==null?M=w.load(v):(t.setCrossOrigin(o),M=t.load(v)),g!==void 0&&(M.repeat.fromArray(g),g[0]!==1&&(M.wrapS=Fr),g[1]!==1&&(M.wrapT=Fr)),x!==void 0&&M.offset.fromArray(x),y!==void 0&&(y[0]==="repeat"&&(M.wrapS=Fr),y[0]==="mirror"&&(M.wrapS=Ja),y[1]==="repeat"&&(M.wrapT=Fr),y[1]==="mirror"&&(M.wrapT=Ja)),_!==void 0&&(M.anisotropy=_);var T=St.generateUUID();return l[T]=M,T}var u={uuid:St.generateUUID(),type:"MeshLambertMaterial"};for(var f in r){var d=r[f];switch(f){case"DbgColor":case"DbgIndex":case"opticalDensity":case"illumination":break;case"DbgName":u.name=d;break;case"blending":u.blending=Q0[d];break;case"colorAmbient":case"mapAmbient":console.warn("THREE.Loader.createMaterial:",f,"is no longer supported.");break;case"colorDiffuse":u.color=e.fromArray(d).getHex();break;case"colorSpecular":u.specular=e.fromArray(d).getHex();break;case"colorEmissive":u.emissive=e.fromArray(d).getHex();break;case"specularCoef":u.shininess=d;break;case"shading":d.toLowerCase()==="basic"&&(u.type="MeshBasicMaterial"),d.toLowerCase()==="phong"&&(u.type="MeshPhongMaterial"),d.toLowerCase()==="standard"&&(u.type="MeshStandardMaterial");break;case"mapDiffuse":u.map=h(d,r.mapDiffuseRepeat,r.mapDiffuseOffset,r.mapDiffuseWrap,r.mapDiffuseAnisotropy);break;case"mapDiffuseRepeat":case"mapDiffuseOffset":case"mapDiffuseWrap":case"mapDiffuseAnisotropy":break;case"mapEmissive":u.emissiveMap=h(d,r.mapEmissiveRepeat,r.mapEmissiveOffset,r.mapEmissiveWrap,r.mapEmissiveAnisotropy);break;case"mapEmissiveRepeat":case"mapEmissiveOffset":case"mapEmissiveWrap":case"mapEmissiveAnisotropy":break;case"mapLight":u.lightMap=h(d,r.mapLightRepeat,r.mapLightOffset,r.mapLightWrap,r.mapLightAnisotropy);break;case"mapLightRepeat":case"mapLightOffset":case"mapLightWrap":case"mapLightAnisotropy":break;case"mapAO":u.aoMap=h(d,r.mapAORepeat,r.mapAOOffset,r.mapAOWrap,r.mapAOAnisotropy);break;case"mapAORepeat":case"mapAOOffset":case"mapAOWrap":case"mapAOAnisotropy":break;case"mapBump":u.bumpMap=h(d,r.mapBumpRepeat,r.mapBumpOffset,r.mapBumpWrap,r.mapBumpAnisotropy);break;case"mapBumpScale":u.bumpScale=d;break;case"mapBumpRepeat":case"mapBumpOffset":case"mapBumpWrap":case"mapBumpAnisotropy":break;case"mapNormal":u.normalMap=h(d,r.mapNormalRepeat,r.mapNormalOffset,r.mapNormalWrap,r.mapNormalAnisotropy);break;case"mapNormalFactor":u.normalScale=[d,d];break;case"mapNormalRepeat":case"mapNormalOffset":case"mapNormalWrap":case"mapNormalAnisotropy":break;case"mapSpecular":u.specularMap=h(d,r.mapSpecularRepeat,r.mapSpecularOffset,r.mapSpecularWrap,r.mapSpecularAnisotropy);break;case"mapSpecularRepeat":case"mapSpecularOffset":case"mapSpecularWrap":case"mapSpecularAnisotropy":break;case"mapMetalness":u.metalnessMap=h(d,r.mapMetalnessRepeat,r.mapMetalnessOffset,r.mapMetalnessWrap,r.mapMetalnessAnisotropy);break;case"mapMetalnessRepeat":case"mapMetalnessOffset":case"mapMetalnessWrap":case"mapMetalnessAnisotropy":break;case"mapRoughness":u.roughnessMap=h(d,r.mapRoughnessRepeat,r.mapRoughnessOffset,r.mapRoughnessWrap,r.mapRoughnessAnisotropy);break;case"mapRoughnessRepeat":case"mapRoughnessOffset":case"mapRoughnessWrap":case"mapRoughnessAnisotropy":break;case"mapAlpha":u.alphaMap=h(d,r.mapAlphaRepeat,r.mapAlphaOffset,r.mapAlphaWrap,r.mapAlphaAnisotropy);break;case"mapAlphaRepeat":case"mapAlphaOffset":case"mapAlphaWrap":case"mapAlphaAnisotropy":break;case"flipSided":u.side=pa;break;case"doubleSided":u.side=il;break;case"transparency":console.warn("THREE.Loader.createMaterial: transparency has been renamed to opacity"),u.opacity=d;break;case"depthTest":case"depthWrite":case"colorWrite":case"opacity":case"reflectivity":case"transparent":case"visible":case"wireframe":u[f]=d;break;case"vertexColors":d===!0&&(u.vertexColors=xs),d==="face"&&(u.vertexColors=Fp);break;default:console.error("THREE.Loader.createMaterial: Unsupported",f,d);break}}return u.type==="MeshBasicMaterial"&&delete u.emissive,u.type!=="MeshPhongMaterial"&&delete u.specular,u.opacity<1&&(u.transparent=!0),n.setTextures(l),n.parse(u)}}()};$a.Handlers={handlers:[],add:function(e,t){this.handlers.push(e,t)},get:function(e){for(var t=this.handlers,n=0,i=t.length;n<i;n+=2){var r=t[n],a=t[n+1];if(r.test(e))return a}return null}};function nm(e){typeof e=="boolean"&&(console.warn("THREE.JSONLoader: showStatus parameter has been removed from constructor."),e=void 0),this.manager=e!==void 0?e:Li,this.withCredentials=!1}Object.assign(nm.prototype,{load:function(e,t,n,i){var r=this,a=this.texturePath&&typeof this.texturePath=="string"?this.texturePath:$a.prototype.extractUrlBase(e),o=new Xi(this.manager);o.setWithCredentials(this.withCredentials),o.load(e,function(l){var h=JSON.parse(l),u=h.metadata;if(u!==void 0){var f=u.type;if(f!==void 0){if(f.toLowerCase()==="object"){console.error("THREE.JSONLoader: "+e+" should be loaded with THREE.ObjectLoader instead.");return}if(f.toLowerCase()==="scene"){console.error("THREE.JSONLoader: "+e+" should be loaded with THREE.SceneLoader instead.");return}}}var d=r.parse(h,a);t(d.geometry,d.materials)},n,i)},setTexturePath:function(e){this.texturePath=e},parse:function(e,t){var n=new Mt,i=e.scale!==void 0?1/e.scale:1;r(i),a(),o(i),l(),n.computeFaceNormals(),n.computeBoundingSphere();function r(u){function f(Pe,we){return Pe&1<<we}var d,p,g,x,y,_,v,w,M,T,A,P,b,U,S,R,V,W,L,I,z,X,Y,$,ne,ae,j,K=e.faces,Q=e.vertices,he=e.normals,me=e.colors,ge=0;if(e.uvs!==void 0){for(d=0;d<e.uvs.length;d++)e.uvs[d].length&&ge++;for(d=0;d<ge;d++)n.faceVertexUvs[d]=[]}for(x=0,y=Q.length;x<y;)W=new k,W.x=Q[x++]*u,W.y=Q[x++]*u,W.z=Q[x++]*u,n.vertices.push(W);for(x=0,y=K.length;x<y;)if(T=K[x++],A=f(T,0),P=f(T,1),b=f(T,3),U=f(T,4),S=f(T,5),R=f(T,6),V=f(T,7),A){if(I=new Ri,I.a=K[x],I.b=K[x+1],I.c=K[x+3],z=new Ri,z.a=K[x+1],z.b=K[x+2],z.c=K[x+3],x+=4,P&&(M=K[x++],I.materialIndex=M,z.materialIndex=M),g=n.faces.length,b)for(d=0;d<ge;d++)for($=e.uvs[d],n.faceVertexUvs[d][g]=[],n.faceVertexUvs[d][g+1]=[],p=0;p<4;p++)w=K[x++],ae=$[w*2],j=$[w*2+1],ne=new Ke(ae,j),p!==2&&n.faceVertexUvs[d][g].push(ne),p!==0&&n.faceVertexUvs[d][g+1].push(ne);if(U&&(v=K[x++]*3,I.normal.set(he[v++],he[v++],he[v]),z.normal.copy(I.normal)),S)for(d=0;d<4;d++)v=K[x++]*3,Y=new k(he[v++],he[v++],he[v]),d!==2&&I.vertexNormals.push(Y),d!==0&&z.vertexNormals.push(Y);if(R&&(_=K[x++],X=me[_],I.color.setHex(X),z.color.setHex(X)),V)for(d=0;d<4;d++)_=K[x++],X=me[_],d!==2&&I.vertexColors.push(new dt(X)),d!==0&&z.vertexColors.push(new dt(X));n.faces.push(I),n.faces.push(z)}else{if(L=new Ri,L.a=K[x++],L.b=K[x++],L.c=K[x++],P&&(M=K[x++],L.materialIndex=M),g=n.faces.length,b)for(d=0;d<ge;d++)for($=e.uvs[d],n.faceVertexUvs[d][g]=[],p=0;p<3;p++)w=K[x++],ae=$[w*2],j=$[w*2+1],ne=new Ke(ae,j),n.faceVertexUvs[d][g].push(ne);if(U&&(v=K[x++]*3,L.normal.set(he[v++],he[v++],he[v])),S)for(d=0;d<3;d++)v=K[x++]*3,Y=new k(he[v++],he[v++],he[v]),L.vertexNormals.push(Y);if(R&&(_=K[x++],L.color.setHex(me[_])),V)for(d=0;d<3;d++)_=K[x++],L.vertexColors.push(new dt(me[_]));n.faces.push(L)}}function a(){var u=e.influencesPerVertex!==void 0?e.influencesPerVertex:2;if(e.skinWeights)for(var f=0,d=e.skinWeights.length;f<d;f+=u){var p=e.skinWeights[f],g=u>1?e.skinWeights[f+1]:0,x=u>2?e.skinWeights[f+2]:0,y=u>3?e.skinWeights[f+3]:0;n.skinWeights.push(new Kt(p,g,x,y))}if(e.skinIndices)for(var f=0,d=e.skinIndices.length;f<d;f+=u){var _=e.skinIndices[f],v=u>1?e.skinIndices[f+1]:0,w=u>2?e.skinIndices[f+2]:0,M=u>3?e.skinIndices[f+3]:0;n.skinIndices.push(new Kt(_,v,w,M))}n.bones=e.bones,n.bones&&n.bones.length>0&&(n.skinWeights.length!==n.skinIndices.length||n.skinIndices.length!==n.vertices.length)&&console.warn("When skinning, number of vertices ("+n.vertices.length+"), skinIndices ("+n.skinIndices.length+"), and skinWeights ("+n.skinWeights.length+") should match.")}function o(u){if(e.morphTargets!==void 0)for(var f=0,d=e.morphTargets.length;f<d;f++){n.morphTargets[f]={},n.morphTargets[f].name=e.morphTargets[f].name,n.morphTargets[f].vertices=[];for(var p=n.morphTargets[f].vertices,g=e.morphTargets[f].vertices,x=0,y=g.length;x<y;x+=3){var _=new k;_.x=g[x]*u,_.y=g[x+1]*u,_.z=g[x+2]*u,p.push(_)}}if(e.morphColors!==void 0&&e.morphColors.length>0){console.warn('THREE.JSONLoader: "morphColors" no longer supported. Using them as face colors.');for(var v=n.faces,w=e.morphColors[0].colors,f=0,d=v.length;f<d;f++)v[f].color.fromArray(w,f*3)}}function l(){var u=[],f=[];e.animation!==void 0&&f.push(e.animation),e.animations!==void 0&&(e.animations.length?f=f.concat(e.animations):f.push(e.animations));for(var d=0;d<f.length;d++){var p=Si.parseAnimation(f[d],n.bones);p&&u.push(p)}if(n.morphTargets){var g=Si.CreateClipsFromMorphTargetSequences(n.morphTargets,10);u=u.concat(g)}u.length>0&&(n.animations=u)}if(e.materials===void 0||e.materials.length===0)return{geometry:n};var h=$a.prototype.initMaterials(e.materials,t,this.crossOrigin);return{geometry:n,materials:h}}});function ry(e){this.manager=e!==void 0?e:Li,this.texturePath=""}Object.assign(ry.prototype,{load:function(e,t,n,i){this.texturePath===""&&(this.texturePath=e.substring(0,e.lastIndexOf("/")+1));var r=this,a=new Xi(r.manager);a.load(e,function(o){var l=null;try{l=JSON.parse(o)}catch(u){console.error("THREE:ObjectLoader: Can't parse "+e+".",u.message);return}var h=l.metadata;if(h===void 0||h.type===void 0||h.type.toLowerCase()==="geometry"){console.error("THREE.ObjectLoader: Can't load "+e+". Use THREE.JSONLoader instead.");return}r.parse(l,t)},n,i)},setTexturePath:function(e){this.texturePath=e},setCrossOrigin:function(e){this.crossOrigin=e},parse:function(e,t){var n=this.parseGeometries(e.geometries),i=this.parseImages(e.images,function(){t!==void 0&&t(o)}),r=this.parseTextures(e.textures,i),a=this.parseMaterials(e.materials,r),o=this.parseObject(e.object,n,a);return e.animations&&(o.animations=this.parseAnimations(e.animations)),(e.images===void 0||e.images.length===0)&&t!==void 0&&t(o),o},parseGeometries:function(e){var t={};if(e!==void 0)for(var n=new nm,i=new tm,r=0,a=e.length;r<a;r++){var o,l=e[r];switch(l.type){case"PlaneGeometry":case"PlaneBufferGeometry":o=new er[l.type](l.width,l.height,l.widthSegments,l.heightSegments);break;case"BoxGeometry":case"BoxBufferGeometry":case"CubeGeometry":o=new er[l.type](l.width,l.height,l.depth,l.widthSegments,l.heightSegments,l.depthSegments);break;case"CircleGeometry":case"CircleBufferGeometry":o=new er[l.type](l.radius,l.segments,l.thetaStart,l.thetaLength);break;case"CylinderGeometry":case"CylinderBufferGeometry":o=new er[l.type](l.radiusTop,l.radiusBottom,l.height,l.radialSegments,l.heightSegments,l.openEnded,l.thetaStart,l.thetaLength);break;case"ConeGeometry":case"ConeBufferGeometry":o=new er[l.type](l.radius,l.height,l.radialSegments,l.heightSegments,l.openEnded,l.thetaStart,l.thetaLength);break;case"SphereGeometry":case"SphereBufferGeometry":o=new er[l.type](l.radius,l.widthSegments,l.heightSegments,l.phiStart,l.phiLength,l.thetaStart,l.thetaLength);break;case"DodecahedronGeometry":case"IcosahedronGeometry":case"OctahedronGeometry":case"TetrahedronGeometry":o=new er[l.type](l.radius,l.detail);break;case"RingGeometry":case"RingBufferGeometry":o=new er[l.type](l.innerRadius,l.outerRadius,l.thetaSegments,l.phiSegments,l.thetaStart,l.thetaLength);break;case"TorusGeometry":case"TorusBufferGeometry":o=new er[l.type](l.radius,l.tube,l.radialSegments,l.tubularSegments,l.arc);break;case"TorusKnotGeometry":case"TorusKnotBufferGeometry":o=new er[l.type](l.radius,l.tube,l.tubularSegments,l.radialSegments,l.p,l.q);break;case"LatheGeometry":case"LatheBufferGeometry":o=new er[l.type](l.points,l.segments,l.phiStart,l.phiLength);break;case"BufferGeometry":o=i.parse(l);break;case"Geometry":o=n.parse(l.data,this.texturePath).geometry;break;default:console.warn('THREE.ObjectLoader: Unsupported geometry type "'+l.type+'"');continue}o.uuid=l.uuid,l.name!==void 0&&(o.name=l.name),t[l.uuid]=o}return t},parseMaterials:function(e,t){var n={};if(e!==void 0){var i=new Yh;i.setTextures(t);for(var r=0,a=e.length;r<a;r++){var o=i.parse(e[r]);n[o.uuid]=o}}return n},parseAnimations:function(e){for(var t=[],n=0;n<e.length;n++){var i=Si.parse(e[n]);t.push(i)}return t},parseImages:function(e,t){var n=this,i={};function r(d){return n.manager.itemStart(d),o.load(d,function(){n.manager.itemEnd(d)},void 0,function(){n.manager.itemError(d)})}if(e!==void 0&&e.length>0){var a=new Jp(t),o=new Oc(a);o.setCrossOrigin(this.crossOrigin);for(var l=0,h=e.length;l<h;l++){var u=e[l],f=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(u.url)?u.url:n.texturePath+u.url;i[u.uuid]=r(f)}}return i},parseTextures:function(e,t){function n(h,u){return typeof h=="number"?h:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",h),u[h])}var i={};if(e!==void 0)for(var r=0,a=e.length;r<a;r++){var o=e[r];o.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',o.uuid),t[o.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",o.image);var l=new nn(t[o.image]);l.needsUpdate=!0,l.uuid=o.uuid,o.name!==void 0&&(l.name=o.name),o.mapping!==void 0&&(l.mapping=n(o.mapping,wx)),o.offset!==void 0&&l.offset.fromArray(o.offset),o.repeat!==void 0&&l.repeat.fromArray(o.repeat),o.wrap!==void 0&&(l.wrapS=n(o.wrap[0],Jd),l.wrapT=n(o.wrap[1],Jd)),o.minFilter!==void 0&&(l.minFilter=n(o.minFilter,Qd)),o.magFilter!==void 0&&(l.magFilter=n(o.magFilter,Qd)),o.anisotropy!==void 0&&(l.anisotropy=o.anisotropy),o.flipY!==void 0&&(l.flipY=o.flipY),i[o.uuid]=l}return i},parseObject:function(){var e=new xt;return function(n,i,r){var a;function o(x){return i[x]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",x),i[x]}function l(x){if(x!==void 0)return r[x]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",x),r[x]}switch(n.type){case"Scene":a=new is,n.background!==void 0&&Number.isInteger(n.background)&&(a.background=new dt(n.background)),n.fog!==void 0&&(n.fog.type==="Fog"?a.fog=new yo(n.fog.color,n.fog.near,n.fog.far):n.fog.type==="FogExp2"&&(a.fog=new xo(n.fog.color,n.fog.density)));break;case"PerspectiveCamera":a=new Wn(n.fov,n.aspect,n.near,n.far),n.focus!==void 0&&(a.focus=n.focus),n.zoom!==void 0&&(a.zoom=n.zoom),n.filmGauge!==void 0&&(a.filmGauge=n.filmGauge),n.filmOffset!==void 0&&(a.filmOffset=n.filmOffset),n.view!==void 0&&(a.view=Object.assign({},n.view));break;case"OrthographicCamera":a=new _o(n.left,n.right,n.top,n.bottom,n.near,n.far);break;case"AmbientLight":a=new _h(n.color,n.intensity);break;case"DirectionalLight":a=new gh(n.color,n.intensity);break;case"PointLight":a=new mh(n.color,n.intensity,n.distance,n.decay);break;case"SpotLight":a=new ph(n.color,n.intensity,n.distance,n.angle,n.penumbra,n.decay);break;case"HemisphereLight":a=new fh(n.color,n.groundColor,n.intensity);break;case"Mesh":var h=o(n.geometry),u=l(n.material);h.bones&&h.bones.length>0?a=new ch(h,u):a=new Pn(h,u);break;case"LOD":a=new ic;break;case"Line":a=new Br(o(n.geometry),l(n.material),n.mode);break;case"LineSegments":a=new on(o(n.geometry),l(n.material));break;case"PointCloud":case"Points":a=new Mo(o(n.geometry),l(n.material));break;case"Sprite":a=new nc(l(n.material));break;case"Group":a=new rc;break;case"SkinnedMesh":console.warn("THREE.ObjectLoader.parseObject() does not support SkinnedMesh type. Instantiates Object3D instead.");default:a=new it}if(a.uuid=n.uuid,n.name!==void 0&&(a.name=n.name),n.matrix!==void 0?(e.fromArray(n.matrix),e.decompose(a.position,a.quaternion,a.scale)):(n.position!==void 0&&a.position.fromArray(n.position),n.rotation!==void 0&&a.rotation.fromArray(n.rotation),n.quaternion!==void 0&&a.quaternion.fromArray(n.quaternion),n.scale!==void 0&&a.scale.fromArray(n.scale)),n.castShadow!==void 0&&(a.castShadow=n.castShadow),n.receiveShadow!==void 0&&(a.receiveShadow=n.receiveShadow),n.shadow&&(n.shadow.bias!==void 0&&(a.shadow.bias=n.shadow.bias),n.shadow.radius!==void 0&&(a.shadow.radius=n.shadow.radius),n.shadow.mapSize!==void 0&&a.shadow.mapSize.fromArray(n.shadow.mapSize),n.shadow.camera!==void 0&&(a.shadow.camera=this.parseObject(n.shadow.camera))),n.visible!==void 0&&(a.visible=n.visible),n.userData!==void 0&&(a.userData=n.userData),n.children!==void 0)for(var f in n.children)a.add(this.parseObject(n.children[f],i,r));if(n.type==="LOD")for(var d=n.levels,p=0;p<d.length;p++){var g=d[p],f=a.getObjectByProperty("uuid",g.object);f!==void 0&&a.addLevel(f,g.distance)}return a}}()});function $n(){}$n.prototype={constructor:$n,getPoint:function(e){return console.warn("THREE.Curve: Warning, getPoint() not implemented!"),null},getPointAt:function(e){var t=this.getUtoTmapping(e);return this.getPoint(t)},getPoints:function(e){e||(e=5);for(var t=[],n=0;n<=e;n++)t.push(this.getPoint(n/e));return t},getSpacedPoints:function(e){e||(e=5);for(var t=[],n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t},getLength:function(){var e=this.getLengths();return e[e.length-1]},getLengths:function(e){if(e||(e=this.__arcLengthDivisions?this.__arcLengthDivisions:200),this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;var t=[],n,i=this.getPoint(0),r,a=0;for(t.push(0),r=1;r<=e;r++)n=this.getPoint(r/e),a+=n.distanceTo(i),t.push(a),i=n;return this.cacheArcLengths=t,t},updateArcLengths:function(){this.needsUpdate=!0,this.getLengths()},getUtoTmapping:function(e,t){var n=this.getLengths(),i=0,r=n.length,a;t?a=t:a=e*n[r-1];for(var o=0,l=r-1,h;o<=l;)if(i=Math.floor(o+(l-o)/2),h=n[i]-a,h<0)o=i+1;else if(h>0)l=i-1;else{l=i;break}if(i=l,n[i]===a){var g=i/(r-1);return g}var u=n[i],f=n[i+1],d=f-u,p=(a-u)/d,g=(i+p)/(r-1);return g},getTangent:function(e){var t=1e-4,n=e-t,i=e+t;n<0&&(n=0),i>1&&(i=1);var r=this.getPoint(n),a=this.getPoint(i),o=a.clone().sub(r);return o.normalize()},getTangentAt:function(e){var t=this.getUtoTmapping(e);return this.getTangent(t)},computeFrenetFrames:function(e,t){var n=new k,i=[],r=[],a=[],o=new k,l=new xt,h,u,f;for(h=0;h<=e;h++)u=h/e,i[h]=this.getTangentAt(u),i[h].normalize();r[0]=new k,a[0]=new k;var d=Number.MAX_VALUE,p=Math.abs(i[0].x),g=Math.abs(i[0].y),x=Math.abs(i[0].z);for(p<=d&&(d=p,n.set(1,0,0)),g<=d&&(d=g,n.set(0,1,0)),x<=d&&n.set(0,0,1),o.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],o),a[0].crossVectors(i[0],r[0]),h=1;h<=e;h++)r[h]=r[h-1].clone(),a[h]=a[h-1].clone(),o.crossVectors(i[h-1],i[h]),o.length()>Number.EPSILON&&(o.normalize(),f=Math.acos(St.clamp(i[h-1].dot(i[h]),-1,1)),r[h].applyMatrix4(l.makeRotationAxis(o,f))),a[h].crossVectors(i[h],r[h]);if(t===!0)for(f=Math.acos(St.clamp(r[0].dot(r[e]),-1,1)),f/=e,i[0].dot(o.crossVectors(r[0],r[e]))>0&&(f=-f),h=1;h<=e;h++)r[h].applyMatrix4(l.makeRotationAxis(i[h],f*h)),a[h].crossVectors(i[h],r[h]);return{tangents:i,normals:r,binormals:a}}};$n.create=function(e,t){return e.prototype=Object.create($n.prototype),e.prototype.constructor=e,e.prototype.getPoint=t,e};function mr(e,t){this.v1=e,this.v2=t}mr.prototype=Object.create($n.prototype);mr.prototype.constructor=mr;mr.prototype.isLineCurve=!0;mr.prototype.getPoint=function(e){if(e===1)return this.v2.clone();var t=this.v2.clone().sub(this.v1);return t.multiplyScalar(e).add(this.v1),t};mr.prototype.getPointAt=function(e){return this.getPoint(e)};mr.prototype.getTangent=function(e){var t=this.v2.clone().sub(this.v1);return t.normalize()};function Tc(){this.curves=[],this.autoClose=!1}Tc.prototype=Object.assign(Object.create($n.prototype),{constructor:Tc,add:function(e){this.curves.push(e)},closePath:function(){var e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new mr(t,e))},getPoint:function(e){for(var t=e*this.getLength(),n=this.getCurveLengths(),i=0;i<n.length;){if(n[i]>=t){var r=n[i]-t,a=this.curves[i],o=a.getLength(),l=o===0?0:1-r/o;return a.getPointAt(l)}i++}return null},getLength:function(){var e=this.getCurveLengths();return e[e.length-1]},updateArcLengths:function(){this.needsUpdate=!0,this.cacheLengths=null,this.getLengths()},getCurveLengths:function(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;for(var e=[],t=0,n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e},getSpacedPoints:function(e){e||(e=40);for(var t=[],n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t},getPoints:function(e){e=e||12;for(var t=[],n,i=0,r=this.curves;i<r.length;i++)for(var a=r[i],o=a&&a.isEllipseCurve?e*2:a&&a.isLineCurve?1:a&&a.isSplineCurve?e*a.points.length:e,l=a.getPoints(o),h=0;h<l.length;h++){var u=l[h];n&&n.equals(u)||(t.push(u),n=u)}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t},createPointsGeometry:function(e){var t=this.getPoints(e);return this.createGeometry(t)},createSpacedPointsGeometry:function(e){var t=this.getSpacedPoints(e);return this.createGeometry(t)},createGeometry:function(e){for(var t=new Mt,n=0,i=e.length;n<i;n++){var r=e[n];t.vertices.push(new k(r.x,r.y,r.z||0))}return t}});function Gr(e,t,n,i,r,a,o,l){this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=a,this.aClockwise=o,this.aRotation=l||0}Gr.prototype=Object.create($n.prototype);Gr.prototype.constructor=Gr;Gr.prototype.isEllipseCurve=!0;Gr.prototype.getPoint=function(e){for(var t=Math.PI*2,n=this.aEndAngle-this.aStartAngle,i=Math.abs(n)<Number.EPSILON;n<0;)n+=t;for(;n>t;)n-=t;n<Number.EPSILON&&(i?n=0:n=t),this.aClockwise===!0&&!i&&(n===t?n=-t:n=n-t);var r=this.aStartAngle+e*n,a=this.aX+this.xRadius*Math.cos(r),o=this.aY+this.yRadius*Math.sin(r);if(this.aRotation!==0){var l=Math.cos(this.aRotation),h=Math.sin(this.aRotation),u=a-this.aX,f=o-this.aY;a=u*l-f*h+this.aX,o=u*h+f*l+this.aY}return new Ke(a,o)};var Bc={tangentQuadraticBezier:function(e,t,n,i){return 2*(1-e)*(n-t)+2*e*(i-n)},tangentCubicBezier:function(e,t,n,i,r){return-3*t*(1-e)*(1-e)+3*n*(1-e)*(1-e)-6*e*n*(1-e)+6*e*i*(1-e)-3*e*e*i+3*e*e*r},tangentSpline:function(e,t,n,i,r){var a=6*e*e-6*e,o=3*e*e-4*e+1,l=-6*e*e+6*e,h=3*e*e-2*e;return a+o+l+h},interpolate:function(e,t,n,i,r){var a=(n-e)*.5,o=(i-t)*.5,l=r*r,h=r*l;return(2*t-2*n+a+o)*h+(-3*t+3*n-2*a-o)*l+a*r+t}};function ps(e){this.points=e===void 0?[]:e}ps.prototype=Object.create($n.prototype);ps.prototype.constructor=ps;ps.prototype.isSplineCurve=!0;ps.prototype.getPoint=function(e){var t=this.points,n=(t.length-1)*e,i=Math.floor(n),r=n-i,a=t[i===0?i:i-1],o=t[i],l=t[i>t.length-2?t.length-1:i+1],h=t[i>t.length-3?t.length-1:i+2],u=Bc.interpolate;return new Ke(u(a.x,o.x,l.x,h.x,r),u(a.y,o.y,l.y,h.y,r))};function ms(e,t,n,i){this.v0=e,this.v1=t,this.v2=n,this.v3=i}ms.prototype=Object.create($n.prototype);ms.prototype.constructor=ms;ms.prototype.getPoint=function(e){var t=Fn.b3;return new Ke(t(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),t(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y))};ms.prototype.getTangent=function(e){var t=Bc.tangentCubicBezier;return new Ke(t(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),t(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y)).normalize()};function vs(e,t,n){this.v0=e,this.v1=t,this.v2=n}vs.prototype=Object.create($n.prototype);vs.prototype.constructor=vs;vs.prototype.getPoint=function(e){var t=Fn.b2;return new Ke(t(e,this.v0.x,this.v1.x,this.v2.x),t(e,this.v0.y,this.v1.y,this.v2.y))};vs.prototype.getTangent=function(e){var t=Bc.tangentQuadraticBezier;return new Ke(t(e,this.v0.x,this.v1.x,this.v2.x),t(e,this.v0.y,this.v1.y,this.v2.y)).normalize()};var im=Object.assign(Object.create(Tc.prototype),{fromPoints:function(e){this.moveTo(e[0].x,e[0].y);for(var t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y)},moveTo:function(e,t){this.currentPoint.set(e,t)},lineTo:function(e,t){var n=new mr(this.currentPoint.clone(),new Ke(e,t));this.curves.push(n),this.currentPoint.set(e,t)},quadraticCurveTo:function(e,t,n,i){var r=new vs(this.currentPoint.clone(),new Ke(e,t),new Ke(n,i));this.curves.push(r),this.currentPoint.set(n,i)},bezierCurveTo:function(e,t,n,i,r,a){var o=new ms(this.currentPoint.clone(),new Ke(e,t),new Ke(n,i),new Ke(r,a));this.curves.push(o),this.currentPoint.set(r,a)},splineThru:function(e){var t=[this.currentPoint.clone()].concat(e),n=new ps(t);this.curves.push(n),this.currentPoint.copy(e[e.length-1])},arc:function(e,t,n,i,r,a){var o=this.currentPoint.x,l=this.currentPoint.y;this.absarc(e+o,t+l,n,i,r,a)},absarc:function(e,t,n,i,r,a){this.absellipse(e,t,n,n,i,r,a)},ellipse:function(e,t,n,i,r,a,o,l){var h=this.currentPoint.x,u=this.currentPoint.y;this.absellipse(e+h,t+u,n,i,r,a,o,l)},absellipse:function(e,t,n,i,r,a,o,l){var h=new Gr(e,t,n,i,r,a,o,l);if(this.curves.length>0){var u=h.getPoint(0);u.equals(this.currentPoint)||this.lineTo(u.x,u.y)}this.curves.push(h);var f=h.getPoint(1);this.currentPoint.copy(f)}});function ja(){zc.apply(this,arguments),this.holes=[]}ja.prototype=Object.assign(Object.create(im),{constructor:ja,getPointsHoles:function(e){for(var t=[],n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t},extractAllPoints:function(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}},extractPoints:function(e){return this.extractAllPoints(e)}});function zc(e){Tc.call(this),this.currentPoint=new Ke,e&&this.fromPoints(e)}zc.prototype=im;im.constructor=zc;function rm(){this.subPaths=[],this.currentPath=null}rm.prototype={moveTo:function(e,t){this.currentPath=new zc,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t)},lineTo:function(e,t){this.currentPath.lineTo(e,t)},quadraticCurveTo:function(e,t,n,i){this.currentPath.quadraticCurveTo(e,t,n,i)},bezierCurveTo:function(e,t,n,i,r,a){this.currentPath.bezierCurveTo(e,t,n,i,r,a)},splineThru:function(e){this.currentPath.splineThru(e)},toShapes:function(e,t){function n(z){for(var X=[],Y=0,$=z.length;Y<$;Y++){var ne=z[Y],ae=new ja;ae.curves=ne.curves,X.push(ae)}return X}function i(z,X){for(var Y=X.length,$=!1,ne=Y-1,ae=0;ae<Y;ne=ae++){var j=X[ne],K=X[ae],Q=K.x-j.x,he=K.y-j.y;if(Math.abs(he)>Number.EPSILON){if(he<0&&(j=X[ae],Q=-Q,K=X[ne],he=-he),z.y<j.y||z.y>K.y)continue;if(z.y===j.y){if(z.x===j.x)return!0}else{var me=he*(z.x-j.x)-Q*(z.y-j.y);if(me===0)return!0;if(me<0)continue;$=!$}}else{if(z.y!==j.y)continue;if(K.x<=z.x&&z.x<=j.x||j.x<=z.x&&z.x<=K.x)return!0}}return $}var r=Fn.isClockWise,a=this.subPaths;if(a.length===0)return[];if(t===!0)return n(a);var o,l,h,u=[];if(a.length===1)return l=a[0],h=new ja,h.curves=l.curves,u.push(h),u;var f=!r(a[0].getPoints());f=e?!f:f;var d=[],p=[],g=[],x=0,y;p[x]=void 0,g[x]=[];for(var _=0,v=a.length;_<v;_++)l=a[_],y=l.getPoints(),o=r(y),o=e?!o:o,o?(!f&&p[x]&&x++,p[x]={s:new ja,p:y},p[x].s.curves=l.curves,f&&x++,g[x]=[]):g[x].push({h:l,p:y[0]});if(!p[0])return n(a);if(p.length>1){for(var w=!1,M=[],T=0,A=p.length;T<A;T++)d[T]=[];for(var T=0,A=p.length;T<A;T++)for(var P=g[T],b=0;b<P.length;b++){for(var U=P[b],S=!0,R=0;R<p.length;R++)i(U.p,p[R].p)&&(T!==R&&M.push({froms:T,tos:R,hole:b}),S?(S=!1,d[R].push(U)):w=!0);S&&d[T].push(U)}M.length>0&&(w||(g=d))}for(var V,_=0,W=p.length;_<W;_++){h=p[_].s,u.push(h),V=g[_];for(var L=0,I=V.length;L<I;L++)h.holes.push(V[L].h)}return u}};function am(e){this.data=e}Object.assign(am.prototype,{isFont:!0,generateShapes:function(e,t,n){function i(f){for(var d=String(f).split(""),p=t/a.resolution,g=0,x=[],y=0;y<d.length;y++){var _=r(d[y],p,g);g+=_.offset,x.push(_.path)}return x}function r(f,d,p){var g=a.glyphs[f]||a.glyphs["?"];if(g){var x=new rm,y=[],_=Fn.b2,v=Fn.b3,w,M,T,A,P,b,U,S,R,V,W;if(g.o)for(var L=g._cachedOutline||(g._cachedOutline=g.o.split(" ")),I=0,z=L.length;I<z;){var X=L[I++];switch(X){case"m":w=L[I++]*d+p,M=L[I++]*d,x.moveTo(w,M);break;case"l":w=L[I++]*d+p,M=L[I++]*d,x.lineTo(w,M);break;case"q":if(T=L[I++]*d+p,A=L[I++]*d,U=L[I++]*d+p,S=L[I++]*d,x.quadraticCurveTo(U,S,T,A),W=y[y.length-1],W){P=W.x,b=W.y;for(var Y=1;Y<=n;Y++){var $=Y/n;_($,P,U,T),_($,b,S,A)}}break;case"b":if(T=L[I++]*d+p,A=L[I++]*d,U=L[I++]*d+p,S=L[I++]*d,R=L[I++]*d+p,V=L[I++]*d,x.bezierCurveTo(U,S,R,V,T,A),W=y[y.length-1],W){P=W.x,b=W.y;for(var Y=1;Y<=n;Y++){var $=Y/n;v($,P,U,R,T),v($,b,S,V,A)}}break}}return{offset:g.ha*d,path:x}}}t===void 0&&(t=100),n===void 0&&(n=4);for(var a=this.data,o=i(e),l=[],h=0,u=o.length;h<u;h++)Array.prototype.push.apply(l,o[h].toShapes());return l}});function ay(e){this.manager=e!==void 0?e:Li}Object.assign(ay.prototype,{load:function(e,t,n,i){var r=this,a=new Xi(this.manager);a.load(e,function(o){var l;try{l=JSON.parse(o)}catch{console.warn("THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead."),l=JSON.parse(o.substring(65,o.length-2))}var h=r.parse(l);t&&t(h)},n,i)},parse:function(e){return new am(e)}});var $u,sm={getContext:function(){return $u===void 0&&($u=new(window.AudioContext||window.webkitAudioContext)),$u},setContext:function(e){$u=e}};function om(e){this.manager=e!==void 0?e:Li}Object.assign(om.prototype,{load:function(e,t,n,i){var r=new Xi(this.manager);r.setResponseType("arraybuffer"),r.load(e,function(a){var o=sm.getContext();o.decodeAudioData(a,function(l){t(l)})},n,i)}});function hp(e,t,n,i){_n.call(this,e,t),this.type="RectAreaLight",this.position.set(0,1,0),this.updateMatrix(),this.width=n!==void 0?n:10,this.height=i!==void 0?i:10}hp.prototype=Object.assign(Object.create(_n.prototype),{constructor:hp,isRectAreaLight:!0,copy:function(e){return _n.prototype.copy.call(this,e),this.width=e.width,this.height=e.height,this}});function sy(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Wn,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Wn,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1}Object.assign(sy.prototype,{update:function(){var e,t,n,i,r,a,o,l=new xt,h=new xt;return function(f){var d=e!==this||t!==f.focus||n!==f.fov||i!==f.aspect*this.aspect||r!==f.near||a!==f.far||o!==f.zoom;if(d){e=this,t=f.focus,n=f.fov,i=f.aspect*this.aspect,r=f.near,a=f.far,o=f.zoom;var p=f.projectionMatrix.clone(),g=this.eyeSep/2,x=g*r/t,y=r*Math.tan(St.DEG2RAD*n*.5)/o,_,v;h.elements[12]=-g,l.elements[12]=g,_=-y*i+x,v=y*i+x,p.elements[0]=2*r/(v-_),p.elements[8]=(v+_)/(v-_),this.cameraL.projectionMatrix.copy(p),_=-y*i-x,v=y*i-x,p.elements[0]=2*r/(v-_),p.elements[8]=(v+_)/(v-_),this.cameraR.projectionMatrix.copy(p)}this.cameraL.matrixWorld.copy(f.matrixWorld).multiply(h),this.cameraR.matrixWorld.copy(f.matrixWorld).multiply(l)}}()});function bh(e,t,n){it.call(this),this.type="CubeCamera";var i=90,r=1,a=new Wn(i,r,e,t);a.up.set(0,-1,0),a.lookAt(new k(1,0,0)),this.add(a);var o=new Wn(i,r,e,t);o.up.set(0,-1,0),o.lookAt(new k(-1,0,0)),this.add(o);var l=new Wn(i,r,e,t);l.up.set(0,0,1),l.lookAt(new k(0,1,0)),this.add(l);var h=new Wn(i,r,e,t);h.up.set(0,0,-1),h.lookAt(new k(0,-1,0)),this.add(h);var u=new Wn(i,r,e,t);u.up.set(0,-1,0),u.lookAt(new k(0,0,1)),this.add(u);var f=new Wn(i,r,e,t);f.up.set(0,-1,0),f.lookAt(new k(0,0,-1)),this.add(f);var d={format:po,magFilter:hi,minFilter:hi};this.renderTarget=new vo(n,n,d),this.updateCubeMap=function(p,g){this.parent===null&&this.updateMatrixWorld();var x=this.renderTarget,y=x.texture.generateMipmaps;x.texture.generateMipmaps=!1,x.activeCubeFace=0,p.render(g,a,x),x.activeCubeFace=1,p.render(g,o,x),x.activeCubeFace=2,p.render(g,l,x),x.activeCubeFace=3,p.render(g,h,x),x.activeCubeFace=4,p.render(g,u,x),x.texture.generateMipmaps=y,x.activeCubeFace=5,p.render(g,f,x),p.setRenderTarget(null)}}bh.prototype=Object.create(it.prototype);bh.prototype.constructor=bh;function fp(){it.call(this),this.type="AudioListener",this.context=sm.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null}fp.prototype=Object.assign(Object.create(it.prototype),{constructor:fp,getInput:function(){return this.gain},removeFilter:function(){this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null)},getFilter:function(){return this.filter},setFilter:function(e){this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination)},getMasterVolume:function(){return this.gain.gain.value},setMasterVolume:function(e){this.gain.gain.value=e},updateMatrixWorld:function(){var e=new k,t=new bn,n=new k,i=new k;return function(a){it.prototype.updateMatrixWorld.call(this,a);var o=this.context.listener,l=this.up;this.matrixWorld.decompose(e,t,n),i.set(0,0,-1).applyQuaternion(t),o.positionX?(o.positionX.setValueAtTime(e.x,this.context.currentTime),o.positionY.setValueAtTime(e.y,this.context.currentTime),o.positionZ.setValueAtTime(e.z,this.context.currentTime),o.forwardX.setValueAtTime(i.x,this.context.currentTime),o.forwardY.setValueAtTime(i.y,this.context.currentTime),o.forwardZ.setValueAtTime(i.z,this.context.currentTime),o.upX.setValueAtTime(l.x,this.context.currentTime),o.upY.setValueAtTime(l.y,this.context.currentTime),o.upZ.setValueAtTime(l.z,this.context.currentTime)):(o.setPosition(e.x,e.y,e.z),o.setOrientation(i.x,i.y,i.z,l.x,l.y,l.z))}}()});function Vo(e){it.call(this),this.type="Audio",this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.loop=!1,this.startTime=0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.sourceType="empty",this.filters=[]}Vo.prototype=Object.assign(Object.create(it.prototype),{constructor:Vo,getOutput:function(){return this.gain},setNodeSource:function(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this},setBuffer:function(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this},play:function(){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}var e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.onended=this.onEnded.bind(this),e.playbackRate.setValueAtTime(this.playbackRate,this.startTime),e.start(0,this.startTime),this.isPlaying=!0,this.source=e,this.connect()},pause:function(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.source.stop(),this.startTime=this.context.currentTime,this.isPlaying=!1,this},stop:function(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.source.stop(),this.startTime=0,this.isPlaying=!1,this},connect:function(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(var e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this},disconnect:function(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(var e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this},getFilters:function(){return this.filters},setFilters:function(e){return e||(e=[]),this.isPlaying===!0?(this.disconnect(),this.filters=e,this.connect()):this.filters=e,this},getFilter:function(){return this.getFilters()[0]},setFilter:function(e){return this.setFilters(e?[e]:[])},setPlaybackRate:function(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setValueAtTime(this.playbackRate,this.context.currentTime),this},getPlaybackRate:function(){return this.playbackRate},onEnded:function(){this.isPlaying=!1},getLoop:function(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop},setLoop:function(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this},getVolume:function(){return this.gain.gain.value},setVolume:function(e){return this.gain.gain.value=e,this}});function dp(e){Vo.call(this,e),this.panner=this.context.createPanner(),this.panner.connect(this.gain)}dp.prototype=Object.assign(Object.create(Vo.prototype),{constructor:dp,getOutput:function(){return this.panner},getRefDistance:function(){return this.panner.refDistance},setRefDistance:function(e){this.panner.refDistance=e},getRolloffFactor:function(){return this.panner.rolloffFactor},setRolloffFactor:function(e){this.panner.rolloffFactor=e},getDistanceModel:function(){return this.panner.distanceModel},setDistanceModel:function(e){this.panner.distanceModel=e},getMaxDistance:function(){return this.panner.maxDistance},setMaxDistance:function(e){this.panner.maxDistance=e},updateMatrixWorld:function(){var e=new k;return function(n){it.prototype.updateMatrixWorld.call(this,n),e.setFromMatrixPosition(this.matrixWorld),this.panner.setPosition(e.x,e.y,e.z)}}()});function lm(e,t){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t!==void 0?t:2048,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}Object.assign(lm.prototype,{getFrequencyData:function(){return this.analyser.getByteFrequencyData(this.data),this.data},getAverageFrequency:function(){for(var e=0,t=this.getFrequencyData(),n=0;n<t.length;n++)e+=t[n];return e/t.length}});function Th(e,t,n){this.binding=e,this.valueSize=n;var i=Float64Array,r;switch(t){case"quaternion":r=this._slerp;break;case"string":case"bool":i=Array,r=this._select;break;default:r=this._lerp}this.buffer=new i(n*4),this._mixBufferRegion=r,this.cumulativeWeight=0,this.useCount=0,this.referenceCount=0}Th.prototype={constructor:Th,accumulate:function(e,t){var n=this.buffer,i=this.valueSize,r=e*i+i,a=this.cumulativeWeight;if(a===0){for(var o=0;o!==i;++o)n[r+o]=n[o];a=t}else{a+=t;var l=t/a;this._mixBufferRegion(n,r,0,l,i)}this.cumulativeWeight=a},apply:function(e){var t=this.valueSize,n=this.buffer,i=e*t+t,r=this.cumulativeWeight,a=this.binding;if(this.cumulativeWeight=0,r<1){var o=t*3;this._mixBufferRegion(n,i,o,1-r,t)}for(var l=t,h=t+t;l!==h;++l)if(n[l]!==n[l+t]){a.setValue(n,i);break}},saveOriginalState:function(){var e=this.binding,t=this.buffer,n=this.valueSize,i=n*3;e.getValue(t,i);for(var r=n,a=i;r!==a;++r)t[r]=t[i+r%n];this.cumulativeWeight=0},restoreOriginalState:function(){var e=this.valueSize*3;this.binding.setValue(this.buffer,e)},_select:function(e,t,n,i,r){if(i>=.5)for(var a=0;a!==r;++a)e[t+a]=e[n+a]},_slerp:function(e,t,n,i,r){bn.slerpFlat(e,t,e,t,e,n,i)},_lerp:function(e,t,n,i,r){for(var a=1-i,o=0;o!==r;++o){var l=t+o;e[l]=e[l]*a+e[n+o]*i}}};function fn(e,t,n){this.path=t,this.parsedPath=n||fn.parseTrackName(t),this.node=fn.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e}fn.prototype={constructor:fn,getValue:function(t,n){this.bind(),this.getValue(t,n)},setValue:function(t,n){this.bind(),this.setValue(t,n)},bind:function(){var e=this.node,t=this.parsedPath,n=t.objectName,i=t.propertyName,r=t.propertyIndex;if(e||(e=fn.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("  trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){var a=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("  can not bind to material as node does not have a material",this);return}if(!e.material.materials){console.error("  can not bind to material.materials as node.material does not have a materials array",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("  can not bind to bones as node does not have a skeleton",this);return}e=e.skeleton.bones;for(var o=0;o<e.length;o++)if(e[o].name===a){a=o;break}break;default:if(e[n]===void 0){console.error("  can not bind to objectName of node, undefined",this);return}e=e[n]}if(a!==void 0){if(e[a]===void 0){console.error("  trying to bind to objectIndex of objectName, but is undefined:",this,e);return}e=e[a]}}var l=e[i];if(l===void 0){var h=t.nodeName;console.error("  trying to update property for track: "+h+"."+i+" but it wasn't found.",e);return}var u=this.Versioning.None;e.needsUpdate!==void 0?(u=this.Versioning.NeedsUpdate,this.targetObject=e):e.matrixWorldNeedsUpdate!==void 0&&(u=this.Versioning.MatrixWorldNeedsUpdate,this.targetObject=e);var f=this.BindingType.Direct;if(r!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("  can not bind to morphTargetInfluences becasuse node does not have a geometry",this);return}if(!e.geometry.morphTargets){console.error("  can not bind to morphTargetInfluences becasuse node does not have a geometry.morphTargets",this);return}for(var o=0;o<this.node.geometry.morphTargets.length;o++)if(e.geometry.morphTargets[o].name===r){r=o;break}}f=this.BindingType.ArrayElement,this.resolvedProperty=l,this.propertyIndex=r}else l.fromArray!==void 0&&l.toArray!==void 0?(f=this.BindingType.HasFromToArray,this.resolvedProperty=l):l.length!==void 0?(f=this.BindingType.EntireArray,this.resolvedProperty=l):this.propertyName=i;this.getValue=this.GetterByBindingType[f],this.setValue=this.SetterByBindingTypeAndVersioning[f][u]},unbind:function(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}};Object.assign(fn.prototype,{_getValue_unavailable:function(){},_setValue_unavailable:function(){},_getValue_unbound:fn.prototype.getValue,_setValue_unbound:fn.prototype.setValue,BindingType:{Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Versioning:{None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},GetterByBindingType:[function(t,n){t[n]=this.node[this.propertyName]},function(t,n){for(var i=this.resolvedProperty,r=0,a=i.length;r!==a;++r)t[n++]=i[r]},function(t,n){t[n]=this.resolvedProperty[this.propertyIndex]},function(t,n){this.resolvedProperty.toArray(t,n)}],SetterByBindingTypeAndVersioning:[[function(t,n){this.node[this.propertyName]=t[n]},function(t,n){this.node[this.propertyName]=t[n],this.targetObject.needsUpdate=!0},function(t,n){this.node[this.propertyName]=t[n],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,n){for(var i=this.resolvedProperty,r=0,a=i.length;r!==a;++r)i[r]=t[n++]},function(t,n){for(var i=this.resolvedProperty,r=0,a=i.length;r!==a;++r)i[r]=t[n++];this.targetObject.needsUpdate=!0},function(t,n){for(var i=this.resolvedProperty,r=0,a=i.length;r!==a;++r)i[r]=t[n++];this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,n){this.resolvedProperty[this.propertyIndex]=t[n]},function(t,n){this.resolvedProperty[this.propertyIndex]=t[n],this.targetObject.needsUpdate=!0},function(t,n){this.resolvedProperty[this.propertyIndex]=t[n],this.targetObject.matrixWorldNeedsUpdate=!0}],[function(t,n){this.resolvedProperty.fromArray(t,n)},function(t,n){this.resolvedProperty.fromArray(t,n),this.targetObject.needsUpdate=!0},function(t,n){this.resolvedProperty.fromArray(t,n),this.targetObject.matrixWorldNeedsUpdate=!0}]]});fn.Composite=function(e,t,n){var i=n||fn.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)};fn.Composite.prototype={constructor:fn.Composite,getValue:function(e,t){this.bind();var n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)},setValue:function(e,t){for(var n=this._bindings,i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(e,t)},bind:function(){for(var e=this._bindings,t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()},unbind:function(){for(var e=this._bindings,t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}};fn.create=function(e,t,n){return e&&e.isAnimationObjectGroup?new fn.Composite(e,t,n):new fn(e,t,n)};fn.parseTrackName=function(e){var t=/^((?:[\w-]+[\/:])*)([\w-]+)?(?:\.([\w-]+)(?:\[(.+)\])?)?\.([\w-]+)(?:\[(.+)\])?$/,n=t.exec(e);if(!n)throw new Error("cannot parse trackName at all: "+e);var i={nodeName:n[2],objectName:n[3],objectIndex:n[4],propertyName:n[5],propertyIndex:n[6]};if(i.propertyName===null||i.propertyName.length===0)throw new Error("can not parse propertyName from trackName: "+e);return i};fn.findNode=function(e,t){if(!t||t===""||t==="root"||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){var n=function(o){for(var l=0;l<o.bones.length;l++){var h=o.bones[l];if(h.name===t)return h}return null},i=n(e.skeleton);if(i)return i}if(e.children){var r=function(o){for(var l=0;l<o.length;l++){var h=o[l];if(h.name===t||h.uuid===t)return h;var u=r(h.children);if(u)return u}return null},a=r(e.children);if(a)return a}return null};function pp(e){this.uuid=St.generateUUID(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;var t={};this._indicesByUUID=t;for(var n=0,i=arguments.length;n!==i;++n)t[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};var r=this;this.stats={objects:{get total(){return r._objects.length},get inUse(){return this.total-r.nCachedObjects_}},get bindingsPerObject(){return r._bindings.length}}}pp.prototype={constructor:pp,isAnimationObjectGroup:!0,add:function(e){for(var t=this._objects,n=t.length,i=this.nCachedObjects_,r=this._indicesByUUID,a=this._paths,o=this._parsedPaths,l=this._bindings,h=l.length,u=0,f=arguments.length;u!==f;++u){var d=arguments[u],p=d.uuid,g=r[p],x=void 0;if(g===void 0){g=n++,r[p]=g,t.push(d);for(var y=0,_=h;y!==_;++y)l[y].push(new fn(d,a[y],o[y]))}else if(g<i){x=t[g];var v=--i,w=t[v];r[w.uuid]=g,t[g]=w,r[p]=v,t[v]=d;for(var y=0,_=h;y!==_;++y){var M=l[y],T=M[v],A=M[g];M[g]=T,A===void 0&&(A=new fn(d,a[y],o[y])),M[v]=A}}else t[g]!==x&&console.error("Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes...")}this.nCachedObjects_=i},remove:function(e){for(var t=this._objects,n=this.nCachedObjects_,i=this._indicesByUUID,r=this._bindings,a=r.length,o=0,l=arguments.length;o!==l;++o){var h=arguments[o],u=h.uuid,f=i[u];if(f!==void 0&&f>=n){var d=n++,p=t[d];i[p.uuid]=f,t[f]=p,i[u]=d,t[d]=h;for(var g=0,x=a;g!==x;++g){var y=r[g],_=y[d],v=y[f];y[f]=_,y[d]=v}}}this.nCachedObjects_=n},uncache:function(e){for(var t=this._objects,n=t.length,i=this.nCachedObjects_,r=this._indicesByUUID,a=this._bindings,o=a.length,l=0,h=arguments.length;l!==h;++l){var u=arguments[l],f=u.uuid,d=r[f];if(d!==void 0)if(delete r[f],d<i){var p=--i,g=t[p],x=--n,y=t[x];r[g.uuid]=d,t[d]=g,r[y.uuid]=p,t[p]=y,t.pop();for(var _=0,v=o;_!==v;++_){var w=a[_],M=w[p],T=w[x];w[d]=M,w[p]=T,w.pop()}}else{var x=--n,y=t[x];r[y.uuid]=d,t[d]=y,t.pop();for(var _=0,v=o;_!==v;++_){var w=a[_];w[d]=w[x],w.pop()}}}this.nCachedObjects_=i},subscribe_:function(e,t){var n=this._bindingsIndicesByPath,i=n[e],r=this._bindings;if(i!==void 0)return r[i];var a=this._paths,o=this._parsedPaths,l=this._objects,h=l.length,u=this.nCachedObjects_,f=new Array(h);i=r.length,n[e]=i,a.push(e),o.push(t),r.push(f);for(var d=u,p=l.length;d!==p;++d){var g=l[d];f[d]=new fn(g,e,t)}return f},unsubscribe_:function(e){var t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){var i=this._paths,r=this._parsedPaths,a=this._bindings,o=a.length-1,l=a[o],h=e[o];t[h]=n,a[n]=l,a.pop(),r[n]=r[o],r.pop(),i[n]=i[o],i.pop()}}};function mp(e,t,n){this._mixer=e,this._clip=t,this._localRoot=n||null;for(var i=t.tracks,r=i.length,a=new Array(r),o={endingStart:Qa,endingEnd:Qa},l=0;l!==r;++l){var h=i[l].createInterpolant(null);a[l]=h,h.settings=o}this._interpolantSettings=o,this._interpolants=a,this._propertyBindings=new Array(r),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=Fx,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}mp.prototype={constructor:mp,play:function(){return this._mixer._activateAction(this),this},stop:function(){return this._mixer._deactivateAction(this),this.reset()},reset:function(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()},isRunning:function(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)},isScheduled:function(){return this._mixer._isActiveAction(this)},startAt:function(e){return this._startTime=e,this},setLoop:function(e,t){return this.loop=e,this.repetitions=t,this},setEffectiveWeight:function(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()},getEffectiveWeight:function(){return this._effectiveWeight},fadeIn:function(e){return this._scheduleFading(e,0,1)},fadeOut:function(e){return this._scheduleFading(e,1,0)},crossFadeFrom:function(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){var i=this._clip.duration,r=e._clip.duration,a=r/i,o=i/r;e.warp(1,a,t),this.warp(o,1,t)}return this},crossFadeTo:function(e,t,n){return e.crossFadeFrom(this,t,n)},stopFading:function(){var e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this},setEffectiveTimeScale:function(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()},getEffectiveTimeScale:function(){return this._effectiveTimeScale},setDuration:function(e){return this.timeScale=this._clip.duration/e,this.stopWarping()},syncWith:function(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()},halt:function(e){return this.warp(this._effectiveTimeScale,0,e)},warp:function(e,t,n){var i=this._mixer,r=i.time,a=this._timeScaleInterpolant,o=this.timeScale;a===null&&(a=i._lendControlInterpolant(),this._timeScaleInterpolant=a);var l=a.parameterPositions,h=a.sampleValues;return l[0]=r,l[1]=r+n,h[0]=e/o,h[1]=t/o,this},stopWarping:function(){var e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this},getMixer:function(){return this._mixer},getClip:function(){return this._clip},getRoot:function(){return this._localRoot||this._mixer._root},_update:function(e,t,n,i){var r=this._startTime;if(r!==null){var a=(e-r)*n;if(a<0||n===0)return;this._startTime=null,t=n*a}t*=this._updateTimeScale(e);var o=this._updateTime(t),l=this._updateWeight(e);if(l>0)for(var h=this._interpolants,u=this._propertyBindings,f=0,d=h.length;f!==d;++f)h[f].evaluate(o),u[f].accumulate(i,l)},_updateWeight:function(e){var t=0;if(this.enabled){t=this.weight;var n=this._weightInterpolant;if(n!==null){var i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t},_updateTimeScale:function(e){var t=0;if(!this.paused){t=this.timeScale;var n=this._timeScaleInterpolant;if(n!==null){var i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t},_updateTime:function(e){var t=this.time+e;if(e===0)return t;var n=this._clip.duration,i=this.loop,r=this._loopCount;if(i===Ix){r===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(t>=n)t=n;else if(t<0)t=0;else break e;this.clampWhenFinished?this.paused=!0:this.enabled=!1,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{var a=i===Nx;if(r===-1&&(e>=0?(r=0,this._setEndings(!0,this.repetitions===0,a)):this._setEndings(this.repetitions===0,!0,a)),t>=n||t<0){var o=Math.floor(t/n);t-=n*o,r+=Math.abs(o);var l=this.repetitions-r;if(l<0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,t=e>0?n:0,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(l===0){var h=e<0;this._setEndings(h,!h,a)}else this._setEndings(!1,!1,a);this._loopCount=r,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:o})}}if(a&&(r&1)===1)return this.time=t,n-t}return this.time=t,t},_setEndings:function(e,t,n){var i=this._interpolantSettings;n?(i.endingStart=Ha,i.endingEnd=Ha):(e?i.endingStart=this.zeroSlopeAtStart?Ha:Qa:i.endingStart=Yl,t?i.endingEnd=this.zeroSlopeAtEnd?Ha:Qa:i.endingEnd=Yl)},_scheduleFading:function(e,t,n){var i=this._mixer,r=i.time,a=this._weightInterpolant;a===null&&(a=i._lendControlInterpolant(),this._weightInterpolant=a);var o=a.parameterPositions,l=a.sampleValues;return o[0]=r,l[0]=t,o[1]=r+e,l[1]=n,this}};function cm(e){this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}Object.assign(cm.prototype,Hi.prototype,{clipAction:function(e,t){var n=t||this._root,i=n.uuid,r=typeof e=="string"?Si.findByName(n,e):e,a=r!==null?r.uuid:e,o=this._actionsByClip[a],l=null;if(o!==void 0){var h=o.actionByRoot[i];if(h!==void 0)return h;l=o.knownActions[0],r===null&&(r=l._clip)}if(r===null)return null;var u=new mp(this,r,t);return this._bindAction(u,l),this._addInactiveAction(u,a,i),u},existingAction:function(e,t){var n=t||this._root,i=n.uuid,r=typeof e=="string"?Si.findByName(n,e):e,a=r?r.uuid:e,o=this._actionsByClip[a];return o!==void 0&&o.actionByRoot[i]||null},stopAllAction:function(){var e=this._actions,t=this._nActiveActions,n=this._bindings,i=this._nActiveBindings;this._nActiveActions=0,this._nActiveBindings=0;for(var r=0;r!==t;++r)e[r].reset();for(var r=0;r!==i;++r)n[r].useCount=0;return this},update:function(e){e*=this.timeScale;for(var t=this._actions,n=this._nActiveActions,i=this.time+=e,r=Math.sign(e),a=this._accuIndex^=1,o=0;o!==n;++o){var l=t[o];l.enabled&&l._update(i,e,r,a)}for(var h=this._bindings,u=this._nActiveBindings,o=0;o!==u;++o)h[o].apply(a);return this},getRoot:function(){return this._root},uncacheClip:function(e){var t=this._actions,n=e.uuid,i=this._actionsByClip,r=i[n];if(r!==void 0){for(var a=r.knownActions,o=0,l=a.length;o!==l;++o){var h=a[o];this._deactivateAction(h);var u=h._cacheIndex,f=t[t.length-1];h._cacheIndex=null,h._byClipCacheIndex=null,f._cacheIndex=u,t[u]=f,t.pop(),this._removeInactiveBindingsForAction(h)}delete i[n]}},uncacheRoot:function(e){var t=e.uuid,n=this._actionsByClip;for(var i in n){var r=n[i].actionByRoot,a=r[t];a!==void 0&&(this._deactivateAction(a),this._removeInactiveAction(a))}var o=this._bindingsByRootAndName,l=o[t];if(l!==void 0)for(var h in l){var u=l[h];u.restoreOriginalState(),this._removeInactiveBinding(u)}},uncacheAction:function(e,t){var n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}});Object.assign(cm.prototype,{_bindAction:function(e,t){var n=e._localRoot||this._root,i=e._clip.tracks,r=i.length,a=e._propertyBindings,o=e._interpolants,l=n.uuid,h=this._bindingsByRootAndName,u=h[l];u===void 0&&(u={},h[l]=u);for(var f=0;f!==r;++f){var d=i[f],p=d.name,g=u[p];if(g!==void 0)a[f]=g;else{if(g=a[f],g!==void 0){g._cacheIndex===null&&(++g.referenceCount,this._addInactiveBinding(g,l,p));continue}var x=t&&t._propertyBindings[f].binding.parsedPath;g=new Th(fn.create(n,p,x),d.ValueTypeName,d.getValueSize()),++g.referenceCount,this._addInactiveBinding(g,l,p),a[f]=g}o[f].resultBuffer=g.buffer}},_activateAction:function(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){var t=(e._localRoot||this._root).uuid,n=e._clip.uuid,i=this._actionsByClip[n];this._bindAction(e,i&&i.knownActions[0]),this._addInactiveAction(e,n,t)}for(var r=e._propertyBindings,a=0,o=r.length;a!==o;++a){var l=r[a];l.useCount++===0&&(this._lendBinding(l),l.saveOriginalState())}this._lendAction(e)}},_deactivateAction:function(e){if(this._isActiveAction(e)){for(var t=e._propertyBindings,n=0,i=t.length;n!==i;++n){var r=t[n];--r.useCount===0&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}},_initMemoryManager:function(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;var e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}},_isActiveAction:function(e){var t=e._cacheIndex;return t!==null&&t<this._nActiveActions},_addInactiveAction:function(e,t,n){var i=this._actions,r=this._actionsByClip,a=r[t];if(a===void 0)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,r[t]=a;else{var o=a.knownActions;e._byClipCacheIndex=o.length,o.push(e)}e._cacheIndex=i.length,i.push(e),a.actionByRoot[n]=e},_removeInactiveAction:function(e){var t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;var r=e._clip.uuid,a=this._actionsByClip,o=a[r],l=o.knownActions,h=l[l.length-1],u=e._byClipCacheIndex;h._byClipCacheIndex=u,l[u]=h,l.pop(),e._byClipCacheIndex=null;var f=o.actionByRoot,d=(t._localRoot||this._root).uuid;delete f[d],l.length===0&&delete a[r],this._removeInactiveBindingsForAction(e)},_removeInactiveBindingsForAction:function(e){for(var t=e._propertyBindings,n=0,i=t.length;n!==i;++n){var r=t[n];--r.referenceCount===0&&this._removeInactiveBinding(r)}},_lendAction:function(e){var t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r},_takeBackAction:function(e){var t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r},_addInactiveBinding:function(e,t,n){var i=this._bindingsByRootAndName,r=i[t],a=this._bindings;r===void 0&&(r={},i[t]=r),r[n]=e,e._cacheIndex=a.length,a.push(e)},_removeInactiveBinding:function(e){var t=this._bindings,n=e.binding,i=n.rootNode.uuid,r=n.path,a=this._bindingsByRootAndName,o=a[i],l=t[t.length-1],h=e._cacheIndex;l._cacheIndex=h,t[h]=l,t.pop(),delete o[r];e:{for(var u in o)break e;delete a[i]}},_lendBinding:function(e){var t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r},_takeBackBinding:function(e){var t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r},_lendControlInterpolant:function(){var e=this._controlInterpolants,t=this._nActiveControlInterpolants++,n=e[t];return n===void 0&&(n=new Sc(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=t,e[t]=n),n},_takeBackControlInterpolant:function(e){var t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,r=t[i];e.__cacheIndex=i,t[i]=e,r.__cacheIndex=n,t[n]=r},_controlInterpolantsResultBuffer:new Float32Array(1)});function Ah(e){typeof e=="string"&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}Ah.prototype.clone=function(){return new Ah(this.value.clone===void 0?this.value:this.value.clone())};function gs(){ft.call(this),this.type="InstancedBufferGeometry",this.maxInstancedCount=void 0}gs.prototype=Object.create(ft.prototype);gs.prototype.constructor=gs;gs.prototype.isInstancedBufferGeometry=!0;gs.prototype.addGroup=function(e,t,n){this.groups.push({start:e,count:t,materialIndex:n})};gs.prototype.copy=function(e){var t=e.index;t!==null&&this.setIndex(t.clone());var n=e.attributes;for(var i in n){var r=n[i];this.addAttribute(i,r.clone())}for(var a=e.groups,o=0,l=a.length;o<l;o++){var h=a[o];this.addGroup(h.start,h.count,h.materialIndex)}return this};function vp(e,t,n,i){this.uuid=St.generateUUID(),this.data=e,this.itemSize=t,this.offset=n,this.normalized=i===!0}vp.prototype={constructor:vp,isInterleavedBufferAttribute:!0,get count(){return this.data.count},get array(){return this.data.array},setX:function(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this},setY:function(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this},setZ:function(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this},setW:function(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this},getX:function(e){return this.data.array[e*this.data.stride+this.offset]},getY:function(e){return this.data.array[e*this.data.stride+this.offset+1]},getZ:function(e){return this.data.array[e*this.data.stride+this.offset+2]},getW:function(e){return this.data.array[e*this.data.stride+this.offset+3]},setXY:function(e,t,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this},setXYZ:function(e,t,n,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this},setXYZW:function(e,t,n,i,r){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=r,this}};function ko(e,t){this.uuid=St.generateUUID(),this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.dynamic=!1,this.updateRange={offset:0,count:-1},this.onUploadCallback=function(){},this.version=0}ko.prototype={constructor:ko,isInterleavedBuffer:!0,set needsUpdate(e){e===!0&&this.version++},setArray:function(e){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.count=e!==void 0?e.length/this.stride:0,this.array=e},setDynamic:function(e){return this.dynamic=e,this},copy:function(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.dynamic=e.dynamic,this},copyAt:function(e,t,n){e*=this.stride,n*=t.stride;for(var i=0,r=this.stride;i<r;i++)this.array[e+i]=t.array[n+i];return this},set:function(e,t){return t===void 0&&(t=0),this.array.set(e,t),this},clone:function(){return new this.constructor().copy(this)},onUpload:function(e){return this.onUploadCallback=e,this}};function Wo(e,t,n){ko.call(this,e,t),this.meshPerAttribute=n||1}Wo.prototype=Object.create(ko.prototype);Wo.prototype.constructor=Wo;Wo.prototype.isInstancedInterleavedBuffer=!0;Wo.prototype.copy=function(e){return ko.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this};function Xo(e,t,n){je.call(this,e,t),this.meshPerAttribute=n||1}Xo.prototype=Object.create(je.prototype);Xo.prototype.constructor=Xo;Xo.prototype.isInstancedBufferAttribute=!0;Xo.prototype.copy=function(e){return je.prototype.copy.call(this,e),this.meshPerAttribute=e.meshPerAttribute,this};function gp(e,t,n,i){this.ray=new _a(e,t),this.near=n||0,this.far=i||1/0,this.params={Mesh:{},Line:{},LOD:{},Points:{threshold:1},Sprite:{}},Object.defineProperties(this.params,{PointCloud:{get:function(){return console.warn("THREE.Raycaster: params.PointCloud has been renamed to params.Points."),this.Points}}})}function i0(e,t){return e.distance-t.distance}function _p(e,t,n,i){if(e.visible!==!1&&(e.raycast(t,n),i===!0))for(var r=e.children,a=0,o=r.length;a<o;a++)_p(r[a],t,n,!0)}gp.prototype={constructor:gp,linePrecision:1,set:function(e,t){this.ray.set(e,t)},setFromCamera:function(e,t){t&&t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize()):t&&t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld)):console.error("THREE.Raycaster: Unsupported camera type.")},intersectObject:function(e,t){var n=[];return _p(e,this,n,t),n.sort(i0),n},intersectObjects:function(e,t){var n=[];if(Array.isArray(e)===!1)return console.warn("THREE.Raycaster.intersectObjects: objects is not an Array."),n;for(var i=0,r=e.length;i<r;i++)_p(e[i],this,n,t);return n.sort(i0),n}};function xp(e){this.autoStart=e!==void 0?e:!0,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}xp.prototype={constructor:xp,start:function(){this.startTime=(performance||Date).now(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0},stop:function(){this.getElapsedTime(),this.running=!1},getElapsedTime:function(){return this.getDelta(),this.elapsedTime},getDelta:function(){var e=0;if(this.autoStart&&!this.running&&this.start(),this.running){var t=(performance||Date).now();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}};function BI(e){this.points=e;var t=[],n={x:0,y:0,z:0},i,r,a,o,l,h,u,f,d;this.initFromArray=function(g){this.points=[];for(var x=0;x<g.length;x++)this.points[x]={x:g[x][0],y:g[x][1],z:g[x][2]}},this.getPoint=function(g){return i=(this.points.length-1)*g,r=Math.floor(i),a=i-r,t[0]=r===0?r:r-1,t[1]=r,t[2]=r>this.points.length-2?this.points.length-1:r+1,t[3]=r>this.points.length-3?this.points.length-1:r+2,h=this.points[t[0]],u=this.points[t[1]],f=this.points[t[2]],d=this.points[t[3]],o=a*a,l=a*o,n.x=p(h.x,u.x,f.x,d.x,a,o,l),n.y=p(h.y,u.y,f.y,d.y,a,o,l),n.z=p(h.z,u.z,f.z,d.z,a,o,l),n},this.getControlPointsArray=function(){var g,x,y=this.points.length,_=[];for(g=0;g<y;g++)x=this.points[g],_[g]=[x.x,x.y,x.z];return _},this.getLength=function(g){var x,y,_,v,w=0,M=0,T=0,A=new k,P=new k,b=[],U=0;for(b[0]=0,g||(g=100),_=this.points.length*g,A.copy(this.points[0]),x=1;x<_;x++)y=x/_,v=this.getPoint(y),P.copy(v),U+=P.distanceTo(A),A.copy(v),w=(this.points.length-1)*y,M=Math.floor(w),M!==T&&(b[M]=U,T=M);return b[b.length]=U,{chunks:b,total:U}},this.reparametrizeByArcLength=function(g){var x,y,_,v,w,M,T,A,P=[],b=new k,U=this.getLength();for(P.push(b.copy(this.points[0]).clone()),x=1;x<this.points.length;x++){for(M=U.chunks[x]-U.chunks[x-1],T=Math.ceil(g*M/U.total),v=(x-1)/(this.points.length-1),w=x/(this.points.length-1),y=1;y<T-1;y++)_=v+y*(1/T)*(w-v),A=this.getPoint(_),P.push(b.copy(A).clone());P.push(b.copy(this.points[x]).clone())}this.points=P};function p(g,x,y,_,v,w,M){var T=(y-g)*.5,A=(_-x)*.5;return(2*(x-y)+T+A)*M+(-3*(x-y)-2*T-A)*w+T*v+x}}function yp(e,t,n){return this.radius=e!==void 0?e:1,this.phi=t!==void 0?t:0,this.theta=n!==void 0?n:0,this}yp.prototype={constructor:yp,set:function(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this},makeSafe:function(){var e=1e-6;return this.phi=Math.max(e,Math.min(Math.PI-e,this.phi)),this},setFromVector3:function(e){return this.radius=e.length(),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e.x,e.z),this.phi=Math.acos(St.clamp(e.y/this.radius,-1,1))),this}};function Mp(e,t,n){return this.radius=e!==void 0?e:1,this.theta=t!==void 0?t:0,this.y=n!==void 0?n:0,this}Mp.prototype={constructor:Mp,set:function(e,t,n){return this.radius=e,this.theta=t,this.y=n,this},clone:function(){return new this.constructor().copy(this)},copy:function(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this},setFromVector3:function(e){return this.radius=Math.sqrt(e.x*e.x+e.z*e.z),this.theta=Math.atan2(e.x,e.z),this.y=e.y,this}};function Nn(e,t){Pn.call(this,e,t),this.animationsMap={},this.animationsList=[];var n=this.geometry.morphTargets.length,i="__default",r=0,a=n-1,o=n/1;this.createAnimation(i,r,a,o),this.setAnimationWeight(i,1)}Nn.prototype=Object.create(Pn.prototype);Nn.prototype.constructor=Nn;Nn.prototype.createAnimation=function(e,t,n,i){var r={start:t,end:n,length:n-t+1,fps:i,duration:(n-t)/i,lastFrame:0,currentFrame:0,active:!1,time:0,direction:1,weight:1,directionBackwards:!1,mirroredLoop:!1};this.animationsMap[e]=r,this.animationsList.push(r)};Nn.prototype.autoCreateAnimations=function(e){for(var t=/([a-z]+)_?(\d+)/i,n,i={},r=this.geometry,a=0,o=r.morphTargets.length;a<o;a++){var l=r.morphTargets[a],h=l.name.match(t);if(h&&h.length>1){var u=h[1];i[u]||(i[u]={start:1/0,end:-1/0});var f=i[u];a<f.start&&(f.start=a),a>f.end&&(f.end=a),n||(n=u)}}for(var u in i){var f=i[u];this.createAnimation(u,f.start,f.end,e)}this.firstAnimation=n};Nn.prototype.setAnimationDirectionForward=function(e){var t=this.animationsMap[e];t&&(t.direction=1,t.directionBackwards=!1)};Nn.prototype.setAnimationDirectionBackward=function(e){var t=this.animationsMap[e];t&&(t.direction=-1,t.directionBackwards=!0)};Nn.prototype.setAnimationFPS=function(e,t){var n=this.animationsMap[e];n&&(n.fps=t,n.duration=(n.end-n.start)/n.fps)};Nn.prototype.setAnimationDuration=function(e,t){var n=this.animationsMap[e];n&&(n.duration=t,n.fps=(n.end-n.start)/n.duration)};Nn.prototype.setAnimationWeight=function(e,t){var n=this.animationsMap[e];n&&(n.weight=t)};Nn.prototype.setAnimationTime=function(e,t){var n=this.animationsMap[e];n&&(n.time=t)};Nn.prototype.getAnimationTime=function(e){var t=0,n=this.animationsMap[e];return n&&(t=n.time),t};Nn.prototype.getAnimationDuration=function(e){var t=-1,n=this.animationsMap[e];return n&&(t=n.duration),t};Nn.prototype.playAnimation=function(e){var t=this.animationsMap[e];t?(t.time=0,t.active=!0):console.warn("THREE.MorphBlendMesh: animation["+e+"] undefined in .playAnimation()")};Nn.prototype.stopAnimation=function(e){var t=this.animationsMap[e];t&&(t.active=!1)};Nn.prototype.update=function(e){for(var t=0,n=this.animationsList.length;t<n;t++){var i=this.animationsList[t];if(i.active){var r=i.duration/i.length;i.time+=i.direction*e,i.mirroredLoop?(i.time>i.duration||i.time<0)&&(i.direction*=-1,i.time>i.duration&&(i.time=i.duration,i.directionBackwards=!0),i.time<0&&(i.time=0,i.directionBackwards=!1)):(i.time=i.time%i.duration,i.time<0&&(i.time+=i.duration));var a=i.start+St.clamp(Math.floor(i.time/r),0,i.length-1),o=i.weight;a!==i.currentFrame&&(this.morphTargetInfluences[i.lastFrame]=0,this.morphTargetInfluences[i.currentFrame]=1*o,this.morphTargetInfluences[a]=0,i.lastFrame=i.currentFrame,i.currentFrame=a);var l=i.time%r/r;i.directionBackwards&&(l=1-l),i.currentFrame!==i.lastFrame?(this.morphTargetInfluences[i.currentFrame]=l*o,this.morphTargetInfluences[i.lastFrame]=(1-l)*o):this.morphTargetInfluences[i.currentFrame]=o}}};function Ac(e){it.call(this),this.material=e,this.render=function(t){}}Ac.prototype=Object.create(it.prototype);Ac.prototype.constructor=Ac;Ac.prototype.isImmediateRenderObject=!0;function Rc(e,t,n,i){this.object=e,this.size=t!==void 0?t:1;var r=n!==void 0?n:16711680,a=i!==void 0?i:1,o=0,l=this.object.geometry;l&&l.isGeometry?o=l.faces.length*3:l&&l.isBufferGeometry&&(o=l.attributes.normal.count);var h=new ft,u=new Ut(o*2*3,3);h.addAttribute("position",u),on.call(this,h,new gn({color:r,linewidth:a})),this.matrixAutoUpdate=!1,this.update()}Rc.prototype=Object.create(on.prototype);Rc.prototype.constructor=Rc;Rc.prototype.update=function(){var e=new k,t=new k,n=new Vi;return function(){var r=["a","b","c"];this.object.updateMatrixWorld(!0),n.getNormalMatrix(this.object.matrixWorld);var a=this.object.matrixWorld,o=this.geometry.attributes.position,l=this.object.geometry;if(l&&l.isGeometry)for(var h=l.vertices,u=l.faces,f=0,d=0,p=u.length;d<p;d++)for(var g=u[d],x=0,y=g.vertexNormals.length;x<y;x++){var _=h[g[r[x]]],v=g.vertexNormals[x];e.copy(_).applyMatrix4(a),t.copy(v).applyMatrix3(n).normalize().multiplyScalar(this.size).add(e),o.setXYZ(f,e.x,e.y,e.z),f=f+1,o.setXYZ(f,t.x,t.y,t.z),f=f+1}else if(l&&l.isBufferGeometry)for(var w=l.attributes.position,M=l.attributes.normal,f=0,x=0,y=w.count;x<y;x++)e.set(w.getX(x),w.getY(x),w.getZ(x)).applyMatrix4(a),t.set(M.getX(x),M.getY(x),M.getZ(x)),t.applyMatrix3(n).normalize().multiplyScalar(this.size).add(e),o.setXYZ(f,e.x,e.y,e.z),f=f+1,o.setXYZ(f,t.x,t.y,t.z),f=f+1;return o.needsUpdate=!0,this}}();function Yo(e){it.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1;for(var t=new ft,n=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1],i=0,r=1,a=32;i<a;i++,r++){var o=i/a*Math.PI*2,l=r/a*Math.PI*2;n.push(Math.cos(o),Math.sin(o),1,Math.cos(l),Math.sin(l),1)}t.addAttribute("position",new Ut(n,3));var h=new gn({fog:!1});this.cone=new on(t,h),this.add(this.cone),this.update()}Yo.prototype=Object.create(it.prototype);Yo.prototype.constructor=Yo;Yo.prototype.dispose=function(){this.cone.geometry.dispose(),this.cone.material.dispose()};Yo.prototype.update=function(){var e=new k,t=new k;return function(){var i=this.light.distance?this.light.distance:1e3,r=i*Math.tan(this.light.angle);this.cone.scale.set(r,r,i),e.setFromMatrixPosition(this.light.matrixWorld),t.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(t.sub(e)),this.cone.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)}}();function qo(e){this.bones=this.getBoneList(e);for(var t=new ft,n=[],i=[],r=new dt(0,0,1),a=new dt(0,1,0),o=0;o<this.bones.length;o++){var l=this.bones[o];l.parent&&l.parent.isBone&&(n.push(0,0,0),n.push(0,0,0),i.push(r.r,r.g,r.b),i.push(a.r,a.g,a.b))}t.addAttribute("position",new Ut(n,3)),t.addAttribute("color",new Ut(i,3));var h=new gn({vertexColors:xs,depthTest:!1,depthWrite:!1,transparent:!0});on.call(this,t,h),this.root=e,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.update()}qo.prototype=Object.create(on.prototype);qo.prototype.constructor=qo;qo.prototype.getBoneList=function(e){var t=[];e&&e.isBone&&t.push(e);for(var n=0;n<e.children.length;n++)t.push.apply(t,this.getBoneList(e.children[n]));return t};qo.prototype.update=function(){var e=new k,t=new xt,n=new xt;return function(){var r=this.geometry,a=r.getAttribute("position");n.getInverse(this.root.matrixWorld);for(var o=0,l=0;o<this.bones.length;o++){var h=this.bones[o];h.parent&&h.parent.isBone&&(t.multiplyMatrices(n,h.matrixWorld),e.setFromMatrixPosition(t),a.setXYZ(l,e.x,e.y,e.z),t.multiplyMatrices(n,h.parent.matrixWorld),e.setFromMatrixPosition(t),a.setXYZ(l+1,e.x,e.y,e.z),l+=2)}r.getAttribute("position").needsUpdate=!0}}();function $o(e,t){this.light=e,this.light.updateMatrixWorld();var n=new ss(t,4,2),i=new di({wireframe:!0,fog:!1});i.color.copy(this.light.color).multiplyScalar(this.light.intensity),Pn.call(this,n,i),this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1}$o.prototype=Object.create(Pn.prototype);$o.prototype.constructor=$o;$o.prototype.dispose=function(){this.geometry.dispose(),this.material.dispose()};$o.prototype.update=function(){this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity)};function jo(e){it.call(this),this.light=e,this.light.updateMatrixWorld();var t=new di({color:e.color,fog:!1}),n=new di({color:e.color,fog:!1,wireframe:!0}),i=new ft;i.addAttribute("position",new je(new Float32Array(6*3),3)),this.add(new Pn(i,t)),this.add(new Pn(i,n)),this.update()}jo.prototype=Object.create(it.prototype);jo.prototype.constructor=jo;jo.prototype.dispose=function(){this.children[0].geometry.dispose(),this.children[0].material.dispose(),this.children[1].geometry.dispose(),this.children[1].material.dispose()};jo.prototype.update=function(){var e=new k,t=new k;return function(){var i=this.children[0],r=this.children[1];if(this.light.target){e.setFromMatrixPosition(this.light.matrixWorld),t.setFromMatrixPosition(this.light.target.matrixWorld);var a=t.clone().sub(e);i.lookAt(a),r.lookAt(a)}i.material.color.copy(this.light.color).multiplyScalar(this.light.intensity),r.material.color.copy(this.light.color).multiplyScalar(this.light.intensity);var o=this.light.width*.5,l=this.light.height*.5,h=i.geometry.getAttribute("position"),u=h.array;u[0]=o,u[1]=-l,u[2]=0,u[3]=o,u[4]=l,u[5]=0,u[6]=-o,u[7]=l,u[8]=0,u[9]=-o,u[10]=l,u[11]=0,u[12]=-o,u[13]=-l,u[14]=0,u[15]=o,u[16]=-l,u[17]=0,h.needsUpdate=!0}}();function Zo(e,t){it.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1;var n=new as(t);n.rotateY(Math.PI*.5);var i=new di({vertexColors:xs,wireframe:!0}),r=n.getAttribute("position"),a=new Float32Array(r.count*3);n.addAttribute("color",new je(a,3)),this.add(new Pn(n,i)),this.update()}Zo.prototype=Object.create(it.prototype);Zo.prototype.constructor=Zo;Zo.prototype.dispose=function(){this.children[0].geometry.dispose(),this.children[0].material.dispose()};Zo.prototype.update=function(){var e=new k,t=new dt,n=new dt;return function(){var r=this.children[0],a=r.geometry.getAttribute("color");t.copy(this.light.color).multiplyScalar(this.light.intensity),n.copy(this.light.groundColor).multiplyScalar(this.light.intensity);for(var o=0,l=a.count;o<l;o++){var h=o<l/2?t:n;a.setXYZ(o,h.r,h.g,h.b)}r.lookAt(e.setFromMatrixPosition(this.light.matrixWorld).negate()),a.needsUpdate=!0}}();function Lc(e,t,n,i){e=e||10,t=t||10,n=new dt(n!==void 0?n:4473924),i=new dt(i!==void 0?i:8947848);for(var r=t/2,a=e*2/t,o=[],l=[],h=0,u=0,f=-e;h<=t;h++,f+=a){o.push(-e,0,f,e,0,f),o.push(f,0,-e,f,0,e);var d=h===r?n:i;d.toArray(l,u),u+=3,d.toArray(l,u),u+=3,d.toArray(l,u),u+=3,d.toArray(l,u),u+=3}var p=new ft;p.addAttribute("position",new Ut(o,3)),p.addAttribute("color",new Ut(l,3));var g=new gn({vertexColors:xs});on.call(this,p,g)}Lc.prototype=Object.create(on.prototype);Lc.prototype.constructor=Lc;function Rh(e,t,n,i,r,a){e=e||10,t=t||16,n=n||8,i=i||64,r=new dt(r!==void 0?r:4473924),a=new dt(a!==void 0?a:8947848);var o=[],l=[],h,u,f,d,p,g,x;for(d=0;d<=t;d++)f=d/t*(Math.PI*2),h=Math.sin(f)*e,u=Math.cos(f)*e,o.push(0,0,0),o.push(h,0,u),x=d&1?r:a,l.push(x.r,x.g,x.b),l.push(x.r,x.g,x.b);for(d=0;d<=n;d++)for(x=d&1?r:a,g=e-e/n*d,p=0;p<i;p++)f=p/i*(Math.PI*2),h=Math.sin(f)*g,u=Math.cos(f)*g,o.push(h,0,u),l.push(x.r,x.g,x.b),f=(p+1)/i*(Math.PI*2),h=Math.sin(f)*g,u=Math.cos(f)*g,o.push(h,0,u),l.push(x.r,x.g,x.b);var y=new ft;y.addAttribute("position",new Ut(o,3)),y.addAttribute("color",new Ut(l,3));var _=new gn({vertexColors:xs});on.call(this,y,_)}Rh.prototype=Object.create(on.prototype);Rh.prototype.constructor=Rh;function Cc(e,t,n,i){this.object=e,this.size=t!==void 0?t:1;var r=n!==void 0?n:16776960,a=i!==void 0?i:1,o=0,l=this.object.geometry;l&&l.isGeometry?o=l.faces.length:console.warn("THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.");var h=new ft,u=new Ut(o*2*3,3);h.addAttribute("position",u),on.call(this,h,new gn({color:r,linewidth:a})),this.matrixAutoUpdate=!1,this.update()}Cc.prototype=Object.create(on.prototype);Cc.prototype.constructor=Cc;Cc.prototype.update=function(){var e=new k,t=new k,n=new Vi;return function(){this.object.updateMatrixWorld(!0),n.getNormalMatrix(this.object.matrixWorld);for(var r=this.object.matrixWorld,a=this.geometry.attributes.position,o=this.object.geometry,l=o.vertices,h=o.faces,u=0,f=0,d=h.length;f<d;f++){var p=h[f],g=p.normal;e.copy(l[p.a]).add(l[p.b]).add(l[p.c]).divideScalar(3).applyMatrix4(r),t.copy(g).applyMatrix3(n).normalize().multiplyScalar(this.size).add(e),a.setXYZ(u,e.x,e.y,e.z),u=u+1,a.setXYZ(u,t.x,t.y,t.z),u=u+1}return a.needsUpdate=!0,this}}();function Ko(e,t){it.call(this),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,t===void 0&&(t=1);var n=new ft;n.addAttribute("position",new Ut([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));var i=new gn({fog:!1});this.add(new Br(n,i)),n=new ft,n.addAttribute("position",new Ut([0,0,0,0,0,1],3)),this.add(new Br(n,i)),this.update()}Ko.prototype=Object.create(it.prototype);Ko.prototype.constructor=Ko;Ko.prototype.dispose=function(){var e=this.children[0],t=this.children[1];e.geometry.dispose(),e.material.dispose(),t.geometry.dispose(),t.material.dispose()};Ko.prototype.update=function(){var e=new k,t=new k,n=new k;return function(){e.setFromMatrixPosition(this.light.matrixWorld),t.setFromMatrixPosition(this.light.target.matrixWorld),n.subVectors(t,e);var r=this.children[0],a=this.children[1];r.lookAt(n),r.material.color.copy(this.light.color).multiplyScalar(this.light.intensity),a.lookAt(n),a.scale.z=n.length()}}();function Pc(e){var t=new ft,n=new gn({color:16777215,vertexColors:Fp}),i=[],r=[],a={},o=new dt(16755200),l=new dt(16711680),h=new dt(43775),u=new dt(16777215),f=new dt(3355443);d("n1","n2",o),d("n2","n4",o),d("n4","n3",o),d("n3","n1",o),d("f1","f2",o),d("f2","f4",o),d("f4","f3",o),d("f3","f1",o),d("n1","f1",o),d("n2","f2",o),d("n3","f3",o),d("n4","f4",o),d("p","n1",l),d("p","n2",l),d("p","n3",l),d("p","n4",l),d("u1","u2",h),d("u2","u3",h),d("u3","u1",h),d("c","t",u),d("p","c",f),d("cn1","cn2",f),d("cn3","cn4",f),d("cf1","cf2",f),d("cf3","cf4",f);function d(g,x,y){p(g,y),p(x,y)}function p(g,x){i.push(0,0,0),r.push(x.r,x.g,x.b),a[g]===void 0&&(a[g]=[]),a[g].push(i.length/3-1)}t.addAttribute("position",new Ut(i,3)),t.addAttribute("color",new Ut(r,3)),on.call(this,t,n),this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update()}Pc.prototype=Object.create(on.prototype);Pc.prototype.constructor=Pc;Pc.prototype.update=function(){var e,t,n=new k,i=new qn;function r(a,o,l,h){n.set(o,l,h).unproject(i);var u=t[a];if(u!==void 0)for(var f=e.getAttribute("position"),d=0,p=u.length;d<p;d++)f.setXYZ(u[d],n.x,n.y,n.z)}return function(){e=this.geometry,t=this.pointMap;var o=1,l=1;i.projectionMatrix.copy(this.camera.projectionMatrix),r("c",0,0,-1),r("t",0,0,1),r("n1",-o,-l,-1),r("n2",o,-l,-1),r("n3",-o,l,-1),r("n4",o,l,-1),r("f1",-o,-l,1),r("f2",o,-l,1),r("f3",-o,l,1),r("f4",o,l,1),r("u1",o*.7,l*1.1,-1),r("u2",-o*.7,l*1.1,-1),r("u3",0,l*2,-1),r("cf1",-o,0,1),r("cf2",o,0,1),r("cf3",0,-l,1),r("cf4",0,l,1),r("cn1",-o,0,-1),r("cn2",o,0,-1),r("cn3",0,-l,-1),r("cn4",0,l,-1),e.getAttribute("position").needsUpdate=!0}}();function Jo(e,t){t===void 0&&(t=16776960);var n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),r=new ft;r.setIndex(new je(n,1)),r.addAttribute("position",new je(i,3)),on.call(this,r,new gn({color:t})),e!==void 0&&this.update(e)}Jo.prototype=Object.create(on.prototype);Jo.prototype.constructor=Jo;Jo.prototype.update=function(){var e=new dr;return function(n){if(n&&n.isBox3?e.copy(n):e.setFromObject(n),!e.isEmpty()){var i=e.min,r=e.max,a=this.geometry.attributes.position,o=a.array;o[0]=r.x,o[1]=r.y,o[2]=r.z,o[3]=i.x,o[4]=r.y,o[5]=r.z,o[6]=i.x,o[7]=i.y,o[8]=r.z,o[9]=r.x,o[10]=i.y,o[11]=r.z,o[12]=r.x,o[13]=r.y,o[14]=i.z,o[15]=i.x,o[16]=r.y,o[17]=i.z,o[18]=i.x,o[19]=i.y,o[20]=i.z,o[21]=r.x,o[22]=i.y,o[23]=i.z,a.needsUpdate=!0,this.geometry.computeBoundingSphere()}}}();var oy=new ft;oy.addAttribute("position",new Ut([0,0,0,0,1,0],3));var ly=new zr(0,.5,1,5,1);ly.translate(0,-.5,0);function _s(e,t,n,i,r,a){it.call(this),i===void 0&&(i=16776960),n===void 0&&(n=1),r===void 0&&(r=.2*n),a===void 0&&(a=.2*r),this.position.copy(t),this.line=new Br(oy,new gn({color:i})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new Pn(ly,new di({color:i})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,r,a)}_s.prototype=Object.create(it.prototype);_s.prototype.constructor=_s;_s.prototype.setDirection=function(){var e=new k,t;return function(i){i.y>.99999?this.quaternion.set(0,0,0,1):i.y<-.99999?this.quaternion.set(1,0,0,0):(e.set(i.z,0,-i.x).normalize(),t=Math.acos(i.y),this.quaternion.setFromAxisAngle(e,t))}}();_s.prototype.setLength=function(e,t,n){t===void 0&&(t=.2*e),n===void 0&&(n=.2*t),this.line.scale.set(1,Math.max(0,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()};_s.prototype.setColor=function(e){this.line.material.color.copy(e),this.cone.material.color.copy(e)};function Lh(e){e=e||1;var t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new ft;i.addAttribute("position",new Ut(t,3)),i.addAttribute("color",new Ut(n,3));var r=new gn({vertexColors:xs});on.call(this,i,r)}Lh.prototype=Object.create(on.prototype);Lh.prototype.constructor=Lh;var um=function(){var e=new k,t=new r,n=new r,i=new r;function r(){}return r.prototype.init=function(a,o,l,h){this.c0=a,this.c1=l,this.c2=-3*a+3*o-2*l-h,this.c3=2*a-2*o+l+h},r.prototype.initNonuniformCatmullRom=function(a,o,l,h,u,f,d){var p=(o-a)/u-(l-a)/(u+f)+(l-o)/f,g=(l-o)/f-(h-o)/(f+d)+(h-l)/d;p*=f,g*=f,this.init(o,l,p,g)},r.prototype.initCatmullRom=function(a,o,l,h,u){this.init(o,l,u*(l-a),u*(h-o))},r.prototype.calc=function(a){var o=a*a,l=o*a;return this.c0+this.c1*a+this.c2*o+this.c3*l},$n.create(function(a){this.points=a||[],this.closed=!1},function(a){var o=this.points,l,h,u,f;f=o.length,f<2&&console.log("duh, you need at least 2 points"),l=(f-(this.closed?0:1))*a,h=Math.floor(l),u=l-h,this.closed?h+=h>0?0:(Math.floor(Math.abs(h)/o.length)+1)*o.length:u===0&&h===f-1&&(h=f-2,u=1);var d,p,g,x;if(this.closed||h>0?d=o[(h-1)%f]:(e.subVectors(o[0],o[1]).add(o[0]),d=e),p=o[h%f],g=o[(h+1)%f],this.closed||h+2<f?x=o[(h+2)%f]:(e.subVectors(o[f-1],o[f-2]).add(o[f-1]),x=e),this.type===void 0||this.type==="centripetal"||this.type==="chordal"){var y=this.type==="chordal"?.5:.25,_=Math.pow(d.distanceToSquared(p),y),v=Math.pow(p.distanceToSquared(g),y),w=Math.pow(g.distanceToSquared(x),y);v<1e-4&&(v=1),_<1e-4&&(_=v),w<1e-4&&(w=v),t.initNonuniformCatmullRom(d.x,p.x,g.x,x.x,_,v,w),n.initNonuniformCatmullRom(d.y,p.y,g.y,x.y,_,v,w),i.initNonuniformCatmullRom(d.z,p.z,g.z,x.z,_,v,w)}else if(this.type==="catmullrom"){var M=this.tension!==void 0?this.tension:.5;t.initCatmullRom(d.x,p.x,g.x,x.x,M),n.initCatmullRom(d.y,p.y,g.y,x.y,M),i.initCatmullRom(d.z,p.z,g.z,x.z,M)}var T=new k(t.calc(u),n.calc(u),i.calc(u));return T})}(),zI=$n.create(function(e){console.warn("THREE.SplineCurve3 will be deprecated. Please use THREE.CatmullRomCurve3"),this.points=e===void 0?[]:e},function(e){var t=this.points,n=(t.length-1)*e,i=Math.floor(n),r=n-i,a=t[i==0?i:i-1],o=t[i],l=t[i>t.length-2?t.length-1:i+1],h=t[i>t.length-3?t.length-1:i+2],u=Bc.interpolate;return new k(u(a.x,o.x,l.x,h.x,r),u(a.y,o.y,l.y,h.y,r),u(a.z,o.z,l.z,h.z,r))}),GI=$n.create(function(e,t,n,i){this.v0=e,this.v1=t,this.v2=n,this.v3=i},function(e){var t=Fn.b3;return new k(t(e,this.v0.x,this.v1.x,this.v2.x,this.v3.x),t(e,this.v0.y,this.v1.y,this.v2.y,this.v3.y),t(e,this.v0.z,this.v1.z,this.v2.z,this.v3.z))}),HI=$n.create(function(e,t,n){this.v0=e,this.v1=t,this.v2=n},function(e){var t=Fn.b2;return new k(t(e,this.v0.x,this.v1.x,this.v2.x),t(e,this.v0.y,this.v1.y,this.v2.y),t(e,this.v0.z,this.v1.z,this.v2.z))}),VI=$n.create(function(e,t){this.v1=e,this.v2=t},function(e){if(e===1)return this.v2.clone();var t=new k;return t.subVectors(this.v2,this.v1),t.multiplyScalar(e),t.add(this.v1),t});function Ch(e,t,n,i,r,a){Gr.call(this,e,t,n,n,i,r,a)}Ch.prototype=Object.create(Gr.prototype);Ch.prototype.constructor=Ch;var kI={createMultiMaterialObject:function(e,t){for(var n=new rc,i=0,r=t.length;i<r;i++)n.add(new Pn(e,t[i]));return n},detach:function(e,t,n){e.applyMatrix(t.matrixWorld),t.remove(e),n.add(e)},attach:function(e,t,n){var i=new xt;i.getInverse(n.matrixWorld),e.applyMatrix(i),t.remove(e),n.add(e)}};function WI(e,t,n,i,r,a,o){return console.warn("THREE.Face4 has been removed. A THREE.Face3 will be created instead."),new Ri(e,t,n,r,a,o)}var XI=0,YI=1;function qI(e){return console.warn("THREE.MeshFaceMaterial has been renamed to THREE.MultiMaterial."),new wc(e)}function $I(e,t){return console.warn("THREE.PointCloud has been renamed to THREE.Points."),new Mo(e,t)}function jI(e){return console.warn("THREE.Particle has been renamed to THREE.Sprite."),new nc(e)}function ZI(e,t){return console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),new Mo(e,t)}function KI(e){return console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),new ir(e)}function JI(e){return console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),new ir(e)}function QI(e){return console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),new ir(e)}function e3(e,t,n){return console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),new k(e,t,n)}function t3(e,t){return console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead."),new je(e,t).setDynamic(!0)}function n3(e,t){return console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),new Zl(e,t)}function i3(e,t){return console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),new Kl(e,t)}function r3(e,t){return console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),new Jl(e,t)}function a3(e,t){return console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),new Ql(e,t)}function s3(e,t){return console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),new Nr(e,t)}function o3(e,t){return console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),new ec(e,t)}function l3(e,t){return console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),new Or(e,t)}function c3(e,t){return console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),new Ut(e,t)}function u3(e,t){return console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),new tc(e,t)}function cy(e){console.warn("THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead."),um.call(this,e),this.type="catmullrom",this.closed=!0}cy.prototype=Object.create(um.prototype);function h3(e,t){return console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),new Jo(e,t)}function f3(e,t){return console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),new on(new Fo(e.geometry),new gn({color:t!==void 0?t:16777215}))}Lc.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")};function d3(e,t){return console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),new on(new wo(e.geometry),new gn({color:t!==void 0?t:16777215}))}function p3(e){return console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),new Xi(e)}Object.assign($l.prototype,{center:function(e){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(e)},empty:function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(e){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},size:function(e){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(e)}});Object.assign(dr.prototype,{center:function(e){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(e)},empty:function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()},isIntersectionBox:function(e){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},isIntersectionSphere:function(e){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)},size:function(e){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(e)}});qa.prototype.center=function(e){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(e)};St.random16=function(){return console.warn("THREE.Math.random16() has been deprecated. Use Math.random() instead."),Math.random()};Object.assign(Vi.prototype,{flattenToArrayOffset:function(e,t){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},multiplyVector3:function(e){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),e.applyMatrix3(this)},multiplyVector3Array:function(e){return console.warn("THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(e)},applyToBuffer:function(e,t,n){return console.warn("THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."),this.applyToBufferAttribute(e)}});Object.assign(xt.prototype,{extractPosition:function(e){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(e)},flattenToArrayOffset:function(e,t){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(e,t)},getPosition:function(){var e;return function(){return e===void 0&&(e=new k),console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),e.setFromMatrixColumn(this,3)}}(),setRotationFromQuaternion:function(e){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(e)},multiplyVector3:function(e){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead."),e.applyProjection(this)},multiplyVector4:function(e){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},multiplyVector3Array:function(e){return console.warn("THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead."),this.applyToVector3Array(e)},rotateAxis:function(e){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),e.transformDirection(this)},crossVector:function(e){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),e.applyMatrix4(this)},translate:function(){console.error("THREE.Matrix4: .translate() has been removed.")},rotateX:function(){console.error("THREE.Matrix4: .rotateX() has been removed.")},rotateY:function(){console.error("THREE.Matrix4: .rotateY() has been removed.")},rotateZ:function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")},rotateByAxis:function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")},applyToBuffer:function(e,t,n){return console.warn("THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead."),this.applyToBufferAttribute(e)}});wi.prototype.isIntersectionLine=function(e){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(e)};bn.prototype.multiplyVector3=function(e){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),e.applyQuaternion(this)};Object.assign(_a.prototype,{isIntersectionBox:function(e){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(e)},isIntersectionPlane:function(e){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(e)},isIntersectionSphere:function(e){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(e)}});Object.assign(ja.prototype,{extrude:function(e){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new ki(this,e)},makeGeometry:function(e){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new Io(this,e)}});Object.assign(k.prototype,{setEulerFromRotationMatrix:function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")},setEulerFromQuaternion:function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")},getPositionFromMatrix:function(e){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(e)},getScaleFromMatrix:function(e){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(e)},getColumnFromMatrix:function(e,t){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(t,e)}});Mt.prototype.computeTangents=function(){console.warn("THREE.Geometry: .computeTangents() has been removed.")};Object.assign(it.prototype,{getChildByName:function(e){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(e)},renderDepth:function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")},translate:function(e,t){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(t,e)}});Object.defineProperties(it.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(e){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=e}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});Object.defineProperties(ic.prototype,{objects:{get:function(){return console.warn("THREE.LOD: .objects has been renamed to .levels."),this.levels}}});Wn.prototype.setLens=function(e,t){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),t!==void 0&&(this.filmGauge=t),this.setFocalLength(e)};Object.defineProperties(_n.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(e){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=e}},shadowCameraLeft:{set:function(e){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=e}},shadowCameraRight:{set:function(e){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=e}},shadowCameraTop:{set:function(e){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=e}},shadowCameraBottom:{set:function(e){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=e}},shadowCameraNear:{set:function(e){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=e}},shadowCameraFar:{set:function(e){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=e}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(e){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=e}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(e){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=e}},shadowMapHeight:{set:function(e){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=e}}});Object.defineProperties(je.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}}});Object.assign(ft.prototype,{addIndex:function(e){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(e)},addDrawCall:function(e,t,n){n!==void 0&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(e,t)},clearDrawCalls:function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()},computeTangents:function(){console.warn("THREE.BufferGeometry: .computeTangents() has been removed.")},computeOffsets:function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")}});Object.defineProperties(ft.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}});Object.defineProperties(Ah.prototype,{dynamic:{set:function(){console.warn("THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.")}},onUpdate:{value:function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this}}});Object.defineProperties(Ct.prototype,{wrapAround:{get:function(){console.warn("THREE."+this.type+": .wrapAround has been removed.")},set:function(){console.warn("THREE."+this.type+": .wrapAround has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE."+this.type+": .wrapRGB has been removed."),new dt}}});Object.defineProperties(rr.prototype,{metal:{get:function(){return console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead."),!1},set:function(){console.warn("THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead")}}});Object.defineProperties(ii.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(e){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=e}}});Hi.prototype=Object.assign(Object.create({constructor:Hi,apply:function(e){console.warn("THREE.EventDispatcher: .apply is deprecated, just inherit or Object.assign the prototype to mix-in."),Object.assign(e,this)}}),Hi.prototype);Object.assign(Kp.prototype,{supportsFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")},supportsHalfFloatTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")},supportsStandardDerivatives:function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")},supportsCompressedTextureS3TC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")},supportsCompressedTexturePVRTC:function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")},supportsBlendMinMax:function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")},supportsVertexTextures:function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures},supportsInstancedArrays:function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")},enableScissorTest:function(e){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(e)},initMaterial:function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")},addPrePlugin:function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")},addPostPlugin:function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")},updateShadowMap:function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")}});Object.defineProperties(Kp.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=e}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=e}},shadowMapCullFace:{get:function(){return this.shadowMap.cullFace},set:function(e){console.warn("THREE.WebGLRenderer: .shadowMapCullFace is now .shadowMap.cullFace."),this.shadowMap.cullFace=e}}});Object.defineProperties(ey.prototype,{cullFace:{get:function(){return this.renderReverseSided?Pp:Hl},set:function(e){var t=e!==Hl;console.warn("WebGLRenderer: .shadowMap.cullFace is deprecated. Set .shadowMap.renderReverseSided to "+t+"."),this.renderReverseSided=t}}});Object.defineProperties(al.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=e}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(e){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=e}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=e}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(e){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=e}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(e){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=e}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(e){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=e}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(e){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=e}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(e){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=e}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(e){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=e}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(e){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=e}}});Vo.prototype.load=function(e){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");var t=this,n=new om;return n.load(e,function(i){t.setBuffer(i)}),this};lm.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()};var m3={merge:function(e,t,n){console.warn("THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.");var i;t.isMesh&&(t.matrixAutoUpdate&&t.updateMatrix(),i=t.matrix,t=t.geometry),e.merge(t,i,n)},center:function(e){return console.warn("THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead."),e.center()}},v3={crossOrigin:void 0,loadTexture:function(e,t,n,i){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");var r=new Xh;r.setCrossOrigin(this.crossOrigin);var a=r.load(e,n,void 0,i);return t&&(a.mapping=t),a},loadTextureCube:function(e,t,n,i){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");var r=new em;r.setCrossOrigin(this.crossOrigin);var a=r.load(e,n,void 0,i);return t&&(a.mapping=t),a},loadCompressedTexture:function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")},loadCompressedTextureCube:function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")}};function g3(){console.error("THREE.Projector has been moved to /examples/js/renderers/Projector.js."),this.projectVector=function(e,t){console.warn("THREE.Projector: .projectVector() is now vector.project()."),e.project(t)},this.unprojectVector=function(e,t){console.warn("THREE.Projector: .unprojectVector() is now vector.unproject()."),e.unproject(t)},this.pickingRay=function(){console.error("THREE.Projector: .pickingRay() is now raycaster.setFromCamera().")}}function _3(){console.error("THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js"),this.domElement=document.createElementNS("http://www.w3.org/1999/xhtml","canvas"),this.clear=function(){},this.render=function(){},this.setClearColor=function(){},this.setSize=function(){}}const x3=Object.freeze(Object.defineProperty({__proto__:null,AddEquation:Gp,AddOperation:xx,AdditiveBlending:Np,AlphaFormat:Cx,AlwaysDepth:fx,AmbientLight:_h,AnimationClip:Si,AnimationMixer:cm,AnimationObjectGroup:pp,AnimationUtils:Xn,ArcCurve:Ch,ArrowHelper:_s,Audio:Vo,AudioAnalyser:lm,AudioContext:sm,AudioListener:fp,AudioLoader:om,AxisHelper:Lh,BackSide:pa,BasicDepthPacking:Wx,BasicShadowMap:O2,BinaryTextureLoader:Qp,BlendingMode:Q0,Bone:lh,BooleanKeyframeTrack:wh,BoundingBoxHelper:h3,Box2:$l,Box3:dr,BoxBufferGeometry:ts,BoxGeometry:Oo,BoxHelper:Jo,BufferAttribute:je,BufferGeometry:ft,BufferGeometryLoader:tm,ByteType:Sx,Cache:up,Camera:qn,CameraHelper:Pc,CanvasRenderer:_3,CanvasTexture:hh,CatmullRomCurve3:um,CineonToneMapping:Ex,CircleBufferGeometry:No,CircleGeometry:Ec,ClampToEdgeWrapping:Ti,Clock:xp,ClosedSplineCurve3:cy,Color:dt,ColorKeyframeTrack:Sh,CompressedTexture:Eo,CompressedTextureLoader:iy,ConeBufferGeometry:Mc,ConeGeometry:yc,CubeCamera:bh,CubeGeometry:Oo,CubeReflectionMapping:Gh,CubeRefractionMapping:nh,CubeTexture:ma,CubeTextureLoader:em,CubeUVReflectionMapping:Hh,CubeUVRefractionMapping:Vh,CubicBezierCurve:ms,CubicBezierCurve3:GI,CubicInterpolant:xh,CullFaceBack:Hl,CullFaceFront:Pp,CullFaceFrontBack:F2,CullFaceNone:Z0,Curve:$n,CurvePath:Tc,CurveUtils:Bc,CustomBlending:zp,CylinderBufferGeometry:zr,CylinderGeometry:os,Cylindrical:Mp,DataTexture:es,DataTextureLoader:OI,DefaultLoadingManager:Li,DepthFormat:Ya,DepthStencilFormat:mo,DepthTexture:ac,DirectionalLight:gh,DirectionalLightHelper:Ko,DirectionalLightShadow:vh,DiscreteInterpolant:yh,DodecahedronBufferGeometry:Ao,DodecahedronGeometry:uc,DoubleSide:il,DstAlphaFactor:sx,DstColorFactor:lx,DynamicBufferAttribute:t3,EdgesGeometry:Fo,EdgesHelper:f3,EllipseCurve:Gr,EqualDepth:px,EquirectangularReflectionMapping:Wp,EquirectangularRefractionMapping:ih,Euler:xa,EventDispatcher:Hi,ExtrudeGeometry:ki,Face3:Ri,Face4:WI,FaceColors:Fp,FaceNormalsHelper:Cc,FileLoader:Xi,FlatShading:Dp,Float32Attribute:c3,Float32BufferAttribute:Ut,Float64Attribute:u3,Float64BufferAttribute:tc,FloatType:fo,Fog:yo,FogExp2:xo,Font:am,FontLoader:ay,FrontFaceDirectionCCW:N2,FrontFaceDirectionCW:K0,FrontSide:oo,Frustum:jl,GammaEncoding:jp,Geometry:Mt,GeometryIdCount:Zp,GeometryUtils:m3,GreaterDepth:vx,GreaterEqualDepth:mx,GridHelper:Lc,Group:rc,HalfFloatType:ah,HemisphereLight:fh,HemisphereLightHelper:Zo,IcosahedronBufferGeometry:To,IcosahedronGeometry:cc,ImageLoader:Oc,ImageUtils:v3,ImmediateRenderObject:Ac,InstancedBufferAttribute:Xo,InstancedBufferGeometry:gs,InstancedInterleavedBuffer:Wo,Int16Attribute:a3,Int16BufferAttribute:Ql,Int32Attribute:o3,Int32BufferAttribute:ec,Int8Attribute:n3,Int8BufferAttribute:Zl,IntType:Tx,InterleavedBuffer:ko,InterleavedBufferAttribute:vp,Interpolant:fi,InterpolateDiscrete:Xl,InterpolateLinear:Nl,InterpolateSmooth:Qu,JSONLoader:nm,KeyframeTrack:ds,LOD:ic,LatheBufferGeometry:Uo,LatheGeometry:xc,Layers:sh,LensFlare:cp,LessDepth:dx,LessEqualDepth:th,Light:_n,LightShadow:ys,Line:Br,Line3:qa,LineBasicMaterial:gn,LineCurve:mr,LineCurve3:VI,LineDashedMaterial:fs,LinePieces:YI,LineSegments:on,LineStrip:XI,LinearEncoding:ql,LinearFilter:hi,LinearInterpolant:Sc,LinearMipMapLinearFilter:Nc,LinearMipMapNearestFilter:Yp,LinearToneMapping:kp,Loader:$a,LoadingManager:Jp,LogLuvEncoding:z2,LoopOnce:Ix,LoopPingPong:Nx,LoopRepeat:Fx,LuminanceAlphaFormat:Ux,LuminanceFormat:Px,MOUSE:I2,Material:Ct,MaterialLoader:Yh,Math:St,Matrix3:Vi,Matrix4:xt,MaxEquation:Kd,Mesh:Pn,MeshBasicMaterial:di,MeshDepthMaterial:ga,MeshFaceMaterial:qI,MeshLambertMaterial:hs,MeshNormalMaterial:us,MeshPhongMaterial:rr,MeshPhysicalMaterial:ls,MeshStandardMaterial:pr,MeshToonMaterial:cs,MinEquation:Zd,MirroredRepeatWrapping:Ja,MixOperation:_x,MorphBlendMesh:Nn,MultiMaterial:wc,MultiplyBlending:Bp,MultiplyOperation:Fc,NearestFilter:Ai,NearestMipMapLinearFilter:Wh,NearestMipMapNearestFilter:kh,NeverDepth:hx,NoBlending:Vl,NoColors:Bh,NoToneMapping:Ju,NormalBlending:rl,NotEqualDepth:gx,NumberKeyframeTrack:Ho,Object3D:it,ObjectLoader:ry,OctahedronBufferGeometry:as,OctahedronGeometry:lc,OneFactor:ix,OneMinusDstAlphaFactor:ox,OneMinusDstColorFactor:cx,OneMinusSrcAlphaFactor:Vp,OneMinusSrcColorFactor:ax,OrthographicCamera:_o,PCFShadowMap:Up,PCFSoftShadowMap:J0,ParametricBufferGeometry:So,ParametricGeometry:sc,Particle:jI,ParticleBasicMaterial:JI,ParticleSystem:ZI,ParticleSystemMaterial:QI,Path:zc,PerspectiveCamera:Wn,Plane:wi,PlaneBufferGeometry:ns,PlaneGeometry:_c,PointCloud:$I,PointCloudMaterial:KI,PointLight:mh,PointLightHelper:$o,Points:Mo,PointsMaterial:ir,PolarGridHelper:Rh,PolyhedronBufferGeometry:pi,PolyhedronGeometry:hc,PositionalAudio:dp,Projector:g3,PropertyBinding:fn,PropertyMixer:Th,QuadraticBezierCurve:vs,QuadraticBezierCurve3:HI,Quaternion:bn,QuaternionKeyframeTrack:bc,QuaternionLinearInterpolant:Mh,REVISION:j0,RGBADepthPacking:Xx,RGBAFormat:fr,RGBA_PVRTC_2BPPV1_Format:op,RGBA_PVRTC_4BPPV1_Format:sp,RGBA_S3TC_DXT1_Format:tp,RGBA_S3TC_DXT3_Format:np,RGBA_S3TC_DXT5_Format:ip,RGBDEncoding:kx,RGBEEncoding:Gx,RGBEFormat:B2,RGBFormat:po,RGBM16Encoding:Vx,RGBM7Encoding:Hx,RGB_ETC1_Format:Dx,RGB_PVRTC_2BPPV1_Format:ap,RGB_PVRTC_4BPPV1_Format:rp,RGB_S3TC_DXT1_Format:ep,RawShaderMaterial:zo,Ray:_a,Raycaster:gp,RectAreaLight:hp,RectAreaLightHelper:jo,ReinhardToneMapping:yx,RepeatWrapping:Fr,ReverseSubtractEquation:tx,RingBufferGeometry:Po,RingGeometry:gc,Scene:is,SceneUtils:kI,ShaderChunk:kt,ShaderLib:go,ShaderMaterial:ii,ShadowMaterial:Bo,Shape:ja,ShapeBufferGeometry:Do,ShapeGeometry:Io,ShapePath:rm,ShapeUtils:Fn,ShortType:bx,Skeleton:oh,SkeletonHelper:qo,SkinnedMesh:ch,SmoothShading:Ip,Sphere:Yn,SphereBufferGeometry:ss,SphereGeometry:vc,Spherical:yp,SphericalReflectionMapping:Xp,Spline:BI,SplineCurve:ps,SplineCurve3:zI,SpotLight:ph,SpotLightHelper:Yo,SpotLightShadow:dh,Sprite:nc,SpriteMaterial:rs,SrcAlphaFactor:Hp,SrcAlphaSaturateFactor:ux,SrcColorFactor:rx,StereoCamera:sy,StringKeyframeTrack:Eh,SubtractEquation:ex,SubtractiveBlending:Op,TetrahedronBufferGeometry:bo,TetrahedronGeometry:oc,TextGeometry:mc,Texture:nn,TextureFilter:Qd,TextureLoader:Xh,TextureMapping:wx,TextureWrapping:Jd,TorusBufferGeometry:Co,TorusGeometry:pc,TorusKnotBufferGeometry:Lo,TorusKnotGeometry:dc,Triangle:Gi,TriangleFanDrawMode:Bx,TriangleStripDrawMode:Ox,TrianglesDrawMode:$p,TubeBufferGeometry:Ro,TubeGeometry:fc,UVMapping:zh,Uint16Attribute:s3,Uint16BufferAttribute:Nr,Uint32Attribute:l3,Uint32BufferAttribute:Or,Uint8Attribute:i3,Uint8BufferAttribute:Kl,Uint8ClampedAttribute:r3,Uint8ClampedBufferAttribute:Jl,Uncharted2ToneMapping:Mx,Uniform:Ah,UniformsLib:Tt,UniformsUtils:ci,UnsignedByteType:rh,UnsignedInt248Type:Wl,UnsignedIntType:qp,UnsignedShort4444Type:Ax,UnsignedShort5551Type:Rx,UnsignedShort565Type:Lx,UnsignedShortType:kl,Vector2:Ke,Vector3:k,Vector4:Kt,VectorKeyframeTrack:Go,Vertex:e3,VertexColors:xs,VertexNormalsHelper:Rc,VideoTexture:uh,WebGLRenderTarget:al,WebGLRenderTargetCube:vo,WebGLRenderer:Kp,WireframeGeometry:wo,WireframeHelper:d3,WrapAroundEnding:Yl,XHRLoader:p3,ZeroCurvatureEnding:Qa,ZeroFactor:nx,ZeroSlopeEnding:Ha,sRGBEncoding:zx},Symbol.toStringTag,{value:"Module"})),y3=D2(x3);var M3=sa&&sa.__extends||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n]);function i(){this.constructor=e}e.prototype=t===null?Object.create(t):(i.prototype=t.prototype,new i)},Gt=y3,cn={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_DOLLY:4,TOUCH_PAN:5},r0={type:"change"},Bd={type:"start"},zd={type:"end"},a0=1e-6,E3=function(e){M3(t,e);function t(n,i,r){var a=e.call(this)||this;return a.object=n,a.domElement=i!==void 0?i:document,a.window=r!==void 0?r:window,a.enabled=!0,a.target=new Gt.Vector3,a.minDistance=0,a.maxDistance=1/0,a.minZoom=0,a.maxZoom=1/0,a.minPolarAngle=0,a.maxPolarAngle=Math.PI,a.minAzimuthAngle=-1/0,a.maxAzimuthAngle=1/0,a.enableDamping=!1,a.dampingFactor=.25,a.enableZoom=!0,a.zoomSpeed=1,a.enableRotate=!0,a.rotateSpeed=1,a.enablePan=!0,a.keyPanSpeed=7,a.autoRotate=!1,a.autoRotateSpeed=2,a.enableKeys=!0,a.keys={LEFT:37,UP:38,RIGHT:39,BOTTOM:40},a.mouseButtons={ORBIT:Gt.MOUSE.LEFT,ZOOM:Gt.MOUSE.MIDDLE,PAN:Gt.MOUSE.RIGHT},a.target0=a.target.clone(),a.position0=a.object.position.clone(),a.zoom0=a.object.zoom,a.updateOffset=new Gt.Vector3,a.updateQuat=new Gt.Quaternion().setFromUnitVectors(n.up,new Gt.Vector3(0,1,0)),a.updateQuatInverse=a.updateQuat.clone().inverse(),a.updateLastPosition=new Gt.Vector3,a.updateLastQuaternion=new Gt.Quaternion,a.state=cn.NONE,a.scale=1,a.spherical=new Gt.Spherical,a.sphericalDelta=new Gt.Spherical,a.panOffset=new Gt.Vector3,a.zoomChanged=!1,a.rotateStart=new Gt.Vector2,a.rotateEnd=new Gt.Vector2,a.rotateDelta=new Gt.Vector2,a.panStart=new Gt.Vector2,a.panEnd=new Gt.Vector2,a.panDelta=new Gt.Vector2,a.dollyStart=new Gt.Vector2,a.dollyEnd=new Gt.Vector2,a.dollyDelta=new Gt.Vector2,a.panLeftV=new Gt.Vector3,a.panUpV=new Gt.Vector3,a.panInternalOffset=new Gt.Vector3,a.onMouseDown=function(o){if(a.enabled!==!1){if(o.preventDefault(),o.button===a.mouseButtons.ORBIT){if(a.enableRotate===!1)return;a.rotateStart.set(o.clientX,o.clientY),a.state=cn.ROTATE}else if(o.button===a.mouseButtons.ZOOM){if(a.enableZoom===!1)return;a.dollyStart.set(o.clientX,o.clientY),a.state=cn.DOLLY}else if(o.button===a.mouseButtons.PAN){if(a.enablePan===!1)return;a.panStart.set(o.clientX,o.clientY),a.state=cn.PAN}a.state!==cn.NONE&&(document.addEventListener("mousemove",a.onMouseMove,!1),document.addEventListener("mouseup",a.onMouseUp,!1),a.dispatchEvent(Bd))}},a.onMouseMove=function(o){if(a.enabled!==!1){if(o.preventDefault(),a.state===cn.ROTATE){if(a.enableRotate===!1)return;a.rotateEnd.set(o.clientX,o.clientY),a.rotateDelta.subVectors(a.rotateEnd,a.rotateStart);var l=a.domElement===document?a.domElement.body:a.domElement;a.rotateLeft(2*Math.PI*a.rotateDelta.x/l.clientWidth*a.rotateSpeed),a.rotateUp(2*Math.PI*a.rotateDelta.y/l.clientHeight*a.rotateSpeed),a.rotateStart.copy(a.rotateEnd),a.update()}else if(a.state===cn.DOLLY){if(a.enableZoom===!1)return;a.dollyEnd.set(o.clientX,o.clientY),a.dollyDelta.subVectors(a.dollyEnd,a.dollyStart),a.dollyDelta.y>0?a.dollyIn(a.getZoomScale()):a.dollyDelta.y<0&&a.dollyOut(a.getZoomScale()),a.dollyStart.copy(a.dollyEnd),a.update()}else if(a.state===cn.PAN){if(a.enablePan===!1)return;a.panEnd.set(o.clientX,o.clientY),a.panDelta.subVectors(a.panEnd,a.panStart),a.pan(a.panDelta.x,a.panDelta.y),a.panStart.copy(a.panEnd),a.update()}}},a.onMouseUp=function(o){a.enabled!==!1&&(document.removeEventListener("mousemove",a.onMouseMove,!1),document.removeEventListener("mouseup",a.onMouseUp,!1),a.dispatchEvent(zd),a.state=cn.NONE)},a.onMouseWheel=function(o){a.enabled===!1||a.enableZoom===!1||a.state!==cn.NONE&&a.state!==cn.ROTATE||(o.preventDefault(),o.stopPropagation(),o.deltaY<0?a.dollyOut(a.getZoomScale()):o.deltaY>0&&a.dollyIn(a.getZoomScale()),a.update(),a.dispatchEvent(Bd),a.dispatchEvent(zd))},a.onKeyDown=function(o){if(!(a.enabled===!1||a.enableKeys===!1||a.enablePan===!1))switch(o.keyCode){case a.keys.UP:a.pan(0,a.keyPanSpeed),a.update();break;case a.keys.BOTTOM:a.pan(0,-a.keyPanSpeed),a.update();break;case a.keys.LEFT:a.pan(a.keyPanSpeed,0),a.update();break;case a.keys.RIGHT:a.pan(-a.keyPanSpeed,0),a.update();break}},a.onTouchStart=function(o){if(a.enabled!==!1){switch(o.touches.length){case 1:{if(a.enableRotate===!1)return;a.rotateStart.set(o.touches[0].pageX,o.touches[0].pageY),a.state=cn.TOUCH_ROTATE}break;case 2:{if(a.enableZoom===!1)return;var l=o.touches[0].pageX-o.touches[1].pageX,h=o.touches[0].pageY-o.touches[1].pageY,u=Math.sqrt(l*l+h*h);a.dollyStart.set(0,u),a.state=cn.TOUCH_DOLLY}break;case 3:{if(a.enablePan===!1)return;a.panStart.set(o.touches[0].pageX,o.touches[0].pageY),a.state=cn.TOUCH_PAN}break;default:a.state=cn.NONE}a.state!==cn.NONE&&a.dispatchEvent(Bd)}},a.onTouchMove=function(o){if(a.enabled!==!1)switch(o.preventDefault(),o.stopPropagation(),o.touches.length){case 1:{if(a.enableRotate===!1||a.state!==cn.TOUCH_ROTATE)return;a.rotateEnd.set(o.touches[0].pageX,o.touches[0].pageY),a.rotateDelta.subVectors(a.rotateEnd,a.rotateStart);var l=a.domElement===document?a.domElement.body:a.domElement;a.rotateLeft(2*Math.PI*a.rotateDelta.x/l.clientWidth*a.rotateSpeed),a.rotateUp(2*Math.PI*a.rotateDelta.y/l.clientHeight*a.rotateSpeed),a.rotateStart.copy(a.rotateEnd),a.update()}break;case 2:{if(a.enableZoom===!1||a.state!==cn.TOUCH_DOLLY)return;var h=o.touches[0].pageX-o.touches[1].pageX,u=o.touches[0].pageY-o.touches[1].pageY,f=Math.sqrt(h*h+u*u);a.dollyEnd.set(0,f),a.dollyDelta.subVectors(a.dollyEnd,a.dollyStart),a.dollyDelta.y>0?a.dollyOut(a.getZoomScale()):a.dollyDelta.y<0&&a.dollyIn(a.getZoomScale()),a.dollyStart.copy(a.dollyEnd),a.update()}break;case 3:{if(a.enablePan===!1||a.state!==cn.TOUCH_PAN)return;a.panEnd.set(o.touches[0].pageX,o.touches[0].pageY),a.panDelta.subVectors(a.panEnd,a.panStart),a.pan(a.panDelta.x,a.panDelta.y),a.panStart.copy(a.panEnd),a.update()}break;default:a.state=cn.NONE}},a.onTouchEnd=function(o){a.enabled!==!1&&(a.dispatchEvent(zd),a.state=cn.NONE)},a.onContextMenu=function(o){o.preventDefault()},a.domElement.addEventListener("contextmenu",a.onContextMenu,!1),a.domElement.addEventListener("mousedown",a.onMouseDown,!1),a.domElement.addEventListener("wheel",a.onMouseWheel,!1),a.domElement.addEventListener("touchstart",a.onTouchStart,!1),a.domElement.addEventListener("touchend",a.onTouchEnd,!1),a.domElement.addEventListener("touchmove",a.onTouchMove,!1),a.window.addEventListener("keydown",a.onKeyDown,!1),a.update(),a}return t.prototype.update=function(){var n=this.object.position;return this.updateOffset.copy(n).sub(this.target),this.updateOffset.applyQuaternion(this.updateQuat),this.spherical.setFromVector3(this.updateOffset),this.autoRotate&&this.state===cn.NONE&&this.rotateLeft(this.getAutoRotationAngle()),this.spherical.theta+=this.sphericalDelta.theta,this.spherical.phi+=this.sphericalDelta.phi,this.spherical.theta=Math.max(this.minAzimuthAngle,Math.min(this.maxAzimuthAngle,this.spherical.theta)),this.spherical.phi=Math.max(this.minPolarAngle,Math.min(this.maxPolarAngle,this.spherical.phi)),this.spherical.makeSafe(),this.spherical.radius*=this.scale,this.spherical.radius=Math.max(this.minDistance,Math.min(this.maxDistance,this.spherical.radius)),this.target.add(this.panOffset),this.updateOffset.setFromSpherical(this.spherical),this.updateOffset.applyQuaternion(this.updateQuatInverse),n.copy(this.target).add(this.updateOffset),this.object.lookAt(this.target),this.enableDamping===!0?(this.sphericalDelta.theta*=1-this.dampingFactor,this.sphericalDelta.phi*=1-this.dampingFactor):this.sphericalDelta.set(0,0,0),this.scale=1,this.panOffset.set(0,0,0),this.zoomChanged||this.updateLastPosition.distanceToSquared(this.object.position)>a0||8*(1-this.updateLastQuaternion.dot(this.object.quaternion))>a0?(this.dispatchEvent(r0),this.updateLastPosition.copy(this.object.position),this.updateLastQuaternion.copy(this.object.quaternion),this.zoomChanged=!1,!0):!1},t.prototype.panLeft=function(n,i){this.panLeftV.setFromMatrixColumn(i,0),this.panLeftV.multiplyScalar(-n),this.panOffset.add(this.panLeftV)},t.prototype.panUp=function(n,i){this.panUpV.setFromMatrixColumn(i,1),this.panUpV.multiplyScalar(n),this.panOffset.add(this.panUpV)},t.prototype.pan=function(n,i){var r=this.domElement===document?this.domElement.body:this.domElement;if(this.object instanceof Gt.PerspectiveCamera){var a=this.object.position;this.panInternalOffset.copy(a).sub(this.target);var o=this.panInternalOffset.length();o*=Math.tan(this.object.fov/2*Math.PI/180),this.panLeft(2*n*o/r.clientHeight,this.object.matrix),this.panUp(2*i*o/r.clientHeight,this.object.matrix)}else this.object instanceof Gt.OrthographicCamera?(this.panLeft(n*(this.object.right-this.object.left)/this.object.zoom/r.clientWidth,this.object.matrix),this.panUp(i*(this.object.top-this.object.bottom)/this.object.zoom/r.clientHeight,this.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),this.enablePan=!1)},t.prototype.dollyIn=function(n){this.object instanceof Gt.PerspectiveCamera?this.scale/=n:this.object instanceof Gt.OrthographicCamera?(this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom*n)),this.object.updateProjectionMatrix(),this.zoomChanged=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)},t.prototype.dollyOut=function(n){this.object instanceof Gt.PerspectiveCamera?this.scale*=n:this.object instanceof Gt.OrthographicCamera?(this.object.zoom=Math.max(this.minZoom,Math.min(this.maxZoom,this.object.zoom/n)),this.object.updateProjectionMatrix(),this.zoomChanged=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),this.enableZoom=!1)},t.prototype.getAutoRotationAngle=function(){return 2*Math.PI/60/60*this.autoRotateSpeed},t.prototype.getZoomScale=function(){return Math.pow(.95,this.zoomSpeed)},t.prototype.rotateLeft=function(n){this.sphericalDelta.theta-=n},t.prototype.rotateUp=function(n){this.sphericalDelta.phi-=n},t.prototype.getPolarAngle=function(){return this.spherical.phi},t.prototype.getAzimuthalAngle=function(){return this.spherical.theta},t.prototype.dispose=function(){this.domElement.removeEventListener("contextmenu",this.onContextMenu,!1),this.domElement.removeEventListener("mousedown",this.onMouseDown,!1),this.domElement.removeEventListener("wheel",this.onMouseWheel,!1),this.domElement.removeEventListener("touchstart",this.onTouchStart,!1),this.domElement.removeEventListener("touchend",this.onTouchEnd,!1),this.domElement.removeEventListener("touchmove",this.onTouchMove,!1),document.removeEventListener("mousemove",this.onMouseMove,!1),document.removeEventListener("mouseup",this.onMouseUp,!1),this.window.removeEventListener("keydown",this.onKeyDown,!1)},t.prototype.reset=function(){this.target.copy(this.target0),this.object.position.copy(this.position0),this.object.zoom=this.zoom0,this.object.updateProjectionMatrix(),this.dispatchEvent(r0),this.update(),this.state=cn.NONE},Object.defineProperty(t.prototype,"center",{get:function(){return console.warn("THREE.OrbitControls: .center has been renamed to .target"),this.target},enumerable:!0,configurable:!0}),Object.defineProperty(t.prototype,"noZoom",{get:function(){return console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."),!this.enableZoom},set:function(n){console.warn("THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead."),this.enableZoom=!n},enumerable:!0,configurable:!0}),t}(Gt.EventDispatcher),w3=E3,Ol=function(){var e=0,t=document.createElement("div");t.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",t.addEventListener("click",function(f){f.preventDefault(),i(++e%t.children.length)},!1);function n(f){return t.appendChild(f.dom),f}function i(f){for(var d=0;d<t.children.length;d++)t.children[d].style.display=d===f?"block":"none";e=f}var r=(performance||Date).now(),a=r,o=0,l=n(new Ol.Panel("FPS","#0ff","#002")),h=n(new Ol.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var u=n(new Ol.Panel("MB","#f08","#201"));return i(0),{REVISION:16,dom:t,addPanel:n,showPanel:i,begin:function(){r=(performance||Date).now()},end:function(){o++;var f=(performance||Date).now();if(h.update(f-r,200),f>=a+1e3&&(l.update(o*1e3/(f-a),100),a=f,o=0,u)){var d=performance.memory;u.update(d.usedJSHeapSize/1048576,d.jsHeapSizeLimit/1048576)}return f},update:function(){r=this.end()},domElement:t,setMode:i}};Ol.Panel=function(e,t,n){var i=1/0,r=0,a=Math.round,o=a(window.devicePixelRatio||1),l=80*o,h=48*o,u=3*o,f=2*o,d=3*o,p=15*o,g=74*o,x=30*o,y=document.createElement("canvas");y.width=l,y.height=h,y.style.cssText="width:80px;height:48px";var _=y.getContext("2d");return _.font="bold "+9*o+"px Helvetica,Arial,sans-serif",_.textBaseline="top",_.fillStyle=n,_.fillRect(0,0,l,h),_.fillStyle=t,_.fillText(e,u,f),_.fillRect(d,p,g,x),_.fillStyle=n,_.globalAlpha=.9,_.fillRect(d,p,g,x),{dom:y,update:function(v,w){i=Math.min(i,v),r=Math.max(r,v),_.fillStyle=n,_.globalAlpha=1,_.fillRect(0,0,l,p),_.fillStyle=t,_.fillText(a(v)+" "+e+" ("+a(i)+"-"+a(r)+")",u,f),_.drawImage(y,d+o,p,g-o,x,d,p,g-o,x),_.fillRect(d+g-o,p,o,x),_.fillStyle=n,_.globalAlpha=.9,_.fillRect(d+g-o,p,o,a((1-v/w)*x))}}};const S3=Ol,vn=Object.freeze({ball:Object.freeze({bounciness:.8,launchForce:5.4,radius:8,showVelocityVector:!1,traceDuration:5,traceTransparency:.6}),cameraFov:30,defaultPlanetDensity:14e-5,maxPlanetOffset:700,showFPSCounter:!0,showInfoTab:!1,skyboxOpacity:1}),aa=()=>new kn(vn.cameraFov,innerWidth/innerHeight,.1,Math.pow(10,6));class b3 extends Dl{constructor(){super(),this.cameras=[aa(),aa(),aa(),aa(),aa(),aa(),aa(),aa()],this.activeCamera=this.cameras[0],this.lastSwitchDate=Date.now(),this.initializeCameraPositions()}initializeCameraPositions(){const t=vn.maxPlanetOffset+900,n=-t,i=t;this.cameras[0].position.set(n,n/2,n),this.cameras[1].position.set(n,n/2,i),this.cameras[2].position.set(n,i/2,n),this.cameras[3].position.set(n,i/2,i),this.cameras[4].position.set(i,n/2,n),this.cameras[5].position.set(i,n/2,i),this.cameras[6].position.set(i,i/2,n),this.cameras[7].position.set(i,i/2,i)}selectActiveCamera(t){if(Date.now()-this.lastSwitchDate<3e3)return;const r=+(t.x>0)*4+ +(t.y>0)*2+ +(t.z>0)*1;this.lastSwitchDate=Date.now(),this.activeCamera=this.cameras[r]}updateActiveCamera(t){this.activeCamera.aspect=innerWidth/innerHeight,this.activeCamera.updateProjectionMatrix(),this.activeCamera.lookAt(t)}getActiveCamera(){return this.activeCamera}update(t){this.selectActiveCamera(t),this.updateActiveCamera(t)}}function T3(e){const t=new tl({color:"rgb(0,0,0)",side:ti}),n=32,i=32,r=1;return new bi(new Oh(e+r,n,i),t)}class uy extends bi{constructor({radius:t,color:n="rgb(255,0,0)",density:i=vn.defaultPlanetDensity}){super(new Oh(t,32,32),new E2({color:n})),this.radius=t,this.density=i,this.add(T3(t))}get mass(){const t=Math.PI*4/3;return this.density*this.radius**3*t}}class A3{constructor(t){this.scene=t}getPlanets(){return this.scene.children.filter(t=>t instanceof uy)}getLines(){return this.scene.children.filter(t=>t instanceof Lp)}}const hy=document.getElementById("infoTab__text"),R3={updateText(e){const t=`Ball: {
	position: {
		x: ${e.position.x.toFixed(0)},
		y: ${e.position.y.toFixed(0)},
		z: ${e.position.z.toFixed(0)}
	},
	velocity: {
		length: ${e.velocity.length().toFixed(2)},
		x: ${e.velocity.x.toFixed(2)},
		y: ${e.velocity.y.toFixed(2)},
		z: ${e.velocity.z.toFixed(2)}
	}
}`;hy.innerHTML=t}};vn.showInfoTab||(hy.style.display="none");const fy={ballHit:(e=1)=>s0("audio-ping-pong-ball-hit",{volume:e}),ballFlightStart:(e=.5)=>s0("audio-ball-flight-start",{volume:e,startTimeMS:800,stopTimeMS:1e3})};function s0(e,{volume:t=1,startTimeMS:n=0,stopTimeMS:i}){const r=document.getElementById(e);if(!r)throw new Error(`Audio not found: ${e}`);r.pause(),r.volume=t,r.currentTime=n/1e3,r.play(),typeof i=="number"&&setTimeout(function(){r.pause()},i)}function L3(e){const t=new ce(Math.random(),Math.random(),Math.random()).normalize().multiplyScalar(vn.ball.launchForce);e.isOnPlanet=!1,e.velocity=t,fy.ballFlightStart()}var Ep={exports:{}};(function(e,t){(function(n,i){{var r=i();e&&e.exports&&(t=e.exports=r),t.randomColor=r}})(sa,function(){var n=null,i={};v();var r=[],a=function(b){if(b=b||{},b.seed!==void 0&&b.seed!==null&&b.seed===parseInt(b.seed,10))n=b.seed;else if(typeof b.seed=="string")n=A(b.seed);else{if(b.seed!==void 0&&b.seed!==null)throw new TypeError("The seed value must be an integer or string");n=null}var U,S,R;if(b.count!==null&&b.count!==void 0){for(var V=b.count,W=[],L=0;L<b.count;L++)r.push(!1);for(b.count=null;V>W.length;){var I=a(b);n!==null&&(b.seed=n),W.push(I)}return b.count=V,W}return U=o(b),S=l(U,b),R=h(U,S,b),u([U,S,R],b)};function o(b){if(r.length>0){var U=P(b.hue),S=x(U),R=(U[1]-U[0])/r.length,V=parseInt((S-U[0])/R);r[V]===!0?V=(V+2)%r.length:r[V]=!0;var W=(U[0]+V*R)%359,L=(U[0]+(V+1)*R)%359;return U=[W,L],S=x(U),S<0&&(S=360+S),S}else{var U=d(b.hue);return S=x(U),S<0&&(S=360+S),S}}function l(b,U){if(U.hue==="monochrome")return 0;if(U.luminosity==="random")return x([0,100]);var S=p(b),R=S[0],V=S[1];switch(U.luminosity){case"bright":R=55;break;case"dark":R=V-10;break;case"light":V=55;break}return x([R,V])}function h(b,U,S){var R=f(b,U),V=100;switch(S.luminosity){case"dark":V=R+20;break;case"light":R=(V+R)/2;break;case"random":R=0,V=100;break}return x([R,V])}function u(b,U){switch(U.format){case"hsvArray":return b;case"hslArray":return T(b);case"hsl":var S=T(b);return"hsl("+S[0]+", "+S[1]+"%, "+S[2]+"%)";case"hsla":var R=T(b),L=U.alpha||Math.random();return"hsla("+R[0]+", "+R[1]+"%, "+R[2]+"%, "+L+")";case"rgbArray":return w(b);case"rgb":var V=w(b);return"rgb("+V.join(", ")+")";case"rgba":var W=w(b),L=U.alpha||Math.random();return"rgba("+W.join(", ")+", "+L+")";default:return y(b)}}function f(b,U){for(var S=g(b).lowerBounds,R=0;R<S.length-1;R++){var V=S[R][0],W=S[R][1],L=S[R+1][0],I=S[R+1][1];if(U>=V&&U<=L){var z=(I-W)/(L-V),X=W-z*V;return z*U+X}}return 0}function d(b){if(typeof parseInt(b)=="number"){var U=parseInt(b);if(U<360&&U>0)return[U,U]}if(typeof b=="string"){if(i[b]){var S=i[b];if(S.hueRange)return S.hueRange}else if(b.match(/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i)){var R=M(b)[0];return[R,R]}}return[0,360]}function p(b){return g(b).saturationRange}function g(b){b>=334&&b<=360&&(b-=360);for(var U in i){var S=i[U];if(S.hueRange&&b>=S.hueRange[0]&&b<=S.hueRange[1])return i[U]}return"Color not found"}function x(b){if(n===null){var U=.618033988749895,S=Math.random();return S+=U,S%=1,Math.floor(b[0]+S*(b[1]+1-b[0]))}else{var R=b[1]||1,V=b[0]||0;n=(n*9301+49297)%233280;var W=n/233280;return Math.floor(V+W*(R-V))}}function y(b){var U=w(b);function S(V){var W=V.toString(16);return W.length==1?"0"+W:W}var R="#"+S(U[0])+S(U[1])+S(U[2]);return R}function _(b,U,S){var R=S[0][0],V=S[S.length-1][0],W=S[S.length-1][1],L=S[0][1];i[b]={hueRange:U,lowerBounds:S,saturationRange:[R,V],brightnessRange:[W,L]}}function v(){_("monochrome",null,[[0,0],[100,0]]),_("red",[-26,18],[[20,100],[30,92],[40,89],[50,85],[60,78],[70,70],[80,60],[90,55],[100,50]]),_("orange",[18,46],[[20,100],[30,93],[40,88],[50,86],[60,85],[70,70],[100,70]]),_("yellow",[46,62],[[25,100],[40,94],[50,89],[60,86],[70,84],[80,82],[90,80],[100,75]]),_("green",[62,178],[[30,100],[40,90],[50,85],[60,81],[70,74],[80,64],[90,50],[100,40]]),_("blue",[178,257],[[20,100],[30,86],[40,80],[50,74],[60,60],[70,52],[80,44],[90,39],[100,35]]),_("purple",[257,282],[[20,100],[30,87],[40,79],[50,70],[60,65],[70,59],[80,52],[90,45],[100,42]]),_("pink",[282,334],[[20,100],[30,90],[40,86],[60,84],[80,80],[90,75],[100,73]])}function w(b){var U=b[0];U===0&&(U=1),U===360&&(U=359),U=U/360;var S=b[1]/100,R=b[2]/100,V=Math.floor(U*6),W=U*6-V,L=R*(1-S),I=R*(1-W*S),z=R*(1-(1-W)*S),X=256,Y=256,$=256;switch(V){case 0:X=R,Y=z,$=L;break;case 1:X=I,Y=R,$=L;break;case 2:X=L,Y=R,$=z;break;case 3:X=L,Y=I,$=R;break;case 4:X=z,Y=L,$=R;break;case 5:X=R,Y=L,$=I;break}var ne=[Math.floor(X*255),Math.floor(Y*255),Math.floor($*255)];return ne}function M(b){b=b.replace(/^#/,""),b=b.length===3?b.replace(/(.)/g,"$1$1"):b;var U=parseInt(b.substr(0,2),16)/255,S=parseInt(b.substr(2,2),16)/255,R=parseInt(b.substr(4,2),16)/255,V=Math.max(U,S,R),W=V-Math.min(U,S,R),L=V?W/V:0;switch(V){case U:return[60*((S-R)/W%6)||0,L,V];case S:return[60*((R-U)/W+2)||0,L,V];case R:return[60*((U-S)/W+4)||0,L,V]}}function T(b){var U=b[0],S=b[1]/100,R=b[2]/100,V=(2-S)*R;return[U,Math.round(S*R/(V<1?V:2-V)*1e4)/100,V/2*100]}function A(b){for(var U=0,S=0;S!==b.length&&!(U>=Number.MAX_SAFE_INTEGER);S++)U+=b.charCodeAt(S);return U}function P(b){if(isNaN(b)){if(typeof b=="string"){if(i[b]){var S=i[b];if(S.hueRange)return S.hueRange}else if(b.match(/^#?([0-9A-F]{3}|[0-9A-F]{6})$/i)){var R=M(b)[0];return g(R).hueRange}}}else{var U=parseInt(b);if(U<360&&U>0)return g(b).hueRange}return[0,360]}return a})})(Ep,Ep.exports);var C3=Ep.exports;const dy=U2(C3);function P3(e){return new Oh(e,32,32)}function U3(e){return new tl({color:e})}class D3 extends bi{constructor({radius:t=vn.ball.radius}={}){const n=dy({luminosity:"dark",alpha:1});super(P3(t),U3(n)),this._velocity=new ce(0,0,0),this.arrowHelper=new P2(new ce,new ce),this.pathVertices=[],this.camera=new kn(30),this.launchBallTimeout=null,this.isOnPlanet=!1,this.mass=3,this.light=new $0(n,16e3,1e4),this.color=n,this.radius=t,vn.ball.showVelocityVector&&this.add(this.arrowHelper),this.add(this.camera),this.add(this.light)}updateArrowHelper(){this.arrowHelper.setDirection(this.velocity.normalize()),this.arrowHelper.setLength(this.velocity.length()*20)}get velocity(){return this._velocity.clone()}set velocity(t){this._velocity=t}addVelocity(t){this._velocity.add(t)}createTrace(){const t=new Rp({color:16755200,opacity:vn.ball.traceTransparency,transparent:!0}),n=new gr().setFromPoints(this.pathVertices);return new Lp(n,t)}tick(){this.isOnPlanet&&(this.velocity=new ce,this.launchBallTimeout||(this.launchBallTimeout=window.setTimeout(()=>{L3(this),this.launchBallTimeout=null},1e3))),this.rotation.set(0,0,0),this.position.add(this.velocity);const t=this.velocity.normalize();this.rotation.set(t.x,t.y,t.z),this.updateArrowHelper(),this.pathVertices.push(this.position.clone()),this.updateCameraPosition(),setTimeout(()=>{this.pathVertices.shift()},vn.ball.traceDuration*1e3)}updateCameraPosition(){this.camera.position.setY(400),this.camera.lookAt(this.position)}}class I3 extends bi{constructor(){super(new Fh,[]),this.init()}async init(){const n=await new T2().loadAsync(`${document.baseURI}public/assets/gfx/sphere-skybox.jpg`),i=new tl({side:cr,map:n,opacity:vn.skyboxOpacity,transparent:!0,color:new Ht(.15,.2,.4)}),r=10**5.8,a=new Oh(r);this.geometry=a,this.material=i}}function F3(e,t){return e.position.distanceTo(t.position)<=e.radius+t.radius}function N3({pulled:e,puller:t,timeDelta:n}){const i=t.position.clone().sub(e.position),r=t.position.distanceTo(e.position);return i.normalize().multiplyScalar(t.mass).multiplyScalar(e.mass).multiplyScalar(n*100).divideScalar(r**2)}function O3({staticSphere:e,movingSphere:t,onBounceVelocityMultiplier:n=vn.ball.bounciness}){const i=t.position.clone().sub(e.position).normalize(),r=i.dot(t.velocity);return t.velocity.clone().sub(i.clone().multiplyScalar(2*r)).multiplyScalar(n)}function B3(e,t){const n=e.position.clone().sub(t.position).normalize().multiplyScalar(t.radius+e.radius),i=t.position.clone().add(n);console.log({directionVector:n,newBallPosition:i}),e.position.set(i.x,i.y,i.z)}var Ph={exports:{}};/**
 * @license
 * Lodash <https://lodash.com/>
 * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
 * Released under MIT license <https://lodash.com/license>
 * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
 * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
 */Ph.exports;(function(e,t){(function(){var n,i="4.17.21",r=200,a="Unsupported core-js use. Try https://npms.io/search?q=ponyfill.",o="Expected a function",l="Invalid `variable` option passed into `_.template`",h="__lodash_hash_undefined__",u=500,f="__lodash_placeholder__",d=1,p=2,g=4,x=1,y=2,_=1,v=2,w=4,M=8,T=16,A=32,P=64,b=128,U=256,S=512,R=30,V="...",W=800,L=16,I=1,z=2,X=3,Y=1/0,$=9007199254740991,ne=17976931348623157e292,ae=0/0,j=4294967295,K=j-1,Q=j>>>1,he=[["ary",b],["bind",_],["bindKey",v],["curry",M],["curryRight",T],["flip",S],["partial",A],["partialRight",P],["rearg",U]],me="[object Arguments]",ge="[object Array]",Pe="[object AsyncFunction]",we="[object Boolean]",Se="[object Date]",ht="[object DOMException]",J="[object Error]",se="[object Function]",Qe="[object GeneratorFunction]",ze="[object Map]",Re="[object Number]",et="[object Null]",qe="[object Object]",We="[object Promise]",tt="[object Proxy]",ot="[object RegExp]",pt="[object Set]",Dt="[object String]",G="[object Symbol]",N="[object Undefined]",ue="[object WeakMap]",Ce="[object WeakSet]",be="[object ArrayBuffer]",Fe="[object DataView]",st="[object Float32Array]",Ge="[object Float64Array]",ve="[object Int8Array]",ie="[object Int16Array]",Ue="[object Int32Array]",Ne="[object Uint8Array]",Ve="[object Uint8ClampedArray]",Le="[object Uint16Array]",rt="[object Uint32Array]",Et=/\b__p \+= '';/g,ee=/\b(__p \+=) '' \+/g,Xe=/(__e\(.*?\)|\b__t\)) \+\n'';/g,fe=/&(?:amp|lt|gt|quot|#39);/g,Oe=/[&<>"']/g,Ye=RegExp(fe.source),Ft=RegExp(Oe.source),qt=/<%-([\s\S]+?)%>/g,Qt=/<%([\s\S]+?)%>/g,On=/<%=([\s\S]+?)%>/g,Xt=/\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/,jn=/^\w*$/,xn=/[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g,Vr=/[\\^$.*+?()[\]{}|]/g,ya=RegExp(Vr.source),Ma=/^\s+/,kr=/\s/,Es=/\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/,Wr=/\{\n\/\* \[wrapped with (.+)\] \*/,Ea=/,? & /,ol=/[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g,ws=/[()=,{}\[\]\/\s]/,ll=/\\(\\)?/g,H=/\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g,de=/\w*$/,ye=/^[-+]0x[0-9a-f]+$/i,pe=/^0b[01]+$/i,Me=/^\[object .+?Constructor\]$/,nt=/^0o[0-7]+$/i,C=/^(?:0|[1-9]\d*)$/,B=/[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g,Z=/($^)/,xe=/['\n\r\u2028\u2029\\]/g,re="\\ud800-\\udfff",Be="\\u0300-\\u036f",ct="\\ufe20-\\ufe2f",He="\\u20d0-\\u20ff",mt=Be+ct+He,lt="\\u2700-\\u27bf",ke="a-z\\xdf-\\xf6\\xf8-\\xff",De="\\xac\\xb1\\xd7\\xf7",$t="\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf",yt="\\u2000-\\u206f",en=" \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000",Bn="A-Z\\xc0-\\xd6\\xd8-\\xde",jt="\\ufe0e\\ufe0f",yn=De+$t+yt+en,$e="['’]",rn="["+re+"]",Un="["+yn+"]",dn="["+mt+"]",Xr="\\d+",Ss="["+lt+"]",wa="["+ke+"]",bs="[^"+re+yn+Xr+lt+ke+Bn+"]",cl="\\ud83c[\\udffb-\\udfff]",ul="(?:"+dn+"|"+cl+")",Ts="[^"+re+"]",qh="(?:\\ud83c[\\udde6-\\uddff]){2}",$h="[\\ud800-\\udbff][\\udc00-\\udfff]",As="["+Bn+"]",hm="\\u200d",fm="(?:"+wa+"|"+bs+")",py="(?:"+As+"|"+bs+")",dm="(?:"+$e+"(?:d|ll|m|re|s|t|ve))?",pm="(?:"+$e+"(?:D|LL|M|RE|S|T|VE))?",mm=ul+"?",vm="["+jt+"]?",my="(?:"+hm+"(?:"+[Ts,qh,$h].join("|")+")"+vm+mm+")*",vy="\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])",gy="\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])",gm=vm+mm+my,_y="(?:"+[Ss,qh,$h].join("|")+")"+gm,xy="(?:"+[Ts+dn+"?",dn,qh,$h,rn].join("|")+")",yy=RegExp($e,"g"),My=RegExp(dn,"g"),jh=RegExp(cl+"(?="+cl+")|"+xy+gm,"g"),Ey=RegExp([As+"?"+wa+"+"+dm+"(?="+[Un,As,"$"].join("|")+")",py+"+"+pm+"(?="+[Un,As+fm,"$"].join("|")+")",As+"?"+fm+"+"+dm,As+"+"+pm,gy,vy,Xr,_y].join("|"),"g"),wy=RegExp("["+hm+re+mt+jt+"]"),Sy=/[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/,by=["Array","Buffer","DataView","Date","Error","Float32Array","Float64Array","Function","Int8Array","Int16Array","Int32Array","Map","Math","Object","Promise","RegExp","Set","String","Symbol","TypeError","Uint8Array","Uint8ClampedArray","Uint16Array","Uint32Array","WeakMap","_","clearTimeout","isFinite","parseInt","setTimeout"],Ty=-1,tn={};tn[st]=tn[Ge]=tn[ve]=tn[ie]=tn[Ue]=tn[Ne]=tn[Ve]=tn[Le]=tn[rt]=!0,tn[me]=tn[ge]=tn[be]=tn[we]=tn[Fe]=tn[Se]=tn[J]=tn[se]=tn[ze]=tn[Re]=tn[qe]=tn[ot]=tn[pt]=tn[Dt]=tn[ue]=!1;var Jt={};Jt[me]=Jt[ge]=Jt[be]=Jt[Fe]=Jt[we]=Jt[Se]=Jt[st]=Jt[Ge]=Jt[ve]=Jt[ie]=Jt[Ue]=Jt[ze]=Jt[Re]=Jt[qe]=Jt[ot]=Jt[pt]=Jt[Dt]=Jt[G]=Jt[Ne]=Jt[Ve]=Jt[Le]=Jt[rt]=!0,Jt[J]=Jt[se]=Jt[ue]=!1;var Ay={À:"A",Á:"A",Â:"A",Ã:"A",Ä:"A",Å:"A",à:"a",á:"a",â:"a",ã:"a",ä:"a",å:"a",Ç:"C",ç:"c",Ð:"D",ð:"d",È:"E",É:"E",Ê:"E",Ë:"E",è:"e",é:"e",ê:"e",ë:"e",Ì:"I",Í:"I",Î:"I",Ï:"I",ì:"i",í:"i",î:"i",ï:"i",Ñ:"N",ñ:"n",Ò:"O",Ó:"O",Ô:"O",Õ:"O",Ö:"O",Ø:"O",ò:"o",ó:"o",ô:"o",õ:"o",ö:"o",ø:"o",Ù:"U",Ú:"U",Û:"U",Ü:"U",ù:"u",ú:"u",û:"u",ü:"u",Ý:"Y",ý:"y",ÿ:"y",Æ:"Ae",æ:"ae",Þ:"Th",þ:"th",ß:"ss",Ā:"A",Ă:"A",Ą:"A",ā:"a",ă:"a",ą:"a",Ć:"C",Ĉ:"C",Ċ:"C",Č:"C",ć:"c",ĉ:"c",ċ:"c",č:"c",Ď:"D",Đ:"D",ď:"d",đ:"d",Ē:"E",Ĕ:"E",Ė:"E",Ę:"E",Ě:"E",ē:"e",ĕ:"e",ė:"e",ę:"e",ě:"e",Ĝ:"G",Ğ:"G",Ġ:"G",Ģ:"G",ĝ:"g",ğ:"g",ġ:"g",ģ:"g",Ĥ:"H",Ħ:"H",ĥ:"h",ħ:"h",Ĩ:"I",Ī:"I",Ĭ:"I",Į:"I",İ:"I",ĩ:"i",ī:"i",ĭ:"i",į:"i",ı:"i",Ĵ:"J",ĵ:"j",Ķ:"K",ķ:"k",ĸ:"k",Ĺ:"L",Ļ:"L",Ľ:"L",Ŀ:"L",Ł:"L",ĺ:"l",ļ:"l",ľ:"l",ŀ:"l",ł:"l",Ń:"N",Ņ:"N",Ň:"N",Ŋ:"N",ń:"n",ņ:"n",ň:"n",ŋ:"n",Ō:"O",Ŏ:"O",Ő:"O",ō:"o",ŏ:"o",ő:"o",Ŕ:"R",Ŗ:"R",Ř:"R",ŕ:"r",ŗ:"r",ř:"r",Ś:"S",Ŝ:"S",Ş:"S",Š:"S",ś:"s",ŝ:"s",ş:"s",š:"s",Ţ:"T",Ť:"T",Ŧ:"T",ţ:"t",ť:"t",ŧ:"t",Ũ:"U",Ū:"U",Ŭ:"U",Ů:"U",Ű:"U",Ų:"U",ũ:"u",ū:"u",ŭ:"u",ů:"u",ű:"u",ų:"u",Ŵ:"W",ŵ:"w",Ŷ:"Y",ŷ:"y",Ÿ:"Y",Ź:"Z",Ż:"Z",Ž:"Z",ź:"z",ż:"z",ž:"z",Ĳ:"IJ",ĳ:"ij",Œ:"Oe",œ:"oe",ŉ:"'n",ſ:"s"},Ry={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&#39;"},Ly={"&amp;":"&","&lt;":"<","&gt;":">","&quot;":'"',"&#39;":"'"},Cy={"\\":"\\","'":"'","\n":"n","\r":"r","\u2028":"u2028","\u2029":"u2029"},Py=parseFloat,Uy=parseInt,_m=typeof sa=="object"&&sa&&sa.Object===Object&&sa,Dy=typeof self=="object"&&self&&self.Object===Object&&self,Dn=_m||Dy||Function("return this")(),Zh=t&&!t.nodeType&&t,Sa=Zh&&!0&&e&&!e.nodeType&&e,xm=Sa&&Sa.exports===Zh,Kh=xm&&_m.process,Ci=function(){try{var oe=Sa&&Sa.require&&Sa.require("util").types;return oe||Kh&&Kh.binding&&Kh.binding("util")}catch{}}(),ym=Ci&&Ci.isArrayBuffer,Mm=Ci&&Ci.isDate,Em=Ci&&Ci.isMap,wm=Ci&&Ci.isRegExp,Sm=Ci&&Ci.isSet,bm=Ci&&Ci.isTypedArray;function mi(oe,Ee,_e){switch(_e.length){case 0:return oe.call(Ee);case 1:return oe.call(Ee,_e[0]);case 2:return oe.call(Ee,_e[0],_e[1]);case 3:return oe.call(Ee,_e[0],_e[1],_e[2])}return oe.apply(Ee,_e)}function Iy(oe,Ee,_e,at){for(var wt=-1,zt=oe==null?0:oe.length;++wt<zt;){var En=oe[wt];Ee(at,En,_e(En),oe)}return at}function Pi(oe,Ee){for(var _e=-1,at=oe==null?0:oe.length;++_e<at&&Ee(oe[_e],_e,oe)!==!1;);return oe}function Fy(oe,Ee){for(var _e=oe==null?0:oe.length;_e--&&Ee(oe[_e],_e,oe)!==!1;);return oe}function Tm(oe,Ee){for(var _e=-1,at=oe==null?0:oe.length;++_e<at;)if(!Ee(oe[_e],_e,oe))return!1;return!0}function Yr(oe,Ee){for(var _e=-1,at=oe==null?0:oe.length,wt=0,zt=[];++_e<at;){var En=oe[_e];Ee(En,_e,oe)&&(zt[wt++]=En)}return zt}function Gc(oe,Ee){var _e=oe==null?0:oe.length;return!!_e&&Rs(oe,Ee,0)>-1}function Jh(oe,Ee,_e){for(var at=-1,wt=oe==null?0:oe.length;++at<wt;)if(_e(Ee,oe[at]))return!0;return!1}function an(oe,Ee){for(var _e=-1,at=oe==null?0:oe.length,wt=Array(at);++_e<at;)wt[_e]=Ee(oe[_e],_e,oe);return wt}function qr(oe,Ee){for(var _e=-1,at=Ee.length,wt=oe.length;++_e<at;)oe[wt+_e]=Ee[_e];return oe}function Qh(oe,Ee,_e,at){var wt=-1,zt=oe==null?0:oe.length;for(at&&zt&&(_e=oe[++wt]);++wt<zt;)_e=Ee(_e,oe[wt],wt,oe);return _e}function Ny(oe,Ee,_e,at){var wt=oe==null?0:oe.length;for(at&&wt&&(_e=oe[--wt]);wt--;)_e=Ee(_e,oe[wt],wt,oe);return _e}function ef(oe,Ee){for(var _e=-1,at=oe==null?0:oe.length;++_e<at;)if(Ee(oe[_e],_e,oe))return!0;return!1}var Oy=tf("length");function By(oe){return oe.split("")}function zy(oe){return oe.match(ol)||[]}function Am(oe,Ee,_e){var at;return _e(oe,function(wt,zt,En){if(Ee(wt,zt,En))return at=zt,!1}),at}function Hc(oe,Ee,_e,at){for(var wt=oe.length,zt=_e+(at?1:-1);at?zt--:++zt<wt;)if(Ee(oe[zt],zt,oe))return zt;return-1}function Rs(oe,Ee,_e){return Ee===Ee?Ky(oe,Ee,_e):Hc(oe,Rm,_e)}function Gy(oe,Ee,_e,at){for(var wt=_e-1,zt=oe.length;++wt<zt;)if(at(oe[wt],Ee))return wt;return-1}function Rm(oe){return oe!==oe}function Lm(oe,Ee){var _e=oe==null?0:oe.length;return _e?rf(oe,Ee)/_e:ae}function tf(oe){return function(Ee){return Ee==null?n:Ee[oe]}}function nf(oe){return function(Ee){return oe==null?n:oe[Ee]}}function Cm(oe,Ee,_e,at,wt){return wt(oe,function(zt,En,Zt){_e=at?(at=!1,zt):Ee(_e,zt,En,Zt)}),_e}function Hy(oe,Ee){var _e=oe.length;for(oe.sort(Ee);_e--;)oe[_e]=oe[_e].value;return oe}function rf(oe,Ee){for(var _e,at=-1,wt=oe.length;++at<wt;){var zt=Ee(oe[at]);zt!==n&&(_e=_e===n?zt:_e+zt)}return _e}function af(oe,Ee){for(var _e=-1,at=Array(oe);++_e<oe;)at[_e]=Ee(_e);return at}function Vy(oe,Ee){return an(Ee,function(_e){return[_e,oe[_e]]})}function Pm(oe){return oe&&oe.slice(0,Fm(oe)+1).replace(Ma,"")}function vi(oe){return function(Ee){return oe(Ee)}}function sf(oe,Ee){return an(Ee,function(_e){return oe[_e]})}function hl(oe,Ee){return oe.has(Ee)}function Um(oe,Ee){for(var _e=-1,at=oe.length;++_e<at&&Rs(Ee,oe[_e],0)>-1;);return _e}function Dm(oe,Ee){for(var _e=oe.length;_e--&&Rs(Ee,oe[_e],0)>-1;);return _e}function ky(oe,Ee){for(var _e=oe.length,at=0;_e--;)oe[_e]===Ee&&++at;return at}var Wy=nf(Ay),Xy=nf(Ry);function Yy(oe){return"\\"+Cy[oe]}function qy(oe,Ee){return oe==null?n:oe[Ee]}function Ls(oe){return wy.test(oe)}function $y(oe){return Sy.test(oe)}function jy(oe){for(var Ee,_e=[];!(Ee=oe.next()).done;)_e.push(Ee.value);return _e}function of(oe){var Ee=-1,_e=Array(oe.size);return oe.forEach(function(at,wt){_e[++Ee]=[wt,at]}),_e}function Im(oe,Ee){return function(_e){return oe(Ee(_e))}}function $r(oe,Ee){for(var _e=-1,at=oe.length,wt=0,zt=[];++_e<at;){var En=oe[_e];(En===Ee||En===f)&&(oe[_e]=f,zt[wt++]=_e)}return zt}function Vc(oe){var Ee=-1,_e=Array(oe.size);return oe.forEach(function(at){_e[++Ee]=at}),_e}function Zy(oe){var Ee=-1,_e=Array(oe.size);return oe.forEach(function(at){_e[++Ee]=[at,at]}),_e}function Ky(oe,Ee,_e){for(var at=_e-1,wt=oe.length;++at<wt;)if(oe[at]===Ee)return at;return-1}function Jy(oe,Ee,_e){for(var at=_e+1;at--;)if(oe[at]===Ee)return at;return at}function Cs(oe){return Ls(oe)?eM(oe):Oy(oe)}function Yi(oe){return Ls(oe)?tM(oe):By(oe)}function Fm(oe){for(var Ee=oe.length;Ee--&&kr.test(oe.charAt(Ee)););return Ee}var Qy=nf(Ly);function eM(oe){for(var Ee=jh.lastIndex=0;jh.test(oe);)++Ee;return Ee}function tM(oe){return oe.match(jh)||[]}function nM(oe){return oe.match(Ey)||[]}var iM=function oe(Ee){Ee=Ee==null?Dn:Ps.defaults(Dn.Object(),Ee,Ps.pick(Dn,by));var _e=Ee.Array,at=Ee.Date,wt=Ee.Error,zt=Ee.Function,En=Ee.Math,Zt=Ee.Object,lf=Ee.RegExp,rM=Ee.String,Ui=Ee.TypeError,kc=_e.prototype,aM=zt.prototype,Us=Zt.prototype,Wc=Ee["__core-js_shared__"],Xc=aM.toString,Yt=Us.hasOwnProperty,sM=0,Nm=function(){var s=/[^.]+$/.exec(Wc&&Wc.keys&&Wc.keys.IE_PROTO||"");return s?"Symbol(src)_1."+s:""}(),Yc=Us.toString,oM=Xc.call(Zt),lM=Dn._,cM=lf("^"+Xc.call(Yt).replace(Vr,"\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g,"$1.*?")+"$"),qc=xm?Ee.Buffer:n,jr=Ee.Symbol,$c=Ee.Uint8Array,Om=qc?qc.allocUnsafe:n,jc=Im(Zt.getPrototypeOf,Zt),Bm=Zt.create,zm=Us.propertyIsEnumerable,Zc=kc.splice,Gm=jr?jr.isConcatSpreadable:n,fl=jr?jr.iterator:n,ba=jr?jr.toStringTag:n,Kc=function(){try{var s=Ca(Zt,"defineProperty");return s({},"",{}),s}catch{}}(),uM=Ee.clearTimeout!==Dn.clearTimeout&&Ee.clearTimeout,hM=at&&at.now!==Dn.Date.now&&at.now,fM=Ee.setTimeout!==Dn.setTimeout&&Ee.setTimeout,Jc=En.ceil,Qc=En.floor,cf=Zt.getOwnPropertySymbols,dM=qc?qc.isBuffer:n,Hm=Ee.isFinite,pM=kc.join,mM=Im(Zt.keys,Zt),wn=En.max,zn=En.min,vM=at.now,gM=Ee.parseInt,Vm=En.random,_M=kc.reverse,uf=Ca(Ee,"DataView"),dl=Ca(Ee,"Map"),hf=Ca(Ee,"Promise"),Ds=Ca(Ee,"Set"),pl=Ca(Ee,"WeakMap"),ml=Ca(Zt,"create"),eu=pl&&new pl,Is={},xM=Pa(uf),yM=Pa(dl),MM=Pa(hf),EM=Pa(Ds),wM=Pa(pl),tu=jr?jr.prototype:n,vl=tu?tu.valueOf:n,km=tu?tu.toString:n;function F(s){if(un(s)&&!bt(s)&&!(s instanceof Nt)){if(s instanceof Di)return s;if(Yt.call(s,"__wrapped__"))return Wv(s)}return new Di(s)}var Fs=function(){function s(){}return function(c){if(!ln(c))return{};if(Bm)return Bm(c);s.prototype=c;var m=new s;return s.prototype=n,m}}();function nu(){}function Di(s,c){this.__wrapped__=s,this.__actions__=[],this.__chain__=!!c,this.__index__=0,this.__values__=n}F.templateSettings={escape:qt,evaluate:Qt,interpolate:On,variable:"",imports:{_:F}},F.prototype=nu.prototype,F.prototype.constructor=F,Di.prototype=Fs(nu.prototype),Di.prototype.constructor=Di;function Nt(s){this.__wrapped__=s,this.__actions__=[],this.__dir__=1,this.__filtered__=!1,this.__iteratees__=[],this.__takeCount__=j,this.__views__=[]}function SM(){var s=new Nt(this.__wrapped__);return s.__actions__=ri(this.__actions__),s.__dir__=this.__dir__,s.__filtered__=this.__filtered__,s.__iteratees__=ri(this.__iteratees__),s.__takeCount__=this.__takeCount__,s.__views__=ri(this.__views__),s}function bM(){if(this.__filtered__){var s=new Nt(this);s.__dir__=-1,s.__filtered__=!0}else s=this.clone(),s.__dir__*=-1;return s}function TM(){var s=this.__wrapped__.value(),c=this.__dir__,m=bt(s),E=c<0,D=m?s.length:0,O=BE(0,D,this.__views__),q=O.start,te=O.end,le=te-q,Te=E?te:q-1,Ae=this.__iteratees__,Ie=Ae.length,Je=0,ut=zn(le,this.__takeCount__);if(!m||!E&&D==le&&ut==le)return dv(s,this.__actions__);var gt=[];e:for(;le--&&Je<ut;){Te+=c;for(var Rt=-1,_t=s[Te];++Rt<Ie;){var It=Ae[Rt],Bt=It.iteratee,xi=It.type,Jn=Bt(_t);if(xi==z)_t=Jn;else if(!Jn){if(xi==I)continue e;break e}}gt[Je++]=_t}return gt}Nt.prototype=Fs(nu.prototype),Nt.prototype.constructor=Nt;function Ta(s){var c=-1,m=s==null?0:s.length;for(this.clear();++c<m;){var E=s[c];this.set(E[0],E[1])}}function AM(){this.__data__=ml?ml(null):{},this.size=0}function RM(s){var c=this.has(s)&&delete this.__data__[s];return this.size-=c?1:0,c}function LM(s){var c=this.__data__;if(ml){var m=c[s];return m===h?n:m}return Yt.call(c,s)?c[s]:n}function CM(s){var c=this.__data__;return ml?c[s]!==n:Yt.call(c,s)}function PM(s,c){var m=this.__data__;return this.size+=this.has(s)?0:1,m[s]=ml&&c===n?h:c,this}Ta.prototype.clear=AM,Ta.prototype.delete=RM,Ta.prototype.get=LM,Ta.prototype.has=CM,Ta.prototype.set=PM;function _r(s){var c=-1,m=s==null?0:s.length;for(this.clear();++c<m;){var E=s[c];this.set(E[0],E[1])}}function UM(){this.__data__=[],this.size=0}function DM(s){var c=this.__data__,m=iu(c,s);if(m<0)return!1;var E=c.length-1;return m==E?c.pop():Zc.call(c,m,1),--this.size,!0}function IM(s){var c=this.__data__,m=iu(c,s);return m<0?n:c[m][1]}function FM(s){return iu(this.__data__,s)>-1}function NM(s,c){var m=this.__data__,E=iu(m,s);return E<0?(++this.size,m.push([s,c])):m[E][1]=c,this}_r.prototype.clear=UM,_r.prototype.delete=DM,_r.prototype.get=IM,_r.prototype.has=FM,_r.prototype.set=NM;function xr(s){var c=-1,m=s==null?0:s.length;for(this.clear();++c<m;){var E=s[c];this.set(E[0],E[1])}}function OM(){this.size=0,this.__data__={hash:new Ta,map:new(dl||_r),string:new Ta}}function BM(s){var c=mu(this,s).delete(s);return this.size-=c?1:0,c}function zM(s){return mu(this,s).get(s)}function GM(s){return mu(this,s).has(s)}function HM(s,c){var m=mu(this,s),E=m.size;return m.set(s,c),this.size+=m.size==E?0:1,this}xr.prototype.clear=OM,xr.prototype.delete=BM,xr.prototype.get=zM,xr.prototype.has=GM,xr.prototype.set=HM;function Aa(s){var c=-1,m=s==null?0:s.length;for(this.__data__=new xr;++c<m;)this.add(s[c])}function VM(s){return this.__data__.set(s,h),this}function kM(s){return this.__data__.has(s)}Aa.prototype.add=Aa.prototype.push=VM,Aa.prototype.has=kM;function qi(s){var c=this.__data__=new _r(s);this.size=c.size}function WM(){this.__data__=new _r,this.size=0}function XM(s){var c=this.__data__,m=c.delete(s);return this.size=c.size,m}function YM(s){return this.__data__.get(s)}function qM(s){return this.__data__.has(s)}function $M(s,c){var m=this.__data__;if(m instanceof _r){var E=m.__data__;if(!dl||E.length<r-1)return E.push([s,c]),this.size=++m.size,this;m=this.__data__=new xr(E)}return m.set(s,c),this.size=m.size,this}qi.prototype.clear=WM,qi.prototype.delete=XM,qi.prototype.get=YM,qi.prototype.has=qM,qi.prototype.set=$M;function Wm(s,c){var m=bt(s),E=!m&&Ua(s),D=!m&&!E&&ea(s),O=!m&&!E&&!D&&zs(s),q=m||E||D||O,te=q?af(s.length,rM):[],le=te.length;for(var Te in s)(c||Yt.call(s,Te))&&!(q&&(Te=="length"||D&&(Te=="offset"||Te=="parent")||O&&(Te=="buffer"||Te=="byteLength"||Te=="byteOffset")||wr(Te,le)))&&te.push(Te);return te}function Xm(s){var c=s.length;return c?s[Ef(0,c-1)]:n}function jM(s,c){return vu(ri(s),Ra(c,0,s.length))}function ZM(s){return vu(ri(s))}function ff(s,c,m){(m!==n&&!$i(s[c],m)||m===n&&!(c in s))&&yr(s,c,m)}function gl(s,c,m){var E=s[c];(!(Yt.call(s,c)&&$i(E,m))||m===n&&!(c in s))&&yr(s,c,m)}function iu(s,c){for(var m=s.length;m--;)if($i(s[m][0],c))return m;return-1}function KM(s,c,m,E){return Zr(s,function(D,O,q){c(E,D,m(D),q)}),E}function Ym(s,c){return s&&sr(c,Rn(c),s)}function JM(s,c){return s&&sr(c,si(c),s)}function yr(s,c,m){c=="__proto__"&&Kc?Kc(s,c,{configurable:!0,enumerable:!0,value:m,writable:!0}):s[c]=m}function df(s,c){for(var m=-1,E=c.length,D=_e(E),O=s==null;++m<E;)D[m]=O?n:qf(s,c[m]);return D}function Ra(s,c,m){return s===s&&(m!==n&&(s=s<=m?s:m),c!==n&&(s=s>=c?s:c)),s}function Ii(s,c,m,E,D,O){var q,te=c&d,le=c&p,Te=c&g;if(m&&(q=D?m(s,E,D,O):m(s)),q!==n)return q;if(!ln(s))return s;var Ae=bt(s);if(Ae){if(q=GE(s),!te)return ri(s,q)}else{var Ie=Gn(s),Je=Ie==se||Ie==Qe;if(ea(s))return vv(s,te);if(Ie==qe||Ie==me||Je&&!D){if(q=le||Je?{}:Fv(s),!te)return le?LE(s,JM(q,s)):RE(s,Ym(q,s))}else{if(!Jt[Ie])return D?s:{};q=HE(s,Ie,te)}}O||(O=new qi);var ut=O.get(s);if(ut)return ut;O.set(s,q),ug(s)?s.forEach(function(_t){q.add(Ii(_t,c,m,_t,s,O))}):lg(s)&&s.forEach(function(_t,It){q.set(It,Ii(_t,c,m,It,s,O))});var gt=Te?le?Df:Uf:le?si:Rn,Rt=Ae?n:gt(s);return Pi(Rt||s,function(_t,It){Rt&&(It=_t,_t=s[It]),gl(q,It,Ii(_t,c,m,It,s,O))}),q}function QM(s){var c=Rn(s);return function(m){return qm(m,s,c)}}function qm(s,c,m){var E=m.length;if(s==null)return!E;for(s=Zt(s);E--;){var D=m[E],O=c[D],q=s[D];if(q===n&&!(D in s)||!O(q))return!1}return!0}function $m(s,c,m){if(typeof s!="function")throw new Ui(o);return Sl(function(){s.apply(n,m)},c)}function _l(s,c,m,E){var D=-1,O=Gc,q=!0,te=s.length,le=[],Te=c.length;if(!te)return le;m&&(c=an(c,vi(m))),E?(O=Jh,q=!1):c.length>=r&&(O=hl,q=!1,c=new Aa(c));e:for(;++D<te;){var Ae=s[D],Ie=m==null?Ae:m(Ae);if(Ae=E||Ae!==0?Ae:0,q&&Ie===Ie){for(var Je=Te;Je--;)if(c[Je]===Ie)continue e;le.push(Ae)}else O(c,Ie,E)||le.push(Ae)}return le}var Zr=Mv(ar),jm=Mv(mf,!0);function eE(s,c){var m=!0;return Zr(s,function(E,D,O){return m=!!c(E,D,O),m}),m}function ru(s,c,m){for(var E=-1,D=s.length;++E<D;){var O=s[E],q=c(O);if(q!=null&&(te===n?q===q&&!_i(q):m(q,te)))var te=q,le=O}return le}function tE(s,c,m,E){var D=s.length;for(m=At(m),m<0&&(m=-m>D?0:D+m),E=E===n||E>D?D:At(E),E<0&&(E+=D),E=m>E?0:fg(E);m<E;)s[m++]=c;return s}function Zm(s,c){var m=[];return Zr(s,function(E,D,O){c(E,D,O)&&m.push(E)}),m}function In(s,c,m,E,D){var O=-1,q=s.length;for(m||(m=kE),D||(D=[]);++O<q;){var te=s[O];c>0&&m(te)?c>1?In(te,c-1,m,E,D):qr(D,te):E||(D[D.length]=te)}return D}var pf=Ev(),Km=Ev(!0);function ar(s,c){return s&&pf(s,c,Rn)}function mf(s,c){return s&&Km(s,c,Rn)}function au(s,c){return Yr(c,function(m){return Sr(s[m])})}function La(s,c){c=Jr(c,s);for(var m=0,E=c.length;s!=null&&m<E;)s=s[or(c[m++])];return m&&m==E?s:n}function Jm(s,c,m){var E=c(s);return bt(s)?E:qr(E,m(s))}function Zn(s){return s==null?s===n?N:et:ba&&ba in Zt(s)?OE(s):ZE(s)}function vf(s,c){return s>c}function nE(s,c){return s!=null&&Yt.call(s,c)}function iE(s,c){return s!=null&&c in Zt(s)}function rE(s,c,m){return s>=zn(c,m)&&s<wn(c,m)}function gf(s,c,m){for(var E=m?Jh:Gc,D=s[0].length,O=s.length,q=O,te=_e(O),le=1/0,Te=[];q--;){var Ae=s[q];q&&c&&(Ae=an(Ae,vi(c))),le=zn(Ae.length,le),te[q]=!m&&(c||D>=120&&Ae.length>=120)?new Aa(q&&Ae):n}Ae=s[0];var Ie=-1,Je=te[0];e:for(;++Ie<D&&Te.length<le;){var ut=Ae[Ie],gt=c?c(ut):ut;if(ut=m||ut!==0?ut:0,!(Je?hl(Je,gt):E(Te,gt,m))){for(q=O;--q;){var Rt=te[q];if(!(Rt?hl(Rt,gt):E(s[q],gt,m)))continue e}Je&&Je.push(gt),Te.push(ut)}}return Te}function aE(s,c,m,E){return ar(s,function(D,O,q){c(E,m(D),O,q)}),E}function xl(s,c,m){c=Jr(c,s),s=zv(s,c);var E=s==null?s:s[or(Ni(c))];return E==null?n:mi(E,s,m)}function Qm(s){return un(s)&&Zn(s)==me}function sE(s){return un(s)&&Zn(s)==be}function oE(s){return un(s)&&Zn(s)==Se}function yl(s,c,m,E,D){return s===c?!0:s==null||c==null||!un(s)&&!un(c)?s!==s&&c!==c:lE(s,c,m,E,yl,D)}function lE(s,c,m,E,D,O){var q=bt(s),te=bt(c),le=q?ge:Gn(s),Te=te?ge:Gn(c);le=le==me?qe:le,Te=Te==me?qe:Te;var Ae=le==qe,Ie=Te==qe,Je=le==Te;if(Je&&ea(s)){if(!ea(c))return!1;q=!0,Ae=!1}if(Je&&!Ae)return O||(O=new qi),q||zs(s)?Uv(s,c,m,E,D,O):FE(s,c,le,m,E,D,O);if(!(m&x)){var ut=Ae&&Yt.call(s,"__wrapped__"),gt=Ie&&Yt.call(c,"__wrapped__");if(ut||gt){var Rt=ut?s.value():s,_t=gt?c.value():c;return O||(O=new qi),D(Rt,_t,m,E,O)}}return Je?(O||(O=new qi),NE(s,c,m,E,D,O)):!1}function cE(s){return un(s)&&Gn(s)==ze}function _f(s,c,m,E){var D=m.length,O=D,q=!E;if(s==null)return!O;for(s=Zt(s);D--;){var te=m[D];if(q&&te[2]?te[1]!==s[te[0]]:!(te[0]in s))return!1}for(;++D<O;){te=m[D];var le=te[0],Te=s[le],Ae=te[1];if(q&&te[2]){if(Te===n&&!(le in s))return!1}else{var Ie=new qi;if(E)var Je=E(Te,Ae,le,s,c,Ie);if(!(Je===n?yl(Ae,Te,x|y,E,Ie):Je))return!1}}return!0}function ev(s){if(!ln(s)||XE(s))return!1;var c=Sr(s)?cM:Me;return c.test(Pa(s))}function uE(s){return un(s)&&Zn(s)==ot}function hE(s){return un(s)&&Gn(s)==pt}function fE(s){return un(s)&&Eu(s.length)&&!!tn[Zn(s)]}function tv(s){return typeof s=="function"?s:s==null?oi:typeof s=="object"?bt(s)?rv(s[0],s[1]):iv(s):wg(s)}function xf(s){if(!wl(s))return mM(s);var c=[];for(var m in Zt(s))Yt.call(s,m)&&m!="constructor"&&c.push(m);return c}function dE(s){if(!ln(s))return jE(s);var c=wl(s),m=[];for(var E in s)E=="constructor"&&(c||!Yt.call(s,E))||m.push(E);return m}function yf(s,c){return s<c}function nv(s,c){var m=-1,E=ai(s)?_e(s.length):[];return Zr(s,function(D,O,q){E[++m]=c(D,O,q)}),E}function iv(s){var c=Ff(s);return c.length==1&&c[0][2]?Ov(c[0][0],c[0][1]):function(m){return m===s||_f(m,s,c)}}function rv(s,c){return Of(s)&&Nv(c)?Ov(or(s),c):function(m){var E=qf(m,s);return E===n&&E===c?$f(m,s):yl(c,E,x|y)}}function su(s,c,m,E,D){s!==c&&pf(c,function(O,q){if(D||(D=new qi),ln(O))pE(s,c,q,m,su,E,D);else{var te=E?E(zf(s,q),O,q+"",s,c,D):n;te===n&&(te=O),ff(s,q,te)}},si)}function pE(s,c,m,E,D,O,q){var te=zf(s,m),le=zf(c,m),Te=q.get(le);if(Te){ff(s,m,Te);return}var Ae=O?O(te,le,m+"",s,c,q):n,Ie=Ae===n;if(Ie){var Je=bt(le),ut=!Je&&ea(le),gt=!Je&&!ut&&zs(le);Ae=le,Je||ut||gt?bt(te)?Ae=te:pn(te)?Ae=ri(te):ut?(Ie=!1,Ae=vv(le,!0)):gt?(Ie=!1,Ae=gv(le,!0)):Ae=[]:bl(le)||Ua(le)?(Ae=te,Ua(te)?Ae=dg(te):(!ln(te)||Sr(te))&&(Ae=Fv(le))):Ie=!1}Ie&&(q.set(le,Ae),D(Ae,le,E,O,q),q.delete(le)),ff(s,m,Ae)}function av(s,c){var m=s.length;if(m)return c+=c<0?m:0,wr(c,m)?s[c]:n}function sv(s,c,m){c.length?c=an(c,function(O){return bt(O)?function(q){return La(q,O.length===1?O[0]:O)}:O}):c=[oi];var E=-1;c=an(c,vi(vt()));var D=nv(s,function(O,q,te){var le=an(c,function(Te){return Te(O)});return{criteria:le,index:++E,value:O}});return Hy(D,function(O,q){return AE(O,q,m)})}function mE(s,c){return ov(s,c,function(m,E){return $f(s,E)})}function ov(s,c,m){for(var E=-1,D=c.length,O={};++E<D;){var q=c[E],te=La(s,q);m(te,q)&&Ml(O,Jr(q,s),te)}return O}function vE(s){return function(c){return La(c,s)}}function Mf(s,c,m,E){var D=E?Gy:Rs,O=-1,q=c.length,te=s;for(s===c&&(c=ri(c)),m&&(te=an(s,vi(m)));++O<q;)for(var le=0,Te=c[O],Ae=m?m(Te):Te;(le=D(te,Ae,le,E))>-1;)te!==s&&Zc.call(te,le,1),Zc.call(s,le,1);return s}function lv(s,c){for(var m=s?c.length:0,E=m-1;m--;){var D=c[m];if(m==E||D!==O){var O=D;wr(D)?Zc.call(s,D,1):bf(s,D)}}return s}function Ef(s,c){return s+Qc(Vm()*(c-s+1))}function gE(s,c,m,E){for(var D=-1,O=wn(Jc((c-s)/(m||1)),0),q=_e(O);O--;)q[E?O:++D]=s,s+=m;return q}function wf(s,c){var m="";if(!s||c<1||c>$)return m;do c%2&&(m+=s),c=Qc(c/2),c&&(s+=s);while(c);return m}function Pt(s,c){return Gf(Bv(s,c,oi),s+"")}function _E(s){return Xm(Gs(s))}function xE(s,c){var m=Gs(s);return vu(m,Ra(c,0,m.length))}function Ml(s,c,m,E){if(!ln(s))return s;c=Jr(c,s);for(var D=-1,O=c.length,q=O-1,te=s;te!=null&&++D<O;){var le=or(c[D]),Te=m;if(le==="__proto__"||le==="constructor"||le==="prototype")return s;if(D!=q){var Ae=te[le];Te=E?E(Ae,le,te):n,Te===n&&(Te=ln(Ae)?Ae:wr(c[D+1])?[]:{})}gl(te,le,Te),te=te[le]}return s}var cv=eu?function(s,c){return eu.set(s,c),s}:oi,yE=Kc?function(s,c){return Kc(s,"toString",{configurable:!0,enumerable:!1,value:Zf(c),writable:!0})}:oi;function ME(s){return vu(Gs(s))}function Fi(s,c,m){var E=-1,D=s.length;c<0&&(c=-c>D?0:D+c),m=m>D?D:m,m<0&&(m+=D),D=c>m?0:m-c>>>0,c>>>=0;for(var O=_e(D);++E<D;)O[E]=s[E+c];return O}function EE(s,c){var m;return Zr(s,function(E,D,O){return m=c(E,D,O),!m}),!!m}function ou(s,c,m){var E=0,D=s==null?E:s.length;if(typeof c=="number"&&c===c&&D<=Q){for(;E<D;){var O=E+D>>>1,q=s[O];q!==null&&!_i(q)&&(m?q<=c:q<c)?E=O+1:D=O}return D}return Sf(s,c,oi,m)}function Sf(s,c,m,E){var D=0,O=s==null?0:s.length;if(O===0)return 0;c=m(c);for(var q=c!==c,te=c===null,le=_i(c),Te=c===n;D<O;){var Ae=Qc((D+O)/2),Ie=m(s[Ae]),Je=Ie!==n,ut=Ie===null,gt=Ie===Ie,Rt=_i(Ie);if(q)var _t=E||gt;else Te?_t=gt&&(E||Je):te?_t=gt&&Je&&(E||!ut):le?_t=gt&&Je&&!ut&&(E||!Rt):ut||Rt?_t=!1:_t=E?Ie<=c:Ie<c;_t?D=Ae+1:O=Ae}return zn(O,K)}function uv(s,c){for(var m=-1,E=s.length,D=0,O=[];++m<E;){var q=s[m],te=c?c(q):q;if(!m||!$i(te,le)){var le=te;O[D++]=q===0?0:q}}return O}function hv(s){return typeof s=="number"?s:_i(s)?ae:+s}function gi(s){if(typeof s=="string")return s;if(bt(s))return an(s,gi)+"";if(_i(s))return km?km.call(s):"";var c=s+"";return c=="0"&&1/s==-Y?"-0":c}function Kr(s,c,m){var E=-1,D=Gc,O=s.length,q=!0,te=[],le=te;if(m)q=!1,D=Jh;else if(O>=r){var Te=c?null:DE(s);if(Te)return Vc(Te);q=!1,D=hl,le=new Aa}else le=c?[]:te;e:for(;++E<O;){var Ae=s[E],Ie=c?c(Ae):Ae;if(Ae=m||Ae!==0?Ae:0,q&&Ie===Ie){for(var Je=le.length;Je--;)if(le[Je]===Ie)continue e;c&&le.push(Ie),te.push(Ae)}else D(le,Ie,m)||(le!==te&&le.push(Ie),te.push(Ae))}return te}function bf(s,c){return c=Jr(c,s),s=zv(s,c),s==null||delete s[or(Ni(c))]}function fv(s,c,m,E){return Ml(s,c,m(La(s,c)),E)}function lu(s,c,m,E){for(var D=s.length,O=E?D:-1;(E?O--:++O<D)&&c(s[O],O,s););return m?Fi(s,E?0:O,E?O+1:D):Fi(s,E?O+1:0,E?D:O)}function dv(s,c){var m=s;return m instanceof Nt&&(m=m.value()),Qh(c,function(E,D){return D.func.apply(D.thisArg,qr([E],D.args))},m)}function Tf(s,c,m){var E=s.length;if(E<2)return E?Kr(s[0]):[];for(var D=-1,O=_e(E);++D<E;)for(var q=s[D],te=-1;++te<E;)te!=D&&(O[D]=_l(O[D]||q,s[te],c,m));return Kr(In(O,1),c,m)}function pv(s,c,m){for(var E=-1,D=s.length,O=c.length,q={};++E<D;){var te=E<O?c[E]:n;m(q,s[E],te)}return q}function Af(s){return pn(s)?s:[]}function Rf(s){return typeof s=="function"?s:oi}function Jr(s,c){return bt(s)?s:Of(s,c)?[s]:kv(Vt(s))}var wE=Pt;function Qr(s,c,m){var E=s.length;return m=m===n?E:m,!c&&m>=E?s:Fi(s,c,m)}var mv=uM||function(s){return Dn.clearTimeout(s)};function vv(s,c){if(c)return s.slice();var m=s.length,E=Om?Om(m):new s.constructor(m);return s.copy(E),E}function Lf(s){var c=new s.constructor(s.byteLength);return new $c(c).set(new $c(s)),c}function SE(s,c){var m=c?Lf(s.buffer):s.buffer;return new s.constructor(m,s.byteOffset,s.byteLength)}function bE(s){var c=new s.constructor(s.source,de.exec(s));return c.lastIndex=s.lastIndex,c}function TE(s){return vl?Zt(vl.call(s)):{}}function gv(s,c){var m=c?Lf(s.buffer):s.buffer;return new s.constructor(m,s.byteOffset,s.length)}function _v(s,c){if(s!==c){var m=s!==n,E=s===null,D=s===s,O=_i(s),q=c!==n,te=c===null,le=c===c,Te=_i(c);if(!te&&!Te&&!O&&s>c||O&&q&&le&&!te&&!Te||E&&q&&le||!m&&le||!D)return 1;if(!E&&!O&&!Te&&s<c||Te&&m&&D&&!E&&!O||te&&m&&D||!q&&D||!le)return-1}return 0}function AE(s,c,m){for(var E=-1,D=s.criteria,O=c.criteria,q=D.length,te=m.length;++E<q;){var le=_v(D[E],O[E]);if(le){if(E>=te)return le;var Te=m[E];return le*(Te=="desc"?-1:1)}}return s.index-c.index}function xv(s,c,m,E){for(var D=-1,O=s.length,q=m.length,te=-1,le=c.length,Te=wn(O-q,0),Ae=_e(le+Te),Ie=!E;++te<le;)Ae[te]=c[te];for(;++D<q;)(Ie||D<O)&&(Ae[m[D]]=s[D]);for(;Te--;)Ae[te++]=s[D++];return Ae}function yv(s,c,m,E){for(var D=-1,O=s.length,q=-1,te=m.length,le=-1,Te=c.length,Ae=wn(O-te,0),Ie=_e(Ae+Te),Je=!E;++D<Ae;)Ie[D]=s[D];for(var ut=D;++le<Te;)Ie[ut+le]=c[le];for(;++q<te;)(Je||D<O)&&(Ie[ut+m[q]]=s[D++]);return Ie}function ri(s,c){var m=-1,E=s.length;for(c||(c=_e(E));++m<E;)c[m]=s[m];return c}function sr(s,c,m,E){var D=!m;m||(m={});for(var O=-1,q=c.length;++O<q;){var te=c[O],le=E?E(m[te],s[te],te,m,s):n;le===n&&(le=s[te]),D?yr(m,te,le):gl(m,te,le)}return m}function RE(s,c){return sr(s,Nf(s),c)}function LE(s,c){return sr(s,Dv(s),c)}function cu(s,c){return function(m,E){var D=bt(m)?Iy:KM,O=c?c():{};return D(m,s,vt(E,2),O)}}function Ns(s){return Pt(function(c,m){var E=-1,D=m.length,O=D>1?m[D-1]:n,q=D>2?m[2]:n;for(O=s.length>3&&typeof O=="function"?(D--,O):n,q&&Kn(m[0],m[1],q)&&(O=D<3?n:O,D=1),c=Zt(c);++E<D;){var te=m[E];te&&s(c,te,E,O)}return c})}function Mv(s,c){return function(m,E){if(m==null)return m;if(!ai(m))return s(m,E);for(var D=m.length,O=c?D:-1,q=Zt(m);(c?O--:++O<D)&&E(q[O],O,q)!==!1;);return m}}function Ev(s){return function(c,m,E){for(var D=-1,O=Zt(c),q=E(c),te=q.length;te--;){var le=q[s?te:++D];if(m(O[le],le,O)===!1)break}return c}}function CE(s,c,m){var E=c&_,D=El(s);function O(){var q=this&&this!==Dn&&this instanceof O?D:s;return q.apply(E?m:this,arguments)}return O}function wv(s){return function(c){c=Vt(c);var m=Ls(c)?Yi(c):n,E=m?m[0]:c.charAt(0),D=m?Qr(m,1).join(""):c.slice(1);return E[s]()+D}}function Os(s){return function(c){return Qh(Mg(yg(c).replace(yy,"")),s,"")}}function El(s){return function(){var c=arguments;switch(c.length){case 0:return new s;case 1:return new s(c[0]);case 2:return new s(c[0],c[1]);case 3:return new s(c[0],c[1],c[2]);case 4:return new s(c[0],c[1],c[2],c[3]);case 5:return new s(c[0],c[1],c[2],c[3],c[4]);case 6:return new s(c[0],c[1],c[2],c[3],c[4],c[5]);case 7:return new s(c[0],c[1],c[2],c[3],c[4],c[5],c[6])}var m=Fs(s.prototype),E=s.apply(m,c);return ln(E)?E:m}}function PE(s,c,m){var E=El(s);function D(){for(var O=arguments.length,q=_e(O),te=O,le=Bs(D);te--;)q[te]=arguments[te];var Te=O<3&&q[0]!==le&&q[O-1]!==le?[]:$r(q,le);if(O-=Te.length,O<m)return Rv(s,c,uu,D.placeholder,n,q,Te,n,n,m-O);var Ae=this&&this!==Dn&&this instanceof D?E:s;return mi(Ae,this,q)}return D}function Sv(s){return function(c,m,E){var D=Zt(c);if(!ai(c)){var O=vt(m,3);c=Rn(c),m=function(te){return O(D[te],te,D)}}var q=s(c,m,E);return q>-1?D[O?c[q]:q]:n}}function bv(s){return Er(function(c){var m=c.length,E=m,D=Di.prototype.thru;for(s&&c.reverse();E--;){var O=c[E];if(typeof O!="function")throw new Ui(o);if(D&&!q&&pu(O)=="wrapper")var q=new Di([],!0)}for(E=q?E:m;++E<m;){O=c[E];var te=pu(O),le=te=="wrapper"?If(O):n;le&&Bf(le[0])&&le[1]==(b|M|A|U)&&!le[4].length&&le[9]==1?q=q[pu(le[0])].apply(q,le[3]):q=O.length==1&&Bf(O)?q[te]():q.thru(O)}return function(){var Te=arguments,Ae=Te[0];if(q&&Te.length==1&&bt(Ae))return q.plant(Ae).value();for(var Ie=0,Je=m?c[Ie].apply(this,Te):Ae;++Ie<m;)Je=c[Ie].call(this,Je);return Je}})}function uu(s,c,m,E,D,O,q,te,le,Te){var Ae=c&b,Ie=c&_,Je=c&v,ut=c&(M|T),gt=c&S,Rt=Je?n:El(s);function _t(){for(var It=arguments.length,Bt=_e(It),xi=It;xi--;)Bt[xi]=arguments[xi];if(ut)var Jn=Bs(_t),yi=ky(Bt,Jn);if(E&&(Bt=xv(Bt,E,D,ut)),O&&(Bt=yv(Bt,O,q,ut)),It-=yi,ut&&It<Te){var mn=$r(Bt,Jn);return Rv(s,c,uu,_t.placeholder,m,Bt,mn,te,le,Te-It)}var ji=Ie?m:this,Tr=Je?ji[s]:s;return It=Bt.length,te?Bt=KE(Bt,te):gt&&It>1&&Bt.reverse(),Ae&&le<It&&(Bt.length=le),this&&this!==Dn&&this instanceof _t&&(Tr=Rt||El(Tr)),Tr.apply(ji,Bt)}return _t}function Tv(s,c){return function(m,E){return aE(m,s,c(E),{})}}function hu(s,c){return function(m,E){var D;if(m===n&&E===n)return c;if(m!==n&&(D=m),E!==n){if(D===n)return E;typeof m=="string"||typeof E=="string"?(m=gi(m),E=gi(E)):(m=hv(m),E=hv(E)),D=s(m,E)}return D}}function Cf(s){return Er(function(c){return c=an(c,vi(vt())),Pt(function(m){var E=this;return s(c,function(D){return mi(D,E,m)})})})}function fu(s,c){c=c===n?" ":gi(c);var m=c.length;if(m<2)return m?wf(c,s):c;var E=wf(c,Jc(s/Cs(c)));return Ls(c)?Qr(Yi(E),0,s).join(""):E.slice(0,s)}function UE(s,c,m,E){var D=c&_,O=El(s);function q(){for(var te=-1,le=arguments.length,Te=-1,Ae=E.length,Ie=_e(Ae+le),Je=this&&this!==Dn&&this instanceof q?O:s;++Te<Ae;)Ie[Te]=E[Te];for(;le--;)Ie[Te++]=arguments[++te];return mi(Je,D?m:this,Ie)}return q}function Av(s){return function(c,m,E){return E&&typeof E!="number"&&Kn(c,m,E)&&(m=E=n),c=br(c),m===n?(m=c,c=0):m=br(m),E=E===n?c<m?1:-1:br(E),gE(c,m,E,s)}}function du(s){return function(c,m){return typeof c=="string"&&typeof m=="string"||(c=Oi(c),m=Oi(m)),s(c,m)}}function Rv(s,c,m,E,D,O,q,te,le,Te){var Ae=c&M,Ie=Ae?q:n,Je=Ae?n:q,ut=Ae?O:n,gt=Ae?n:O;c|=Ae?A:P,c&=~(Ae?P:A),c&w||(c&=~(_|v));var Rt=[s,c,D,ut,Ie,gt,Je,te,le,Te],_t=m.apply(n,Rt);return Bf(s)&&Gv(_t,Rt),_t.placeholder=E,Hv(_t,s,c)}function Pf(s){var c=En[s];return function(m,E){if(m=Oi(m),E=E==null?0:zn(At(E),292),E&&Hm(m)){var D=(Vt(m)+"e").split("e"),O=c(D[0]+"e"+(+D[1]+E));return D=(Vt(O)+"e").split("e"),+(D[0]+"e"+(+D[1]-E))}return c(m)}}var DE=Ds&&1/Vc(new Ds([,-0]))[1]==Y?function(s){return new Ds(s)}:Qf;function Lv(s){return function(c){var m=Gn(c);return m==ze?of(c):m==pt?Zy(c):Vy(c,s(c))}}function Mr(s,c,m,E,D,O,q,te){var le=c&v;if(!le&&typeof s!="function")throw new Ui(o);var Te=E?E.length:0;if(Te||(c&=~(A|P),E=D=n),q=q===n?q:wn(At(q),0),te=te===n?te:At(te),Te-=D?D.length:0,c&P){var Ae=E,Ie=D;E=D=n}var Je=le?n:If(s),ut=[s,c,m,E,D,Ae,Ie,O,q,te];if(Je&&$E(ut,Je),s=ut[0],c=ut[1],m=ut[2],E=ut[3],D=ut[4],te=ut[9]=ut[9]===n?le?0:s.length:wn(ut[9]-Te,0),!te&&c&(M|T)&&(c&=~(M|T)),!c||c==_)var gt=CE(s,c,m);else c==M||c==T?gt=PE(s,c,te):(c==A||c==(_|A))&&!D.length?gt=UE(s,c,m,E):gt=uu.apply(n,ut);var Rt=Je?cv:Gv;return Hv(Rt(gt,ut),s,c)}function Cv(s,c,m,E){return s===n||$i(s,Us[m])&&!Yt.call(E,m)?c:s}function Pv(s,c,m,E,D,O){return ln(s)&&ln(c)&&(O.set(c,s),su(s,c,n,Pv,O),O.delete(c)),s}function IE(s){return bl(s)?n:s}function Uv(s,c,m,E,D,O){var q=m&x,te=s.length,le=c.length;if(te!=le&&!(q&&le>te))return!1;var Te=O.get(s),Ae=O.get(c);if(Te&&Ae)return Te==c&&Ae==s;var Ie=-1,Je=!0,ut=m&y?new Aa:n;for(O.set(s,c),O.set(c,s);++Ie<te;){var gt=s[Ie],Rt=c[Ie];if(E)var _t=q?E(Rt,gt,Ie,c,s,O):E(gt,Rt,Ie,s,c,O);if(_t!==n){if(_t)continue;Je=!1;break}if(ut){if(!ef(c,function(It,Bt){if(!hl(ut,Bt)&&(gt===It||D(gt,It,m,E,O)))return ut.push(Bt)})){Je=!1;break}}else if(!(gt===Rt||D(gt,Rt,m,E,O))){Je=!1;break}}return O.delete(s),O.delete(c),Je}function FE(s,c,m,E,D,O,q){switch(m){case Fe:if(s.byteLength!=c.byteLength||s.byteOffset!=c.byteOffset)return!1;s=s.buffer,c=c.buffer;case be:return!(s.byteLength!=c.byteLength||!O(new $c(s),new $c(c)));case we:case Se:case Re:return $i(+s,+c);case J:return s.name==c.name&&s.message==c.message;case ot:case Dt:return s==c+"";case ze:var te=of;case pt:var le=E&x;if(te||(te=Vc),s.size!=c.size&&!le)return!1;var Te=q.get(s);if(Te)return Te==c;E|=y,q.set(s,c);var Ae=Uv(te(s),te(c),E,D,O,q);return q.delete(s),Ae;case G:if(vl)return vl.call(s)==vl.call(c)}return!1}function NE(s,c,m,E,D,O){var q=m&x,te=Uf(s),le=te.length,Te=Uf(c),Ae=Te.length;if(le!=Ae&&!q)return!1;for(var Ie=le;Ie--;){var Je=te[Ie];if(!(q?Je in c:Yt.call(c,Je)))return!1}var ut=O.get(s),gt=O.get(c);if(ut&&gt)return ut==c&&gt==s;var Rt=!0;O.set(s,c),O.set(c,s);for(var _t=q;++Ie<le;){Je=te[Ie];var It=s[Je],Bt=c[Je];if(E)var xi=q?E(Bt,It,Je,c,s,O):E(It,Bt,Je,s,c,O);if(!(xi===n?It===Bt||D(It,Bt,m,E,O):xi)){Rt=!1;break}_t||(_t=Je=="constructor")}if(Rt&&!_t){var Jn=s.constructor,yi=c.constructor;Jn!=yi&&"constructor"in s&&"constructor"in c&&!(typeof Jn=="function"&&Jn instanceof Jn&&typeof yi=="function"&&yi instanceof yi)&&(Rt=!1)}return O.delete(s),O.delete(c),Rt}function Er(s){return Gf(Bv(s,n,qv),s+"")}function Uf(s){return Jm(s,Rn,Nf)}function Df(s){return Jm(s,si,Dv)}var If=eu?function(s){return eu.get(s)}:Qf;function pu(s){for(var c=s.name+"",m=Is[c],E=Yt.call(Is,c)?m.length:0;E--;){var D=m[E],O=D.func;if(O==null||O==s)return D.name}return c}function Bs(s){var c=Yt.call(F,"placeholder")?F:s;return c.placeholder}function vt(){var s=F.iteratee||Kf;return s=s===Kf?tv:s,arguments.length?s(arguments[0],arguments[1]):s}function mu(s,c){var m=s.__data__;return WE(c)?m[typeof c=="string"?"string":"hash"]:m.map}function Ff(s){for(var c=Rn(s),m=c.length;m--;){var E=c[m],D=s[E];c[m]=[E,D,Nv(D)]}return c}function Ca(s,c){var m=qy(s,c);return ev(m)?m:n}function OE(s){var c=Yt.call(s,ba),m=s[ba];try{s[ba]=n;var E=!0}catch{}var D=Yc.call(s);return E&&(c?s[ba]=m:delete s[ba]),D}var Nf=cf?function(s){return s==null?[]:(s=Zt(s),Yr(cf(s),function(c){return zm.call(s,c)}))}:ed,Dv=cf?function(s){for(var c=[];s;)qr(c,Nf(s)),s=jc(s);return c}:ed,Gn=Zn;(uf&&Gn(new uf(new ArrayBuffer(1)))!=Fe||dl&&Gn(new dl)!=ze||hf&&Gn(hf.resolve())!=We||Ds&&Gn(new Ds)!=pt||pl&&Gn(new pl)!=ue)&&(Gn=function(s){var c=Zn(s),m=c==qe?s.constructor:n,E=m?Pa(m):"";if(E)switch(E){case xM:return Fe;case yM:return ze;case MM:return We;case EM:return pt;case wM:return ue}return c});function BE(s,c,m){for(var E=-1,D=m.length;++E<D;){var O=m[E],q=O.size;switch(O.type){case"drop":s+=q;break;case"dropRight":c-=q;break;case"take":c=zn(c,s+q);break;case"takeRight":s=wn(s,c-q);break}}return{start:s,end:c}}function zE(s){var c=s.match(Wr);return c?c[1].split(Ea):[]}function Iv(s,c,m){c=Jr(c,s);for(var E=-1,D=c.length,O=!1;++E<D;){var q=or(c[E]);if(!(O=s!=null&&m(s,q)))break;s=s[q]}return O||++E!=D?O:(D=s==null?0:s.length,!!D&&Eu(D)&&wr(q,D)&&(bt(s)||Ua(s)))}function GE(s){var c=s.length,m=new s.constructor(c);return c&&typeof s[0]=="string"&&Yt.call(s,"index")&&(m.index=s.index,m.input=s.input),m}function Fv(s){return typeof s.constructor=="function"&&!wl(s)?Fs(jc(s)):{}}function HE(s,c,m){var E=s.constructor;switch(c){case be:return Lf(s);case we:case Se:return new E(+s);case Fe:return SE(s,m);case st:case Ge:case ve:case ie:case Ue:case Ne:case Ve:case Le:case rt:return gv(s,m);case ze:return new E;case Re:case Dt:return new E(s);case ot:return bE(s);case pt:return new E;case G:return TE(s)}}function VE(s,c){var m=c.length;if(!m)return s;var E=m-1;return c[E]=(m>1?"& ":"")+c[E],c=c.join(m>2?", ":" "),s.replace(Es,`{
/* [wrapped with `+c+`] */
`)}function kE(s){return bt(s)||Ua(s)||!!(Gm&&s&&s[Gm])}function wr(s,c){var m=typeof s;return c=c??$,!!c&&(m=="number"||m!="symbol"&&C.test(s))&&s>-1&&s%1==0&&s<c}function Kn(s,c,m){if(!ln(m))return!1;var E=typeof c;return(E=="number"?ai(m)&&wr(c,m.length):E=="string"&&c in m)?$i(m[c],s):!1}function Of(s,c){if(bt(s))return!1;var m=typeof s;return m=="number"||m=="symbol"||m=="boolean"||s==null||_i(s)?!0:jn.test(s)||!Xt.test(s)||c!=null&&s in Zt(c)}function WE(s){var c=typeof s;return c=="string"||c=="number"||c=="symbol"||c=="boolean"?s!=="__proto__":s===null}function Bf(s){var c=pu(s),m=F[c];if(typeof m!="function"||!(c in Nt.prototype))return!1;if(s===m)return!0;var E=If(m);return!!E&&s===E[0]}function XE(s){return!!Nm&&Nm in s}var YE=Wc?Sr:td;function wl(s){var c=s&&s.constructor,m=typeof c=="function"&&c.prototype||Us;return s===m}function Nv(s){return s===s&&!ln(s)}function Ov(s,c){return function(m){return m==null?!1:m[s]===c&&(c!==n||s in Zt(m))}}function qE(s){var c=yu(s,function(E){return m.size===u&&m.clear(),E}),m=c.cache;return c}function $E(s,c){var m=s[1],E=c[1],D=m|E,O=D<(_|v|b),q=E==b&&m==M||E==b&&m==U&&s[7].length<=c[8]||E==(b|U)&&c[7].length<=c[8]&&m==M;if(!(O||q))return s;E&_&&(s[2]=c[2],D|=m&_?0:w);var te=c[3];if(te){var le=s[3];s[3]=le?xv(le,te,c[4]):te,s[4]=le?$r(s[3],f):c[4]}return te=c[5],te&&(le=s[5],s[5]=le?yv(le,te,c[6]):te,s[6]=le?$r(s[5],f):c[6]),te=c[7],te&&(s[7]=te),E&b&&(s[8]=s[8]==null?c[8]:zn(s[8],c[8])),s[9]==null&&(s[9]=c[9]),s[0]=c[0],s[1]=D,s}function jE(s){var c=[];if(s!=null)for(var m in Zt(s))c.push(m);return c}function ZE(s){return Yc.call(s)}function Bv(s,c,m){return c=wn(c===n?s.length-1:c,0),function(){for(var E=arguments,D=-1,O=wn(E.length-c,0),q=_e(O);++D<O;)q[D]=E[c+D];D=-1;for(var te=_e(c+1);++D<c;)te[D]=E[D];return te[c]=m(q),mi(s,this,te)}}function zv(s,c){return c.length<2?s:La(s,Fi(c,0,-1))}function KE(s,c){for(var m=s.length,E=zn(c.length,m),D=ri(s);E--;){var O=c[E];s[E]=wr(O,m)?D[O]:n}return s}function zf(s,c){if(!(c==="constructor"&&typeof s[c]=="function")&&c!="__proto__")return s[c]}var Gv=Vv(cv),Sl=fM||function(s,c){return Dn.setTimeout(s,c)},Gf=Vv(yE);function Hv(s,c,m){var E=c+"";return Gf(s,VE(E,JE(zE(E),m)))}function Vv(s){var c=0,m=0;return function(){var E=vM(),D=L-(E-m);if(m=E,D>0){if(++c>=W)return arguments[0]}else c=0;return s.apply(n,arguments)}}function vu(s,c){var m=-1,E=s.length,D=E-1;for(c=c===n?E:c;++m<c;){var O=Ef(m,D),q=s[O];s[O]=s[m],s[m]=q}return s.length=c,s}var kv=qE(function(s){var c=[];return s.charCodeAt(0)===46&&c.push(""),s.replace(xn,function(m,E,D,O){c.push(D?O.replace(ll,"$1"):E||m)}),c});function or(s){if(typeof s=="string"||_i(s))return s;var c=s+"";return c=="0"&&1/s==-Y?"-0":c}function Pa(s){if(s!=null){try{return Xc.call(s)}catch{}try{return s+""}catch{}}return""}function JE(s,c){return Pi(he,function(m){var E="_."+m[0];c&m[1]&&!Gc(s,E)&&s.push(E)}),s.sort()}function Wv(s){if(s instanceof Nt)return s.clone();var c=new Di(s.__wrapped__,s.__chain__);return c.__actions__=ri(s.__actions__),c.__index__=s.__index__,c.__values__=s.__values__,c}function QE(s,c,m){(m?Kn(s,c,m):c===n)?c=1:c=wn(At(c),0);var E=s==null?0:s.length;if(!E||c<1)return[];for(var D=0,O=0,q=_e(Jc(E/c));D<E;)q[O++]=Fi(s,D,D+=c);return q}function ew(s){for(var c=-1,m=s==null?0:s.length,E=0,D=[];++c<m;){var O=s[c];O&&(D[E++]=O)}return D}function tw(){var s=arguments.length;if(!s)return[];for(var c=_e(s-1),m=arguments[0],E=s;E--;)c[E-1]=arguments[E];return qr(bt(m)?ri(m):[m],In(c,1))}var nw=Pt(function(s,c){return pn(s)?_l(s,In(c,1,pn,!0)):[]}),iw=Pt(function(s,c){var m=Ni(c);return pn(m)&&(m=n),pn(s)?_l(s,In(c,1,pn,!0),vt(m,2)):[]}),rw=Pt(function(s,c){var m=Ni(c);return pn(m)&&(m=n),pn(s)?_l(s,In(c,1,pn,!0),n,m):[]});function aw(s,c,m){var E=s==null?0:s.length;return E?(c=m||c===n?1:At(c),Fi(s,c<0?0:c,E)):[]}function sw(s,c,m){var E=s==null?0:s.length;return E?(c=m||c===n?1:At(c),c=E-c,Fi(s,0,c<0?0:c)):[]}function ow(s,c){return s&&s.length?lu(s,vt(c,3),!0,!0):[]}function lw(s,c){return s&&s.length?lu(s,vt(c,3),!0):[]}function cw(s,c,m,E){var D=s==null?0:s.length;return D?(m&&typeof m!="number"&&Kn(s,c,m)&&(m=0,E=D),tE(s,c,m,E)):[]}function Xv(s,c,m){var E=s==null?0:s.length;if(!E)return-1;var D=m==null?0:At(m);return D<0&&(D=wn(E+D,0)),Hc(s,vt(c,3),D)}function Yv(s,c,m){var E=s==null?0:s.length;if(!E)return-1;var D=E-1;return m!==n&&(D=At(m),D=m<0?wn(E+D,0):zn(D,E-1)),Hc(s,vt(c,3),D,!0)}function qv(s){var c=s==null?0:s.length;return c?In(s,1):[]}function uw(s){var c=s==null?0:s.length;return c?In(s,Y):[]}function hw(s,c){var m=s==null?0:s.length;return m?(c=c===n?1:At(c),In(s,c)):[]}function fw(s){for(var c=-1,m=s==null?0:s.length,E={};++c<m;){var D=s[c];E[D[0]]=D[1]}return E}function $v(s){return s&&s.length?s[0]:n}function dw(s,c,m){var E=s==null?0:s.length;if(!E)return-1;var D=m==null?0:At(m);return D<0&&(D=wn(E+D,0)),Rs(s,c,D)}function pw(s){var c=s==null?0:s.length;return c?Fi(s,0,-1):[]}var mw=Pt(function(s){var c=an(s,Af);return c.length&&c[0]===s[0]?gf(c):[]}),vw=Pt(function(s){var c=Ni(s),m=an(s,Af);return c===Ni(m)?c=n:m.pop(),m.length&&m[0]===s[0]?gf(m,vt(c,2)):[]}),gw=Pt(function(s){var c=Ni(s),m=an(s,Af);return c=typeof c=="function"?c:n,c&&m.pop(),m.length&&m[0]===s[0]?gf(m,n,c):[]});function _w(s,c){return s==null?"":pM.call(s,c)}function Ni(s){var c=s==null?0:s.length;return c?s[c-1]:n}function xw(s,c,m){var E=s==null?0:s.length;if(!E)return-1;var D=E;return m!==n&&(D=At(m),D=D<0?wn(E+D,0):zn(D,E-1)),c===c?Jy(s,c,D):Hc(s,Rm,D,!0)}function yw(s,c){return s&&s.length?av(s,At(c)):n}var Mw=Pt(jv);function jv(s,c){return s&&s.length&&c&&c.length?Mf(s,c):s}function Ew(s,c,m){return s&&s.length&&c&&c.length?Mf(s,c,vt(m,2)):s}function ww(s,c,m){return s&&s.length&&c&&c.length?Mf(s,c,n,m):s}var Sw=Er(function(s,c){var m=s==null?0:s.length,E=df(s,c);return lv(s,an(c,function(D){return wr(D,m)?+D:D}).sort(_v)),E});function bw(s,c){var m=[];if(!(s&&s.length))return m;var E=-1,D=[],O=s.length;for(c=vt(c,3);++E<O;){var q=s[E];c(q,E,s)&&(m.push(q),D.push(E))}return lv(s,D),m}function Hf(s){return s==null?s:_M.call(s)}function Tw(s,c,m){var E=s==null?0:s.length;return E?(m&&typeof m!="number"&&Kn(s,c,m)?(c=0,m=E):(c=c==null?0:At(c),m=m===n?E:At(m)),Fi(s,c,m)):[]}function Aw(s,c){return ou(s,c)}function Rw(s,c,m){return Sf(s,c,vt(m,2))}function Lw(s,c){var m=s==null?0:s.length;if(m){var E=ou(s,c);if(E<m&&$i(s[E],c))return E}return-1}function Cw(s,c){return ou(s,c,!0)}function Pw(s,c,m){return Sf(s,c,vt(m,2),!0)}function Uw(s,c){var m=s==null?0:s.length;if(m){var E=ou(s,c,!0)-1;if($i(s[E],c))return E}return-1}function Dw(s){return s&&s.length?uv(s):[]}function Iw(s,c){return s&&s.length?uv(s,vt(c,2)):[]}function Fw(s){var c=s==null?0:s.length;return c?Fi(s,1,c):[]}function Nw(s,c,m){return s&&s.length?(c=m||c===n?1:At(c),Fi(s,0,c<0?0:c)):[]}function Ow(s,c,m){var E=s==null?0:s.length;return E?(c=m||c===n?1:At(c),c=E-c,Fi(s,c<0?0:c,E)):[]}function Bw(s,c){return s&&s.length?lu(s,vt(c,3),!1,!0):[]}function zw(s,c){return s&&s.length?lu(s,vt(c,3)):[]}var Gw=Pt(function(s){return Kr(In(s,1,pn,!0))}),Hw=Pt(function(s){var c=Ni(s);return pn(c)&&(c=n),Kr(In(s,1,pn,!0),vt(c,2))}),Vw=Pt(function(s){var c=Ni(s);return c=typeof c=="function"?c:n,Kr(In(s,1,pn,!0),n,c)});function kw(s){return s&&s.length?Kr(s):[]}function Ww(s,c){return s&&s.length?Kr(s,vt(c,2)):[]}function Xw(s,c){return c=typeof c=="function"?c:n,s&&s.length?Kr(s,n,c):[]}function Vf(s){if(!(s&&s.length))return[];var c=0;return s=Yr(s,function(m){if(pn(m))return c=wn(m.length,c),!0}),af(c,function(m){return an(s,tf(m))})}function Zv(s,c){if(!(s&&s.length))return[];var m=Vf(s);return c==null?m:an(m,function(E){return mi(c,n,E)})}var Yw=Pt(function(s,c){return pn(s)?_l(s,c):[]}),qw=Pt(function(s){return Tf(Yr(s,pn))}),$w=Pt(function(s){var c=Ni(s);return pn(c)&&(c=n),Tf(Yr(s,pn),vt(c,2))}),jw=Pt(function(s){var c=Ni(s);return c=typeof c=="function"?c:n,Tf(Yr(s,pn),n,c)}),Zw=Pt(Vf);function Kw(s,c){return pv(s||[],c||[],gl)}function Jw(s,c){return pv(s||[],c||[],Ml)}var Qw=Pt(function(s){var c=s.length,m=c>1?s[c-1]:n;return m=typeof m=="function"?(s.pop(),m):n,Zv(s,m)});function Kv(s){var c=F(s);return c.__chain__=!0,c}function eS(s,c){return c(s),s}function gu(s,c){return c(s)}var tS=Er(function(s){var c=s.length,m=c?s[0]:0,E=this.__wrapped__,D=function(O){return df(O,s)};return c>1||this.__actions__.length||!(E instanceof Nt)||!wr(m)?this.thru(D):(E=E.slice(m,+m+(c?1:0)),E.__actions__.push({func:gu,args:[D],thisArg:n}),new Di(E,this.__chain__).thru(function(O){return c&&!O.length&&O.push(n),O}))});function nS(){return Kv(this)}function iS(){return new Di(this.value(),this.__chain__)}function rS(){this.__values__===n&&(this.__values__=hg(this.value()));var s=this.__index__>=this.__values__.length,c=s?n:this.__values__[this.__index__++];return{done:s,value:c}}function aS(){return this}function sS(s){for(var c,m=this;m instanceof nu;){var E=Wv(m);E.__index__=0,E.__values__=n,c?D.__wrapped__=E:c=E;var D=E;m=m.__wrapped__}return D.__wrapped__=s,c}function oS(){var s=this.__wrapped__;if(s instanceof Nt){var c=s;return this.__actions__.length&&(c=new Nt(this)),c=c.reverse(),c.__actions__.push({func:gu,args:[Hf],thisArg:n}),new Di(c,this.__chain__)}return this.thru(Hf)}function lS(){return dv(this.__wrapped__,this.__actions__)}var cS=cu(function(s,c,m){Yt.call(s,m)?++s[m]:yr(s,m,1)});function uS(s,c,m){var E=bt(s)?Tm:eE;return m&&Kn(s,c,m)&&(c=n),E(s,vt(c,3))}function hS(s,c){var m=bt(s)?Yr:Zm;return m(s,vt(c,3))}var fS=Sv(Xv),dS=Sv(Yv);function pS(s,c){return In(_u(s,c),1)}function mS(s,c){return In(_u(s,c),Y)}function vS(s,c,m){return m=m===n?1:At(m),In(_u(s,c),m)}function Jv(s,c){var m=bt(s)?Pi:Zr;return m(s,vt(c,3))}function Qv(s,c){var m=bt(s)?Fy:jm;return m(s,vt(c,3))}var gS=cu(function(s,c,m){Yt.call(s,m)?s[m].push(c):yr(s,m,[c])});function _S(s,c,m,E){s=ai(s)?s:Gs(s),m=m&&!E?At(m):0;var D=s.length;return m<0&&(m=wn(D+m,0)),wu(s)?m<=D&&s.indexOf(c,m)>-1:!!D&&Rs(s,c,m)>-1}var xS=Pt(function(s,c,m){var E=-1,D=typeof c=="function",O=ai(s)?_e(s.length):[];return Zr(s,function(q){O[++E]=D?mi(c,q,m):xl(q,c,m)}),O}),yS=cu(function(s,c,m){yr(s,m,c)});function _u(s,c){var m=bt(s)?an:nv;return m(s,vt(c,3))}function MS(s,c,m,E){return s==null?[]:(bt(c)||(c=c==null?[]:[c]),m=E?n:m,bt(m)||(m=m==null?[]:[m]),sv(s,c,m))}var ES=cu(function(s,c,m){s[m?0:1].push(c)},function(){return[[],[]]});function wS(s,c,m){var E=bt(s)?Qh:Cm,D=arguments.length<3;return E(s,vt(c,4),m,D,Zr)}function SS(s,c,m){var E=bt(s)?Ny:Cm,D=arguments.length<3;return E(s,vt(c,4),m,D,jm)}function bS(s,c){var m=bt(s)?Yr:Zm;return m(s,Mu(vt(c,3)))}function TS(s){var c=bt(s)?Xm:_E;return c(s)}function AS(s,c,m){(m?Kn(s,c,m):c===n)?c=1:c=At(c);var E=bt(s)?jM:xE;return E(s,c)}function RS(s){var c=bt(s)?ZM:ME;return c(s)}function LS(s){if(s==null)return 0;if(ai(s))return wu(s)?Cs(s):s.length;var c=Gn(s);return c==ze||c==pt?s.size:xf(s).length}function CS(s,c,m){var E=bt(s)?ef:EE;return m&&Kn(s,c,m)&&(c=n),E(s,vt(c,3))}var PS=Pt(function(s,c){if(s==null)return[];var m=c.length;return m>1&&Kn(s,c[0],c[1])?c=[]:m>2&&Kn(c[0],c[1],c[2])&&(c=[c[0]]),sv(s,In(c,1),[])}),xu=hM||function(){return Dn.Date.now()};function US(s,c){if(typeof c!="function")throw new Ui(o);return s=At(s),function(){if(--s<1)return c.apply(this,arguments)}}function eg(s,c,m){return c=m?n:c,c=s&&c==null?s.length:c,Mr(s,b,n,n,n,n,c)}function tg(s,c){var m;if(typeof c!="function")throw new Ui(o);return s=At(s),function(){return--s>0&&(m=c.apply(this,arguments)),s<=1&&(c=n),m}}var kf=Pt(function(s,c,m){var E=_;if(m.length){var D=$r(m,Bs(kf));E|=A}return Mr(s,E,c,m,D)}),ng=Pt(function(s,c,m){var E=_|v;if(m.length){var D=$r(m,Bs(ng));E|=A}return Mr(c,E,s,m,D)});function ig(s,c,m){c=m?n:c;var E=Mr(s,M,n,n,n,n,n,c);return E.placeholder=ig.placeholder,E}function rg(s,c,m){c=m?n:c;var E=Mr(s,T,n,n,n,n,n,c);return E.placeholder=rg.placeholder,E}function ag(s,c,m){var E,D,O,q,te,le,Te=0,Ae=!1,Ie=!1,Je=!0;if(typeof s!="function")throw new Ui(o);c=Oi(c)||0,ln(m)&&(Ae=!!m.leading,Ie="maxWait"in m,O=Ie?wn(Oi(m.maxWait)||0,c):O,Je="trailing"in m?!!m.trailing:Je);function ut(mn){var ji=E,Tr=D;return E=D=n,Te=mn,q=s.apply(Tr,ji),q}function gt(mn){return Te=mn,te=Sl(It,c),Ae?ut(mn):q}function Rt(mn){var ji=mn-le,Tr=mn-Te,Sg=c-ji;return Ie?zn(Sg,O-Tr):Sg}function _t(mn){var ji=mn-le,Tr=mn-Te;return le===n||ji>=c||ji<0||Ie&&Tr>=O}function It(){var mn=xu();if(_t(mn))return Bt(mn);te=Sl(It,Rt(mn))}function Bt(mn){return te=n,Je&&E?ut(mn):(E=D=n,q)}function xi(){te!==n&&mv(te),Te=0,E=le=D=te=n}function Jn(){return te===n?q:Bt(xu())}function yi(){var mn=xu(),ji=_t(mn);if(E=arguments,D=this,le=mn,ji){if(te===n)return gt(le);if(Ie)return mv(te),te=Sl(It,c),ut(le)}return te===n&&(te=Sl(It,c)),q}return yi.cancel=xi,yi.flush=Jn,yi}var DS=Pt(function(s,c){return $m(s,1,c)}),IS=Pt(function(s,c,m){return $m(s,Oi(c)||0,m)});function FS(s){return Mr(s,S)}function yu(s,c){if(typeof s!="function"||c!=null&&typeof c!="function")throw new Ui(o);var m=function(){var E=arguments,D=c?c.apply(this,E):E[0],O=m.cache;if(O.has(D))return O.get(D);var q=s.apply(this,E);return m.cache=O.set(D,q)||O,q};return m.cache=new(yu.Cache||xr),m}yu.Cache=xr;function Mu(s){if(typeof s!="function")throw new Ui(o);return function(){var c=arguments;switch(c.length){case 0:return!s.call(this);case 1:return!s.call(this,c[0]);case 2:return!s.call(this,c[0],c[1]);case 3:return!s.call(this,c[0],c[1],c[2])}return!s.apply(this,c)}}function NS(s){return tg(2,s)}var OS=wE(function(s,c){c=c.length==1&&bt(c[0])?an(c[0],vi(vt())):an(In(c,1),vi(vt()));var m=c.length;return Pt(function(E){for(var D=-1,O=zn(E.length,m);++D<O;)E[D]=c[D].call(this,E[D]);return mi(s,this,E)})}),Wf=Pt(function(s,c){var m=$r(c,Bs(Wf));return Mr(s,A,n,c,m)}),sg=Pt(function(s,c){var m=$r(c,Bs(sg));return Mr(s,P,n,c,m)}),BS=Er(function(s,c){return Mr(s,U,n,n,n,c)});function zS(s,c){if(typeof s!="function")throw new Ui(o);return c=c===n?c:At(c),Pt(s,c)}function GS(s,c){if(typeof s!="function")throw new Ui(o);return c=c==null?0:wn(At(c),0),Pt(function(m){var E=m[c],D=Qr(m,0,c);return E&&qr(D,E),mi(s,this,D)})}function HS(s,c,m){var E=!0,D=!0;if(typeof s!="function")throw new Ui(o);return ln(m)&&(E="leading"in m?!!m.leading:E,D="trailing"in m?!!m.trailing:D),ag(s,c,{leading:E,maxWait:c,trailing:D})}function VS(s){return eg(s,1)}function kS(s,c){return Wf(Rf(c),s)}function WS(){if(!arguments.length)return[];var s=arguments[0];return bt(s)?s:[s]}function XS(s){return Ii(s,g)}function YS(s,c){return c=typeof c=="function"?c:n,Ii(s,g,c)}function qS(s){return Ii(s,d|g)}function $S(s,c){return c=typeof c=="function"?c:n,Ii(s,d|g,c)}function jS(s,c){return c==null||qm(s,c,Rn(c))}function $i(s,c){return s===c||s!==s&&c!==c}var ZS=du(vf),KS=du(function(s,c){return s>=c}),Ua=Qm(function(){return arguments}())?Qm:function(s){return un(s)&&Yt.call(s,"callee")&&!zm.call(s,"callee")},bt=_e.isArray,JS=ym?vi(ym):sE;function ai(s){return s!=null&&Eu(s.length)&&!Sr(s)}function pn(s){return un(s)&&ai(s)}function QS(s){return s===!0||s===!1||un(s)&&Zn(s)==we}var ea=dM||td,eb=Mm?vi(Mm):oE;function tb(s){return un(s)&&s.nodeType===1&&!bl(s)}function nb(s){if(s==null)return!0;if(ai(s)&&(bt(s)||typeof s=="string"||typeof s.splice=="function"||ea(s)||zs(s)||Ua(s)))return!s.length;var c=Gn(s);if(c==ze||c==pt)return!s.size;if(wl(s))return!xf(s).length;for(var m in s)if(Yt.call(s,m))return!1;return!0}function ib(s,c){return yl(s,c)}function rb(s,c,m){m=typeof m=="function"?m:n;var E=m?m(s,c):n;return E===n?yl(s,c,n,m):!!E}function Xf(s){if(!un(s))return!1;var c=Zn(s);return c==J||c==ht||typeof s.message=="string"&&typeof s.name=="string"&&!bl(s)}function ab(s){return typeof s=="number"&&Hm(s)}function Sr(s){if(!ln(s))return!1;var c=Zn(s);return c==se||c==Qe||c==Pe||c==tt}function og(s){return typeof s=="number"&&s==At(s)}function Eu(s){return typeof s=="number"&&s>-1&&s%1==0&&s<=$}function ln(s){var c=typeof s;return s!=null&&(c=="object"||c=="function")}function un(s){return s!=null&&typeof s=="object"}var lg=Em?vi(Em):cE;function sb(s,c){return s===c||_f(s,c,Ff(c))}function ob(s,c,m){return m=typeof m=="function"?m:n,_f(s,c,Ff(c),m)}function lb(s){return cg(s)&&s!=+s}function cb(s){if(YE(s))throw new wt(a);return ev(s)}function ub(s){return s===null}function hb(s){return s==null}function cg(s){return typeof s=="number"||un(s)&&Zn(s)==Re}function bl(s){if(!un(s)||Zn(s)!=qe)return!1;var c=jc(s);if(c===null)return!0;var m=Yt.call(c,"constructor")&&c.constructor;return typeof m=="function"&&m instanceof m&&Xc.call(m)==oM}var Yf=wm?vi(wm):uE;function fb(s){return og(s)&&s>=-$&&s<=$}var ug=Sm?vi(Sm):hE;function wu(s){return typeof s=="string"||!bt(s)&&un(s)&&Zn(s)==Dt}function _i(s){return typeof s=="symbol"||un(s)&&Zn(s)==G}var zs=bm?vi(bm):fE;function db(s){return s===n}function pb(s){return un(s)&&Gn(s)==ue}function mb(s){return un(s)&&Zn(s)==Ce}var vb=du(yf),gb=du(function(s,c){return s<=c});function hg(s){if(!s)return[];if(ai(s))return wu(s)?Yi(s):ri(s);if(fl&&s[fl])return jy(s[fl]());var c=Gn(s),m=c==ze?of:c==pt?Vc:Gs;return m(s)}function br(s){if(!s)return s===0?s:0;if(s=Oi(s),s===Y||s===-Y){var c=s<0?-1:1;return c*ne}return s===s?s:0}function At(s){var c=br(s),m=c%1;return c===c?m?c-m:c:0}function fg(s){return s?Ra(At(s),0,j):0}function Oi(s){if(typeof s=="number")return s;if(_i(s))return ae;if(ln(s)){var c=typeof s.valueOf=="function"?s.valueOf():s;s=ln(c)?c+"":c}if(typeof s!="string")return s===0?s:+s;s=Pm(s);var m=pe.test(s);return m||nt.test(s)?Uy(s.slice(2),m?2:8):ye.test(s)?ae:+s}function dg(s){return sr(s,si(s))}function _b(s){return s?Ra(At(s),-$,$):s===0?s:0}function Vt(s){return s==null?"":gi(s)}var xb=Ns(function(s,c){if(wl(c)||ai(c)){sr(c,Rn(c),s);return}for(var m in c)Yt.call(c,m)&&gl(s,m,c[m])}),pg=Ns(function(s,c){sr(c,si(c),s)}),Su=Ns(function(s,c,m,E){sr(c,si(c),s,E)}),yb=Ns(function(s,c,m,E){sr(c,Rn(c),s,E)}),Mb=Er(df);function Eb(s,c){var m=Fs(s);return c==null?m:Ym(m,c)}var wb=Pt(function(s,c){s=Zt(s);var m=-1,E=c.length,D=E>2?c[2]:n;for(D&&Kn(c[0],c[1],D)&&(E=1);++m<E;)for(var O=c[m],q=si(O),te=-1,le=q.length;++te<le;){var Te=q[te],Ae=s[Te];(Ae===n||$i(Ae,Us[Te])&&!Yt.call(s,Te))&&(s[Te]=O[Te])}return s}),Sb=Pt(function(s){return s.push(n,Pv),mi(mg,n,s)});function bb(s,c){return Am(s,vt(c,3),ar)}function Tb(s,c){return Am(s,vt(c,3),mf)}function Ab(s,c){return s==null?s:pf(s,vt(c,3),si)}function Rb(s,c){return s==null?s:Km(s,vt(c,3),si)}function Lb(s,c){return s&&ar(s,vt(c,3))}function Cb(s,c){return s&&mf(s,vt(c,3))}function Pb(s){return s==null?[]:au(s,Rn(s))}function Ub(s){return s==null?[]:au(s,si(s))}function qf(s,c,m){var E=s==null?n:La(s,c);return E===n?m:E}function Db(s,c){return s!=null&&Iv(s,c,nE)}function $f(s,c){return s!=null&&Iv(s,c,iE)}var Ib=Tv(function(s,c,m){c!=null&&typeof c.toString!="function"&&(c=Yc.call(c)),s[c]=m},Zf(oi)),Fb=Tv(function(s,c,m){c!=null&&typeof c.toString!="function"&&(c=Yc.call(c)),Yt.call(s,c)?s[c].push(m):s[c]=[m]},vt),Nb=Pt(xl);function Rn(s){return ai(s)?Wm(s):xf(s)}function si(s){return ai(s)?Wm(s,!0):dE(s)}function Ob(s,c){var m={};return c=vt(c,3),ar(s,function(E,D,O){yr(m,c(E,D,O),E)}),m}function Bb(s,c){var m={};return c=vt(c,3),ar(s,function(E,D,O){yr(m,D,c(E,D,O))}),m}var zb=Ns(function(s,c,m){su(s,c,m)}),mg=Ns(function(s,c,m,E){su(s,c,m,E)}),Gb=Er(function(s,c){var m={};if(s==null)return m;var E=!1;c=an(c,function(O){return O=Jr(O,s),E||(E=O.length>1),O}),sr(s,Df(s),m),E&&(m=Ii(m,d|p|g,IE));for(var D=c.length;D--;)bf(m,c[D]);return m});function Hb(s,c){return vg(s,Mu(vt(c)))}var Vb=Er(function(s,c){return s==null?{}:mE(s,c)});function vg(s,c){if(s==null)return{};var m=an(Df(s),function(E){return[E]});return c=vt(c),ov(s,m,function(E,D){return c(E,D[0])})}function kb(s,c,m){c=Jr(c,s);var E=-1,D=c.length;for(D||(D=1,s=n);++E<D;){var O=s==null?n:s[or(c[E])];O===n&&(E=D,O=m),s=Sr(O)?O.call(s):O}return s}function Wb(s,c,m){return s==null?s:Ml(s,c,m)}function Xb(s,c,m,E){return E=typeof E=="function"?E:n,s==null?s:Ml(s,c,m,E)}var gg=Lv(Rn),_g=Lv(si);function Yb(s,c,m){var E=bt(s),D=E||ea(s)||zs(s);if(c=vt(c,4),m==null){var O=s&&s.constructor;D?m=E?new O:[]:ln(s)?m=Sr(O)?Fs(jc(s)):{}:m={}}return(D?Pi:ar)(s,function(q,te,le){return c(m,q,te,le)}),m}function qb(s,c){return s==null?!0:bf(s,c)}function $b(s,c,m){return s==null?s:fv(s,c,Rf(m))}function jb(s,c,m,E){return E=typeof E=="function"?E:n,s==null?s:fv(s,c,Rf(m),E)}function Gs(s){return s==null?[]:sf(s,Rn(s))}function Zb(s){return s==null?[]:sf(s,si(s))}function Kb(s,c,m){return m===n&&(m=c,c=n),m!==n&&(m=Oi(m),m=m===m?m:0),c!==n&&(c=Oi(c),c=c===c?c:0),Ra(Oi(s),c,m)}function Jb(s,c,m){return c=br(c),m===n?(m=c,c=0):m=br(m),s=Oi(s),rE(s,c,m)}function Qb(s,c,m){if(m&&typeof m!="boolean"&&Kn(s,c,m)&&(c=m=n),m===n&&(typeof c=="boolean"?(m=c,c=n):typeof s=="boolean"&&(m=s,s=n)),s===n&&c===n?(s=0,c=1):(s=br(s),c===n?(c=s,s=0):c=br(c)),s>c){var E=s;s=c,c=E}if(m||s%1||c%1){var D=Vm();return zn(s+D*(c-s+Py("1e-"+((D+"").length-1))),c)}return Ef(s,c)}var eT=Os(function(s,c,m){return c=c.toLowerCase(),s+(m?xg(c):c)});function xg(s){return jf(Vt(s).toLowerCase())}function yg(s){return s=Vt(s),s&&s.replace(B,Wy).replace(My,"")}function tT(s,c,m){s=Vt(s),c=gi(c);var E=s.length;m=m===n?E:Ra(At(m),0,E);var D=m;return m-=c.length,m>=0&&s.slice(m,D)==c}function nT(s){return s=Vt(s),s&&Ft.test(s)?s.replace(Oe,Xy):s}function iT(s){return s=Vt(s),s&&ya.test(s)?s.replace(Vr,"\\$&"):s}var rT=Os(function(s,c,m){return s+(m?"-":"")+c.toLowerCase()}),aT=Os(function(s,c,m){return s+(m?" ":"")+c.toLowerCase()}),sT=wv("toLowerCase");function oT(s,c,m){s=Vt(s),c=At(c);var E=c?Cs(s):0;if(!c||E>=c)return s;var D=(c-E)/2;return fu(Qc(D),m)+s+fu(Jc(D),m)}function lT(s,c,m){s=Vt(s),c=At(c);var E=c?Cs(s):0;return c&&E<c?s+fu(c-E,m):s}function cT(s,c,m){s=Vt(s),c=At(c);var E=c?Cs(s):0;return c&&E<c?fu(c-E,m)+s:s}function uT(s,c,m){return m||c==null?c=0:c&&(c=+c),gM(Vt(s).replace(Ma,""),c||0)}function hT(s,c,m){return(m?Kn(s,c,m):c===n)?c=1:c=At(c),wf(Vt(s),c)}function fT(){var s=arguments,c=Vt(s[0]);return s.length<3?c:c.replace(s[1],s[2])}var dT=Os(function(s,c,m){return s+(m?"_":"")+c.toLowerCase()});function pT(s,c,m){return m&&typeof m!="number"&&Kn(s,c,m)&&(c=m=n),m=m===n?j:m>>>0,m?(s=Vt(s),s&&(typeof c=="string"||c!=null&&!Yf(c))&&(c=gi(c),!c&&Ls(s))?Qr(Yi(s),0,m):s.split(c,m)):[]}var mT=Os(function(s,c,m){return s+(m?" ":"")+jf(c)});function vT(s,c,m){return s=Vt(s),m=m==null?0:Ra(At(m),0,s.length),c=gi(c),s.slice(m,m+c.length)==c}function gT(s,c,m){var E=F.templateSettings;m&&Kn(s,c,m)&&(c=n),s=Vt(s),c=Su({},c,E,Cv);var D=Su({},c.imports,E.imports,Cv),O=Rn(D),q=sf(D,O),te,le,Te=0,Ae=c.interpolate||Z,Ie="__p += '",Je=lf((c.escape||Z).source+"|"+Ae.source+"|"+(Ae===On?H:Z).source+"|"+(c.evaluate||Z).source+"|$","g"),ut="//# sourceURL="+(Yt.call(c,"sourceURL")?(c.sourceURL+"").replace(/\s/g," "):"lodash.templateSources["+ ++Ty+"]")+`
`;s.replace(Je,function(_t,It,Bt,xi,Jn,yi){return Bt||(Bt=xi),Ie+=s.slice(Te,yi).replace(xe,Yy),It&&(te=!0,Ie+=`' +
__e(`+It+`) +
'`),Jn&&(le=!0,Ie+=`';
`+Jn+`;
__p += '`),Bt&&(Ie+=`' +
((__t = (`+Bt+`)) == null ? '' : __t) +
'`),Te=yi+_t.length,_t}),Ie+=`';
`;var gt=Yt.call(c,"variable")&&c.variable;if(!gt)Ie=`with (obj) {
`+Ie+`
}
`;else if(ws.test(gt))throw new wt(l);Ie=(le?Ie.replace(Et,""):Ie).replace(ee,"$1").replace(Xe,"$1;"),Ie="function("+(gt||"obj")+`) {
`+(gt?"":`obj || (obj = {});
`)+"var __t, __p = ''"+(te?", __e = _.escape":"")+(le?`, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
`:`;
`)+Ie+`return __p
}`;var Rt=Eg(function(){return zt(O,ut+"return "+Ie).apply(n,q)});if(Rt.source=Ie,Xf(Rt))throw Rt;return Rt}function _T(s){return Vt(s).toLowerCase()}function xT(s){return Vt(s).toUpperCase()}function yT(s,c,m){if(s=Vt(s),s&&(m||c===n))return Pm(s);if(!s||!(c=gi(c)))return s;var E=Yi(s),D=Yi(c),O=Um(E,D),q=Dm(E,D)+1;return Qr(E,O,q).join("")}function MT(s,c,m){if(s=Vt(s),s&&(m||c===n))return s.slice(0,Fm(s)+1);if(!s||!(c=gi(c)))return s;var E=Yi(s),D=Dm(E,Yi(c))+1;return Qr(E,0,D).join("")}function ET(s,c,m){if(s=Vt(s),s&&(m||c===n))return s.replace(Ma,"");if(!s||!(c=gi(c)))return s;var E=Yi(s),D=Um(E,Yi(c));return Qr(E,D).join("")}function wT(s,c){var m=R,E=V;if(ln(c)){var D="separator"in c?c.separator:D;m="length"in c?At(c.length):m,E="omission"in c?gi(c.omission):E}s=Vt(s);var O=s.length;if(Ls(s)){var q=Yi(s);O=q.length}if(m>=O)return s;var te=m-Cs(E);if(te<1)return E;var le=q?Qr(q,0,te).join(""):s.slice(0,te);if(D===n)return le+E;if(q&&(te+=le.length-te),Yf(D)){if(s.slice(te).search(D)){var Te,Ae=le;for(D.global||(D=lf(D.source,Vt(de.exec(D))+"g")),D.lastIndex=0;Te=D.exec(Ae);)var Ie=Te.index;le=le.slice(0,Ie===n?te:Ie)}}else if(s.indexOf(gi(D),te)!=te){var Je=le.lastIndexOf(D);Je>-1&&(le=le.slice(0,Je))}return le+E}function ST(s){return s=Vt(s),s&&Ye.test(s)?s.replace(fe,Qy):s}var bT=Os(function(s,c,m){return s+(m?" ":"")+c.toUpperCase()}),jf=wv("toUpperCase");function Mg(s,c,m){return s=Vt(s),c=m?n:c,c===n?$y(s)?nM(s):zy(s):s.match(c)||[]}var Eg=Pt(function(s,c){try{return mi(s,n,c)}catch(m){return Xf(m)?m:new wt(m)}}),TT=Er(function(s,c){return Pi(c,function(m){m=or(m),yr(s,m,kf(s[m],s))}),s});function AT(s){var c=s==null?0:s.length,m=vt();return s=c?an(s,function(E){if(typeof E[1]!="function")throw new Ui(o);return[m(E[0]),E[1]]}):[],Pt(function(E){for(var D=-1;++D<c;){var O=s[D];if(mi(O[0],this,E))return mi(O[1],this,E)}})}function RT(s){return QM(Ii(s,d))}function Zf(s){return function(){return s}}function LT(s,c){return s==null||s!==s?c:s}var CT=bv(),PT=bv(!0);function oi(s){return s}function Kf(s){return tv(typeof s=="function"?s:Ii(s,d))}function UT(s){return iv(Ii(s,d))}function DT(s,c){return rv(s,Ii(c,d))}var IT=Pt(function(s,c){return function(m){return xl(m,s,c)}}),FT=Pt(function(s,c){return function(m){return xl(s,m,c)}});function Jf(s,c,m){var E=Rn(c),D=au(c,E);m==null&&!(ln(c)&&(D.length||!E.length))&&(m=c,c=s,s=this,D=au(c,Rn(c)));var O=!(ln(m)&&"chain"in m)||!!m.chain,q=Sr(s);return Pi(D,function(te){var le=c[te];s[te]=le,q&&(s.prototype[te]=function(){var Te=this.__chain__;if(O||Te){var Ae=s(this.__wrapped__),Ie=Ae.__actions__=ri(this.__actions__);return Ie.push({func:le,args:arguments,thisArg:s}),Ae.__chain__=Te,Ae}return le.apply(s,qr([this.value()],arguments))})}),s}function NT(){return Dn._===this&&(Dn._=lM),this}function Qf(){}function OT(s){return s=At(s),Pt(function(c){return av(c,s)})}var BT=Cf(an),zT=Cf(Tm),GT=Cf(ef);function wg(s){return Of(s)?tf(or(s)):vE(s)}function HT(s){return function(c){return s==null?n:La(s,c)}}var VT=Av(),kT=Av(!0);function ed(){return[]}function td(){return!1}function WT(){return{}}function XT(){return""}function YT(){return!0}function qT(s,c){if(s=At(s),s<1||s>$)return[];var m=j,E=zn(s,j);c=vt(c),s-=j;for(var D=af(E,c);++m<s;)c(m);return D}function $T(s){return bt(s)?an(s,or):_i(s)?[s]:ri(kv(Vt(s)))}function jT(s){var c=++sM;return Vt(s)+c}var ZT=hu(function(s,c){return s+c},0),KT=Pf("ceil"),JT=hu(function(s,c){return s/c},1),QT=Pf("floor");function e1(s){return s&&s.length?ru(s,oi,vf):n}function t1(s,c){return s&&s.length?ru(s,vt(c,2),vf):n}function n1(s){return Lm(s,oi)}function i1(s,c){return Lm(s,vt(c,2))}function r1(s){return s&&s.length?ru(s,oi,yf):n}function a1(s,c){return s&&s.length?ru(s,vt(c,2),yf):n}var s1=hu(function(s,c){return s*c},1),o1=Pf("round"),l1=hu(function(s,c){return s-c},0);function c1(s){return s&&s.length?rf(s,oi):0}function u1(s,c){return s&&s.length?rf(s,vt(c,2)):0}return F.after=US,F.ary=eg,F.assign=xb,F.assignIn=pg,F.assignInWith=Su,F.assignWith=yb,F.at=Mb,F.before=tg,F.bind=kf,F.bindAll=TT,F.bindKey=ng,F.castArray=WS,F.chain=Kv,F.chunk=QE,F.compact=ew,F.concat=tw,F.cond=AT,F.conforms=RT,F.constant=Zf,F.countBy=cS,F.create=Eb,F.curry=ig,F.curryRight=rg,F.debounce=ag,F.defaults=wb,F.defaultsDeep=Sb,F.defer=DS,F.delay=IS,F.difference=nw,F.differenceBy=iw,F.differenceWith=rw,F.drop=aw,F.dropRight=sw,F.dropRightWhile=ow,F.dropWhile=lw,F.fill=cw,F.filter=hS,F.flatMap=pS,F.flatMapDeep=mS,F.flatMapDepth=vS,F.flatten=qv,F.flattenDeep=uw,F.flattenDepth=hw,F.flip=FS,F.flow=CT,F.flowRight=PT,F.fromPairs=fw,F.functions=Pb,F.functionsIn=Ub,F.groupBy=gS,F.initial=pw,F.intersection=mw,F.intersectionBy=vw,F.intersectionWith=gw,F.invert=Ib,F.invertBy=Fb,F.invokeMap=xS,F.iteratee=Kf,F.keyBy=yS,F.keys=Rn,F.keysIn=si,F.map=_u,F.mapKeys=Ob,F.mapValues=Bb,F.matches=UT,F.matchesProperty=DT,F.memoize=yu,F.merge=zb,F.mergeWith=mg,F.method=IT,F.methodOf=FT,F.mixin=Jf,F.negate=Mu,F.nthArg=OT,F.omit=Gb,F.omitBy=Hb,F.once=NS,F.orderBy=MS,F.over=BT,F.overArgs=OS,F.overEvery=zT,F.overSome=GT,F.partial=Wf,F.partialRight=sg,F.partition=ES,F.pick=Vb,F.pickBy=vg,F.property=wg,F.propertyOf=HT,F.pull=Mw,F.pullAll=jv,F.pullAllBy=Ew,F.pullAllWith=ww,F.pullAt=Sw,F.range=VT,F.rangeRight=kT,F.rearg=BS,F.reject=bS,F.remove=bw,F.rest=zS,F.reverse=Hf,F.sampleSize=AS,F.set=Wb,F.setWith=Xb,F.shuffle=RS,F.slice=Tw,F.sortBy=PS,F.sortedUniq=Dw,F.sortedUniqBy=Iw,F.split=pT,F.spread=GS,F.tail=Fw,F.take=Nw,F.takeRight=Ow,F.takeRightWhile=Bw,F.takeWhile=zw,F.tap=eS,F.throttle=HS,F.thru=gu,F.toArray=hg,F.toPairs=gg,F.toPairsIn=_g,F.toPath=$T,F.toPlainObject=dg,F.transform=Yb,F.unary=VS,F.union=Gw,F.unionBy=Hw,F.unionWith=Vw,F.uniq=kw,F.uniqBy=Ww,F.uniqWith=Xw,F.unset=qb,F.unzip=Vf,F.unzipWith=Zv,F.update=$b,F.updateWith=jb,F.values=Gs,F.valuesIn=Zb,F.without=Yw,F.words=Mg,F.wrap=kS,F.xor=qw,F.xorBy=$w,F.xorWith=jw,F.zip=Zw,F.zipObject=Kw,F.zipObjectDeep=Jw,F.zipWith=Qw,F.entries=gg,F.entriesIn=_g,F.extend=pg,F.extendWith=Su,Jf(F,F),F.add=ZT,F.attempt=Eg,F.camelCase=eT,F.capitalize=xg,F.ceil=KT,F.clamp=Kb,F.clone=XS,F.cloneDeep=qS,F.cloneDeepWith=$S,F.cloneWith=YS,F.conformsTo=jS,F.deburr=yg,F.defaultTo=LT,F.divide=JT,F.endsWith=tT,F.eq=$i,F.escape=nT,F.escapeRegExp=iT,F.every=uS,F.find=fS,F.findIndex=Xv,F.findKey=bb,F.findLast=dS,F.findLastIndex=Yv,F.findLastKey=Tb,F.floor=QT,F.forEach=Jv,F.forEachRight=Qv,F.forIn=Ab,F.forInRight=Rb,F.forOwn=Lb,F.forOwnRight=Cb,F.get=qf,F.gt=ZS,F.gte=KS,F.has=Db,F.hasIn=$f,F.head=$v,F.identity=oi,F.includes=_S,F.indexOf=dw,F.inRange=Jb,F.invoke=Nb,F.isArguments=Ua,F.isArray=bt,F.isArrayBuffer=JS,F.isArrayLike=ai,F.isArrayLikeObject=pn,F.isBoolean=QS,F.isBuffer=ea,F.isDate=eb,F.isElement=tb,F.isEmpty=nb,F.isEqual=ib,F.isEqualWith=rb,F.isError=Xf,F.isFinite=ab,F.isFunction=Sr,F.isInteger=og,F.isLength=Eu,F.isMap=lg,F.isMatch=sb,F.isMatchWith=ob,F.isNaN=lb,F.isNative=cb,F.isNil=hb,F.isNull=ub,F.isNumber=cg,F.isObject=ln,F.isObjectLike=un,F.isPlainObject=bl,F.isRegExp=Yf,F.isSafeInteger=fb,F.isSet=ug,F.isString=wu,F.isSymbol=_i,F.isTypedArray=zs,F.isUndefined=db,F.isWeakMap=pb,F.isWeakSet=mb,F.join=_w,F.kebabCase=rT,F.last=Ni,F.lastIndexOf=xw,F.lowerCase=aT,F.lowerFirst=sT,F.lt=vb,F.lte=gb,F.max=e1,F.maxBy=t1,F.mean=n1,F.meanBy=i1,F.min=r1,F.minBy=a1,F.stubArray=ed,F.stubFalse=td,F.stubObject=WT,F.stubString=XT,F.stubTrue=YT,F.multiply=s1,F.nth=yw,F.noConflict=NT,F.noop=Qf,F.now=xu,F.pad=oT,F.padEnd=lT,F.padStart=cT,F.parseInt=uT,F.random=Qb,F.reduce=wS,F.reduceRight=SS,F.repeat=hT,F.replace=fT,F.result=kb,F.round=o1,F.runInContext=oe,F.sample=TS,F.size=LS,F.snakeCase=dT,F.some=CS,F.sortedIndex=Aw,F.sortedIndexBy=Rw,F.sortedIndexOf=Lw,F.sortedLastIndex=Cw,F.sortedLastIndexBy=Pw,F.sortedLastIndexOf=Uw,F.startCase=mT,F.startsWith=vT,F.subtract=l1,F.sum=c1,F.sumBy=u1,F.template=gT,F.times=qT,F.toFinite=br,F.toInteger=At,F.toLength=fg,F.toLower=_T,F.toNumber=Oi,F.toSafeInteger=_b,F.toString=Vt,F.toUpper=xT,F.trim=yT,F.trimEnd=MT,F.trimStart=ET,F.truncate=wT,F.unescape=ST,F.uniqueId=jT,F.upperCase=bT,F.upperFirst=jf,F.each=Jv,F.eachRight=Qv,F.first=$v,Jf(F,function(){var s={};return ar(F,function(c,m){Yt.call(F.prototype,m)||(s[m]=c)}),s}(),{chain:!1}),F.VERSION=i,Pi(["bind","bindKey","curry","curryRight","partial","partialRight"],function(s){F[s].placeholder=F}),Pi(["drop","take"],function(s,c){Nt.prototype[s]=function(m){m=m===n?1:wn(At(m),0);var E=this.__filtered__&&!c?new Nt(this):this.clone();return E.__filtered__?E.__takeCount__=zn(m,E.__takeCount__):E.__views__.push({size:zn(m,j),type:s+(E.__dir__<0?"Right":"")}),E},Nt.prototype[s+"Right"]=function(m){return this.reverse()[s](m).reverse()}}),Pi(["filter","map","takeWhile"],function(s,c){var m=c+1,E=m==I||m==X;Nt.prototype[s]=function(D){var O=this.clone();return O.__iteratees__.push({iteratee:vt(D,3),type:m}),O.__filtered__=O.__filtered__||E,O}}),Pi(["head","last"],function(s,c){var m="take"+(c?"Right":"");Nt.prototype[s]=function(){return this[m](1).value()[0]}}),Pi(["initial","tail"],function(s,c){var m="drop"+(c?"":"Right");Nt.prototype[s]=function(){return this.__filtered__?new Nt(this):this[m](1)}}),Nt.prototype.compact=function(){return this.filter(oi)},Nt.prototype.find=function(s){return this.filter(s).head()},Nt.prototype.findLast=function(s){return this.reverse().find(s)},Nt.prototype.invokeMap=Pt(function(s,c){return typeof s=="function"?new Nt(this):this.map(function(m){return xl(m,s,c)})}),Nt.prototype.reject=function(s){return this.filter(Mu(vt(s)))},Nt.prototype.slice=function(s,c){s=At(s);var m=this;return m.__filtered__&&(s>0||c<0)?new Nt(m):(s<0?m=m.takeRight(-s):s&&(m=m.drop(s)),c!==n&&(c=At(c),m=c<0?m.dropRight(-c):m.take(c-s)),m)},Nt.prototype.takeRightWhile=function(s){return this.reverse().takeWhile(s).reverse()},Nt.prototype.toArray=function(){return this.take(j)},ar(Nt.prototype,function(s,c){var m=/^(?:filter|find|map|reject)|While$/.test(c),E=/^(?:head|last)$/.test(c),D=F[E?"take"+(c=="last"?"Right":""):c],O=E||/^find/.test(c);D&&(F.prototype[c]=function(){var q=this.__wrapped__,te=E?[1]:arguments,le=q instanceof Nt,Te=te[0],Ae=le||bt(q),Ie=function(It){var Bt=D.apply(F,qr([It],te));return E&&Je?Bt[0]:Bt};Ae&&m&&typeof Te=="function"&&Te.length!=1&&(le=Ae=!1);var Je=this.__chain__,ut=!!this.__actions__.length,gt=O&&!Je,Rt=le&&!ut;if(!O&&Ae){q=Rt?q:new Nt(this);var _t=s.apply(q,te);return _t.__actions__.push({func:gu,args:[Ie],thisArg:n}),new Di(_t,Je)}return gt&&Rt?s.apply(this,te):(_t=this.thru(Ie),gt?E?_t.value()[0]:_t.value():_t)})}),Pi(["pop","push","shift","sort","splice","unshift"],function(s){var c=kc[s],m=/^(?:push|sort|unshift)$/.test(s)?"tap":"thru",E=/^(?:pop|shift)$/.test(s);F.prototype[s]=function(){var D=arguments;if(E&&!this.__chain__){var O=this.value();return c.apply(bt(O)?O:[],D)}return this[m](function(q){return c.apply(bt(q)?q:[],D)})}}),ar(Nt.prototype,function(s,c){var m=F[c];if(m){var E=m.name+"";Yt.call(Is,E)||(Is[E]=[]),Is[E].push({name:c,func:m})}}),Is[uu(n,v).name]=[{name:"wrapper",func:n}],Nt.prototype.clone=SM,Nt.prototype.reverse=bM,Nt.prototype.value=TM,F.prototype.at=tS,F.prototype.chain=nS,F.prototype.commit=iS,F.prototype.next=rS,F.prototype.plant=sS,F.prototype.reverse=oS,F.prototype.toJSON=F.prototype.valueOf=F.prototype.value=lS,F.prototype.first=F.prototype.head,fl&&(F.prototype[fl]=aS),F},Ps=iM();Sa?((Sa.exports=Ps)._=Ps,Zh._=Ps):Dn._=Ps}).call(sa)})(Ph,Ph.exports);var ca=Ph.exports;function z3(e,t,n){return e.position.distanceTo(t.position)<e.radius+t.radius+n}function G3(e,t){const n=ca.sample(e),i=new ce(ca.random(-.5,.5),ca.random(-.5,.5),ca.random(-.5,.5)).normalize().multiplyScalar(n.radius).addScalar(t+.1);return n.position.clone().add(i)}function H3(){let n=[];for(;n.length<10;){const r=ca.random(20,100),a=new ce(ca.random(-vn.maxPlanetOffset,vn.maxPlanetOffset),ca.random(-vn.maxPlanetOffset,vn.maxPlanetOffset),ca.random(-vn.maxPlanetOffset,vn.maxPlanetOffset)),o={radius:r,position:a,color:dy()};n.some(l=>z3(o,l,20))||n.push(o)}return{planets:n,initialBallPosition:G3(n,vn.ball.radius)}}class V3{constructor(){this.startDate=Date.now(),this.renderer=new X0({antialias:!0,canvas:document.getElementById("mainCanvas")}),this.scene=new y2,this.manualOrbitCamera=new kn(vn.cameraFov,innerWidth/innerHeight,.1,Math.pow(10,6)),this.autoRotatingOrbitCamera=new kn(vn.cameraFov,innerWidth/innerHeight,.1,Math.pow(10,6)),this.eGetter=new A3(this.scene),this.clock=new C2,this.level=H3(),this.distantCameras=new b3,this.balls=[],this.activeCamera=this.autoRotatingOrbitCamera,this.stats=S3(),this.setup={level:()=>{this.level.planets.forEach(n=>{const i=new uy({radius:n.radius,color:n.color});i.position.set(n.position.x,n.position.y,n.position.z),this.scene.add(i)});const t=new D3;t.position.set(this.level.initialBallPosition.x,this.level.initialBallPosition.y,this.level.initialBallPosition.z),this.balls.push(t),this.scene.add(t)},light:()=>{const t=new $0(16777215,5e7);t.position.set(0,100,5e3),this.scene.add(t)},cameras:()=>{this.manualOrbitCamera.position.set(400,200,40),this.manualOrbitCamera.lookAt(new ce),this.autoRotatingOrbitCamera.position.set(600,0,0),this.autoRotatingOrbitCamera.lookAt(new ce),this.scene.add(this.distantCameras),this.scene.add(this.manualOrbitCamera)},skybox:()=>this.scene.add(new I3),orbitControls:()=>new w3(this.manualOrbitCamera,this.renderer.domElement)},this.setup.orbitControls(),this.setup.level(),this.setup.light(),this.setup.cameras(),this.setup.skybox(),this.onNewAnimationFrame(),vn.showFPSCounter&&document.body.appendChild(this.stats.dom)}adjustRendererSize(){this.renderer.setSize(innerWidth,innerHeight)}updateCameras(){const t=Date.now()-this.startDate;this.activeCamera.aspect=innerWidth/innerHeight,this.activeCamera.updateProjectionMatrix(),this.autoRotatingOrbitCamera.lookAt(this.balls[0].position);const n=2e3,i=64e-6;this.autoRotatingOrbitCamera.position.set(Math.sin(t*i)*n,Math.abs(Math.cos(t*i)*n),Math.cos(t*i)*n),this.distantCameras.update(this.balls[0].position)}updateBall(t){const n=this.eGetter.getPlanets();n.forEach(i=>{this.balls.forEach(r=>{if(F3(i,r)){const a=O3({staticSphere:i,movingSphere:r}),o=Math.min(1,r.velocity.length()/5);fy.ballHit(o),r.velocity=a,B3(r,i),r.velocity.length()<.2&&(r.isOnPlanet=!0)}})}),n.forEach(i=>{this.balls.forEach(r=>{r.addVelocity(N3({puller:i,pulled:r,timeDelta:t}))})}),this.balls.forEach(i=>{i.tick()})}updateBallTrace(){this.eGetter.getLines().forEach(t=>this.scene.remove(t)),this.balls.forEach(t=>{this.scene.add(t.createTrace())})}onNewAnimationFrame(){const t=this.clock.getDelta();this.renderer.render(this.scene,this.activeCamera),this.stats.update(),this.adjustRendererSize(),this.updateCameras(),this.updateBall(t),this.updateBallTrace(),R3.updateText(this.balls[0]),requestAnimationFrame(this.onNewAnimationFrame.bind(this))}}new V3;
